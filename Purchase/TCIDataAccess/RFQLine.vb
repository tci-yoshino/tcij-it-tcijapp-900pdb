Option Explicit On
Option Infer Off
Option Strict On

Imports System.Text
Imports System.Data.SqlClient
Imports System.Text.RegularExpressions
Imports Purchase.TCIDataAccess.DBCommon

Namespace TCIDataAccess

    ''' <summary> 
    ''' RFQLine データクラス 
    ''' </summary> 
    ''' <remarks>
    ''' <para>Generated by データクラス自動生成ツール Ver 4.1</para>
    ''' </remarks>
    Public Class RFQLine


#Region "User-Defined Constant"

#End Region 'User-Defined Constant End

        Protected _RFQLineNumber As Integer = 0
        Protected _RFQNumber As Integer = 0
        Protected _EnqQuantity As Decimal = 0
        Protected _EnqUnitCode As String = String.Empty
        Protected _EnqPiece As Integer = 0
        Protected _CurrencyCode As String = String.Empty
        Protected _UnitPrice As Decimal? = Nothing
        Protected _QuoPer As Decimal? = Nothing
        Protected _QuoUnitCode As String = String.Empty
        Protected _LeadTime As String = String.Empty
        Protected _SupplierItemNumber As String = String.Empty
        Protected _IncotermsCode As String = String.Empty
        Protected _DeliveryTerm As String = String.Empty
        Protected _Packing As String = String.Empty
        Protected _Purity As String = String.Empty
        Protected _QMMethod As String = String.Empty
        Protected _NoOfferReasonCode As String = String.Empty
        Protected _CreatedBy As Integer = 0
        Protected _CreateDate As DateTime = New DateTime(0)
        Protected _UpdatedBy As Integer = 0
        Protected _UpdateDate As DateTime = New DateTime(0)
        Protected _SupplierOfferNo As String = String.Empty
        Protected _OutputStatus As Boolean = False

        ''' <summary> 
        ''' RFQLineNumber を設定、または取得する 
        ''' </summary> 
        Public Property RFQLineNumber() As Integer
            Get
                Return _RFQLineNumber
            End Get
            Set(ByVal value As Integer)
                _RFQLineNumber = value
            End Set
        End Property

        ''' <summary> 
        ''' RFQNumber を設定、または取得する 
        ''' </summary> 
        Public Property RFQNumber() As Integer
            Get
                Return _RFQNumber
            End Get
            Set(ByVal value As Integer)
                _RFQNumber = value
            End Set
        End Property

        ''' <summary> 
        ''' EnqQuantity を設定、または取得する 
        ''' </summary> 
        Public Property EnqQuantity() As Decimal
            Get
                Return _EnqQuantity
            End Get
            Set(ByVal value As Decimal)
                _EnqQuantity = value
            End Set
        End Property

        ''' <summary> 
        ''' EnqUnitCode を設定、または取得する 
        ''' </summary> 
        Public Property EnqUnitCode() As String
            Get
                Return _EnqUnitCode
            End Get
            Set(ByVal value As String)
                _EnqUnitCode = value
            End Set
        End Property

        ''' <summary> 
        ''' EnqPiece を設定、または取得する 
        ''' </summary> 
        Public Property EnqPiece() As Integer
            Get
                Return _EnqPiece
            End Get
            Set(ByVal value As Integer)
                _EnqPiece = value
            End Set
        End Property

        ''' <summary> 
        ''' CurrencyCode を設定、または取得する 
        ''' </summary> 
        Public Property CurrencyCode() As String
            Get
                Return _CurrencyCode
            End Get
            Set(ByVal value As String)
                _CurrencyCode = value
            End Set
        End Property

        ''' <summary> 
        ''' UnitPrice を設定、または取得する 
        ''' <para>
        ''' ※ Decimal 変数へ格納する場合は以下のようにすること。
        '''     Dim val As Decimal = IIf(UnitPrice.HasValue, UnitPrice, 0)
        '''     Dim val As Decimal = UnitPrice.GetValueOrDefault() 
        ''' </para>
        ''' </summary> 
        Public Property UnitPrice() As Decimal?
            Get
                Return _UnitPrice
            End Get
            Set(ByVal value As Decimal?)
                _UnitPrice = value
            End Set
        End Property

        ''' <summary> 
        ''' QuoPer を設定、または取得する 
        ''' <para>
        ''' ※ Decimal 変数へ格納する場合は以下のようにすること。
        '''     Dim val As Decimal = IIf(QuoPer.HasValue, QuoPer, 0)
        '''     Dim val As Decimal = QuoPer.GetValueOrDefault() 
        ''' </para>
        ''' </summary> 
        Public Property QuoPer() As Decimal?
            Get
                Return _QuoPer
            End Get
            Set(ByVal value As Decimal?)
                _QuoPer = value
            End Set
        End Property

        ''' <summary> 
        ''' QuoUnitCode を設定、または取得する 
        ''' </summary> 
        Public Property QuoUnitCode() As String
            Get
                Return _QuoUnitCode
            End Get
            Set(ByVal value As String)
                _QuoUnitCode = value
            End Set
        End Property

        ''' <summary> 
        ''' LeadTime を設定、または取得する 
        ''' </summary> 
        Public Property LeadTime() As String
            Get
                Return _LeadTime
            End Get
            Set(ByVal value As String)
                _LeadTime = value
            End Set
        End Property

        ''' <summary> 
        ''' SupplierItemNumber を設定、または取得する 
        ''' </summary> 
        Public Property SupplierItemNumber() As String
            Get
                Return _SupplierItemNumber
            End Get
            Set(ByVal value As String)
                _SupplierItemNumber = value
            End Set
        End Property

        ''' <summary> 
        ''' IncotermsCode を設定、または取得する 
        ''' </summary> 
        Public Property IncotermsCode() As String
            Get
                Return _IncotermsCode
            End Get
            Set(ByVal value As String)
                _IncotermsCode = value
            End Set
        End Property

        ''' <summary> 
        ''' DeliveryTerm を設定、または取得する 
        ''' </summary> 
        Public Property DeliveryTerm() As String
            Get
                Return _DeliveryTerm
            End Get
            Set(ByVal value As String)
                _DeliveryTerm = value
            End Set
        End Property

        ''' <summary> 
        ''' Packing を設定、または取得する 
        ''' </summary> 
        Public Property Packing() As String
            Get
                Return _Packing
            End Get
            Set(ByVal value As String)
                _Packing = value
            End Set
        End Property

        ''' <summary> 
        ''' Purity を設定、または取得する 
        ''' </summary> 
        Public Property Purity() As String
            Get
                Return _Purity
            End Get
            Set(ByVal value As String)
                _Purity = value
            End Set
        End Property

        ''' <summary> 
        ''' QMMethod を設定、または取得する 
        ''' </summary> 
        Public Property QMMethod() As String
            Get
                Return _QMMethod
            End Get
            Set(ByVal value As String)
                _QMMethod = value
            End Set
        End Property

        ''' <summary> 
        ''' NoOfferReasonCode を設定、または取得する 
        ''' </summary> 
        Public Property NoOfferReasonCode() As String
            Get
                Return _NoOfferReasonCode
            End Get
            Set(ByVal value As String)
                _NoOfferReasonCode = value
            End Set
        End Property

        ''' <summary> 
        ''' CreatedBy を設定、または取得する 
        ''' </summary> 
        Public Property CreatedBy() As Integer
            Get
                Return _CreatedBy
            End Get
            Set(ByVal value As Integer)
                _CreatedBy = value
            End Set
        End Property

        ''' <summary> 
        ''' CreateDate を設定、または取得する 
        ''' </summary> 
        Public Property CreateDate() As DateTime
            Get
                Return _CreateDate
            End Get
            Set(ByVal value As DateTime)
                _CreateDate = value
            End Set
        End Property

        ''' <summary> 
        ''' UpdatedBy を設定、または取得する 
        ''' </summary> 
        Public Property UpdatedBy() As Integer
            Get
                Return _UpdatedBy
            End Get
            Set(ByVal value As Integer)
                _UpdatedBy = value
            End Set
        End Property

        ''' <summary> 
        ''' UpdateDate を設定、または取得する 
        ''' </summary> 
        Public Property UpdateDate() As DateTime
            Get
                Return _UpdateDate
            End Get
            Set(ByVal value As DateTime)
                _UpdateDate = value
            End Set
        End Property

        ''' <summary> 
        ''' SupplierOfferNo を設定、または取得する 
        ''' </summary> 
        Public Property SupplierOfferNo() As String
            Get
                Return _SupplierOfferNo
            End Get
            Set(ByVal value As String)
                _SupplierOfferNo = value
            End Set
        End Property

        ''' <summary> 
        ''' OutputStatus を設定、または取得する 
        ''' </summary> 
        Public Property OutputStatus() As Boolean
            Get
                Return _OutputStatus
            End Get
            Set(ByVal value As Boolean)
                _OutputStatus = value
            End Set
        End Property

        ''' <summary> 
        ''' コンストラクタ
        ''' </summary> 
        Public Sub New()

        End Sub

        ''' <summary>
        ''' データベースからデータを読み込む。
        ''' </summary>
        ''' <param name="RFQLineNumber">RFQLineNumber</param>
        Public Sub Load(ByVal RFQLineNumber As Integer)

            'データベースからデータを読み込む SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    [RFQLineNumber],")
            Value.AppendLine("    [RFQNumber],")
            Value.AppendLine("    [EnqQuantity],")
            Value.AppendLine("    [EnqUnitCode],")
            Value.AppendLine("    [EnqPiece],")
            Value.AppendLine("    [CurrencyCode],")
            Value.AppendLine("    [UnitPrice],")
            Value.AppendLine("    [QuoPer],")
            Value.AppendLine("    [QuoUnitCode],")
            Value.AppendLine("    [LeadTime],")
            Value.AppendLine("    [SupplierItemNumber],")
            Value.AppendLine("    [IncotermsCode],")
            Value.AppendLine("    [DeliveryTerm],")
            Value.AppendLine("    [Packing],")
            Value.AppendLine("    [Purity],")
            Value.AppendLine("    [QMMethod],")
            Value.AppendLine("    [NoOfferReasonCode],")
            Value.AppendLine("    [CreatedBy],")
            Value.AppendLine("    [CreateDate],")
            Value.AppendLine("    [UpdatedBy],")
            Value.AppendLine("    [UpdateDate],")
            Value.AppendLine("    [SupplierOfferNo],")
            Value.AppendLine("    [OutputStatus]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [RFQLine]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    [RFQLineNumber] = @RFQLineNumber")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBCommand.Parameters.AddWithValue("RFQLineNumber", RFQLineNumber)
                    DBConn.Open()
                    Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()
                    While DBReader.Read()
                        SetProperty(DBReader("RFQLineNumber"), _RFQLineNumber)
                        SetProperty(DBReader("RFQNumber"), _RFQNumber)
                        SetProperty(DBReader("EnqQuantity"), _EnqQuantity)
                        SetProperty(DBReader("EnqUnitCode"), _EnqUnitCode)
                        SetProperty(DBReader("EnqPiece"), _EnqPiece)
                        SetProperty(DBReader("CurrencyCode"), _CurrencyCode)
                        SetProperty(DBReader("UnitPrice"), _UnitPrice)
                        SetProperty(DBReader("QuoPer"), _QuoPer)
                        SetProperty(DBReader("QuoUnitCode"), _QuoUnitCode)
                        SetProperty(DBReader("LeadTime"), _LeadTime)
                        SetProperty(DBReader("SupplierItemNumber"), _SupplierItemNumber)
                        SetProperty(DBReader("IncotermsCode"), _IncotermsCode)
                        SetProperty(DBReader("DeliveryTerm"), _DeliveryTerm)
                        SetProperty(DBReader("Packing"), _Packing)
                        SetProperty(DBReader("Purity"), _Purity)
                        SetProperty(DBReader("QMMethod"), _QMMethod)
                        SetProperty(DBReader("NoOfferReasonCode"), _NoOfferReasonCode)
                        SetProperty(DBReader("CreatedBy"), _CreatedBy)
                        SetProperty(DBReader("CreateDate"), _CreateDate)
                        SetProperty(DBReader("UpdatedBy"), _UpdatedBy)
                        SetProperty(DBReader("UpdateDate"), _UpdateDate)
                        SetProperty(DBReader("SupplierOfferNo"), _SupplierOfferNo)
                        SetProperty(DBReader("OutputStatus"), _OutputStatus)
                    End While
                    DBReader.Close()
                End Using
            End Using

        End Sub

        ''' <summary> 
        ''' データベースへデータを書き込む。
        ''' </summary> 
        ''' <returns>IDENTITY で自動的に挿入された ID 値。更新または IDENTITY 列が無い場合は 0 が返る。</returns> 
        Public Function Save() As Integer

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                DBConn.Open()
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    Dim i_Identity As Integer = Me.Save(DBCommand)
                    Return i_Identity
                End Using
            End Using

        End Function

        ''' <summary> 
        ''' データベースへデータを書き込む。(Facade 専用)
        ''' </summary> 
        ''' <param name="DBCommand">SqlCommand</param>
        ''' <returns>IDENTITY で自動的に挿入された ID 値。更新または IDENTITY 列が無い場合は 0 が返る。</returns> 
        Public Function Save(ByVal DBCommand As SqlCommand) As Integer

            Dim i_ID As Integer = 0
            DBCommand.CommandText = CreateSaveSQL()
            DBCommand.Parameters.Clear()
            DBCommand.Parameters.AddWithValue("RFQLineNumber", _RFQLineNumber)
            DBCommand.Parameters.AddWithValue("RFQNumber", _RFQNumber)
            DBCommand.Parameters.AddWithValue("EnqQuantity", _EnqQuantity)
            DBCommand.Parameters.AddWithValue("EnqUnitCode", _EnqUnitCode)
            DBCommand.Parameters.AddWithValue("EnqPiece", _EnqPiece)
            DBCommand.Parameters.AddWithValue("CurrencyCode", ConvertEmptyStringToNull(_CurrencyCode))
            DBCommand.Parameters.AddWithValue("UnitPrice", ConvertNothingToNull(_UnitPrice))
            DBCommand.Parameters.AddWithValue("QuoPer", ConvertNothingToNull(_QuoPer))
            DBCommand.Parameters.AddWithValue("QuoUnitCode", ConvertEmptyStringToNull(_QuoUnitCode))
            DBCommand.Parameters.AddWithValue("LeadTime", ConvertEmptyStringToNull(_LeadTime))
            DBCommand.Parameters.AddWithValue("SupplierItemNumber", ConvertEmptyStringToNull(_SupplierItemNumber))
            DBCommand.Parameters.AddWithValue("IncotermsCode", ConvertEmptyStringToNull(_IncotermsCode))
            DBCommand.Parameters.AddWithValue("DeliveryTerm", ConvertEmptyStringToNull(_DeliveryTerm))
            DBCommand.Parameters.AddWithValue("Packing", ConvertEmptyStringToNull(_Packing))
            DBCommand.Parameters.AddWithValue("Purity", ConvertEmptyStringToNull(_Purity))
            DBCommand.Parameters.AddWithValue("QMMethod", ConvertEmptyStringToNull(_QMMethod))
            DBCommand.Parameters.AddWithValue("NoOfferReasonCode", ConvertEmptyStringToNull(_NoOfferReasonCode))
            DBCommand.Parameters.AddWithValue("CreatedBy", _CreatedBy)
            DBCommand.Parameters.AddWithValue("UpdatedBy", _UpdatedBy)
            DBCommand.Parameters.AddWithValue("SupplierOfferNo", ConvertEmptyStringToNull(_SupplierOfferNo))
            DBCommand.Parameters.AddWithValue("OutputStatus", _OutputStatus)
            Dim ob_ID As Object = DBCommand.ExecuteScalar()
            If Not IsDBNull(ob_ID) Then
                i_ID = CInt(ob_ID)
            End If
            Return i_ID

        End Function

        ''' <summary> 
        ''' データベースへデータを書き込む SQL 文字列を生成する。
        ''' </summary> 
        ''' <returns>生成した SQL 文字列</returns> 
        Private Function CreateSaveSQL() As String

            Dim Value As New StringBuilder()
            Value.AppendLine("IF(")
            Value.AppendLine("    SELECT")
            Value.AppendLine("        COUNT(*)")
            Value.AppendLine("    FROM")
            Value.AppendLine("        [RFQLine]")
            Value.AppendLine("    WHERE")
            Value.AppendLine("        [RFQLineNumber] = @RFQLineNumber")
            Value.AppendLine("    ) = 0")
            Value.AppendLine("        INSERT [RFQLine] (")
            Value.AppendLine("            [RFQNumber],")
            Value.AppendLine("            [EnqQuantity],")
            Value.AppendLine("            [EnqUnitCode],")
            Value.AppendLine("            [EnqPiece],")
            Value.AppendLine("            [CurrencyCode],")
            Value.AppendLine("            [UnitPrice],")
            Value.AppendLine("            [QuoPer],")
            Value.AppendLine("            [QuoUnitCode],")
            Value.AppendLine("            [LeadTime],")
            Value.AppendLine("            [SupplierItemNumber],")
            Value.AppendLine("            [IncotermsCode],")
            Value.AppendLine("            [DeliveryTerm],")
            Value.AppendLine("            [Packing],")
            Value.AppendLine("            [Purity],")
            Value.AppendLine("            [QMMethod],")
            Value.AppendLine("            [NoOfferReasonCode],")
            Value.AppendLine("            [CreatedBy],")
            Value.AppendLine("            [CreateDate],")
            Value.AppendLine("            [UpdatedBy],")
            Value.AppendLine("            [UpdateDate],")
            Value.AppendLine("            [SupplierOfferNo],")
            Value.AppendLine("            [OutputStatus]")
            Value.AppendLine("        )")
            Value.AppendLine("        Values(")
            Value.AppendLine("            @RFQNumber,")
            Value.AppendLine("            @EnqQuantity,")
            Value.AppendLine("            @EnqUnitCode,")
            Value.AppendLine("            @EnqPiece,")
            Value.AppendLine("            @CurrencyCode,")
            Value.AppendLine("            @UnitPrice,")
            Value.AppendLine("            @QuoPer,")
            Value.AppendLine("            @QuoUnitCode,")
            Value.AppendLine("            @LeadTime,")
            Value.AppendLine("            @SupplierItemNumber,")
            Value.AppendLine("            @IncotermsCode,")
            Value.AppendLine("            @DeliveryTerm,")
            Value.AppendLine("            @Packing,")
            Value.AppendLine("            @Purity,")
            Value.AppendLine("            @QMMethod,")
            Value.AppendLine("            @NoOfferReasonCode,")
            Value.AppendLine("            @CreatedBy,")
            Value.AppendLine("            GETDATE(),")
            Value.AppendLine("            @UpdatedBy,")
            Value.AppendLine("            GETDATE(),")
            Value.AppendLine("            @SupplierOfferNo,")
            Value.AppendLine("            @OutputStatus")
            Value.AppendLine("        )")
            Value.AppendLine("    ELSE")
            Value.AppendLine("        UPDATE")
            Value.AppendLine("            [RFQLine]")
            Value.AppendLine("        SET")
            Value.AppendLine("            [RFQNumber] = @RFQNumber,")
            Value.AppendLine("            [EnqQuantity] = @EnqQuantity,")
            Value.AppendLine("            [EnqUnitCode] = @EnqUnitCode,")
            Value.AppendLine("            [EnqPiece] = @EnqPiece,")
            Value.AppendLine("            [CurrencyCode] = @CurrencyCode,")
            Value.AppendLine("            [UnitPrice] = @UnitPrice,")
            Value.AppendLine("            [QuoPer] = @QuoPer,")
            Value.AppendLine("            [QuoUnitCode] = @QuoUnitCode,")
            Value.AppendLine("            [LeadTime] = @LeadTime,")
            Value.AppendLine("            [SupplierItemNumber] = @SupplierItemNumber,")
            Value.AppendLine("            [IncotermsCode] = @IncotermsCode,")
            Value.AppendLine("            [DeliveryTerm] = @DeliveryTerm,")
            Value.AppendLine("            [Packing] = @Packing,")
            Value.AppendLine("            [Purity] = @Purity,")
            Value.AppendLine("            [QMMethod] = @QMMethod,")
            Value.AppendLine("            [NoOfferReasonCode] = @NoOfferReasonCode,")
            Value.AppendLine("            [UpdatedBy] = @UpdatedBy,")
            Value.AppendLine("            [UpdateDate] = GETDATE(),")
            Value.AppendLine("            [SupplierOfferNo] = @SupplierOfferNo,")
            Value.AppendLine("            [OutputStatus] = @OutputStatus")
            Value.AppendLine("        WHERE ")
            Value.AppendLine("            [RFQLineNumber] = @RFQLineNumber")
            Value.AppendLine(";")
            Value.AppendLine("SELECT SCOPE_IDENTITY();")
            Return Value.ToString()

        End Function

        ''' <summary> 
        ''' データの存在チェックを行う。
        ''' </summary> 
        ''' <returns>存在する場合は True、しない場合は False を返す</returns> 
        ''' <param name="RFQLineNumber">RFQLineNumber</param>
        Public Shared Function IsExists(ByVal RFQLineNumber As Integer) As Boolean

            ' データの存在チェックを行う SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    COUNT(*)")
            Value.AppendLine("FROM")
            Value.AppendLine("    [RFQLine]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    [RFQLineNumber] = @RFQLineNumber")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBCommand.Parameters.Clear()
                    DBCommand.Parameters.AddWithValue("RFQLineNumber", RFQLineNumber)
                    DBConn.Open()
                    Dim i_Count As Integer = Convert.ToInt32(DBCommand.ExecuteScalar())
                    Return i_Count > 0
                End Using
            End Using

        End Function

#Region "User-Defined Methods"

        '''' <summary>
        '''' データベースのデータを削除する
        '''' </summary>
        '''' <param name="RFQLineNumber">RFQLineNumber</param>
        'Public Sub Delete(ByVal RFQLineNumber As Integer)

        '    Using DBConn As New SqlConnection(DB_CONNECT_STRING)
        '        DBConn.Open()
        '        Using DBCommand As SqlCommand = DBConn.CreateCommand()
        '            Delete(DBCommand, RFQLineNumber)
        '        End Using
        '    End Using

        'End Sub

        '''' <summary>
        '''' データベースのデータを削除する (Facade 専用)
        '''' </summary>
        '''' <param name="DBCommand">SqlCommand</param>
        '''' <param name="RFQLineNumber">RFQLineNumber</param>
        'Public Sub Delete(ByVal DBCommand As SqlCommand, _
        '                  ByVal RFQLineNumber As Integer)

        '    'データベースのデータを削除する SQL 文字列を生成する
        '    Dim Value As New StringBuilder()
        '    Value.AppendLine("DELETE FROM [RFQLine]")
        '    Value.AppendLine("WHERE")
        '    Value.AppendLine("    [RFQLineNumber] = @RFQLineNumber")

        '    DBCommand.CommandText = Value.ToString()
        '    DBCommand.Parameters.Clear()
        '    DBCommand.Parameters.AddWithValue("RFQLineNumber", RFQLineNumber)
        '    DBCommand.ExecuteNonQuery()

        'End Sub

#End Region 'User-Defined Methods End

    End Class

    ''' <summary> 
    ''' RFQLine リストクラス 
    ''' </summary> 
    Public Class RFQLineList
        Inherits List(Of RFQLine)

#Region "User-Defined Constant of List"

#End Region 'User-Defined Constant of List End

        ''' <summary>
        ''' コンストラクタ
        ''' </summary>
        Public Sub New()

        End Sub

#Region "User-Defined Methods of List"

        '''' <summary>
        '''' データベースから全てのデータを読み込む
        '''' </summary>
        'Public Sub Load()

        '    'データベースから全てのデータを読み込む SQL 文字列を生成する
        '    Dim Value As New StringBuilder()
        '    Value.AppendLine("SELECT")
        '    Value.AppendLine("    [RFQLineNumber],")
        '    Value.AppendLine("    [RFQNumber],")
        '    Value.AppendLine("    [EnqQuantity],")
        '    Value.AppendLine("    [EnqUnitCode],")
        '    Value.AppendLine("    [EnqPiece],")
        '    Value.AppendLine("    [CurrencyCode],")
        '    Value.AppendLine("    [UnitPrice],")
        '    Value.AppendLine("    [QuoPer],")
        '    Value.AppendLine("    [QuoUnitCode],")
        '    Value.AppendLine("    [LeadTime],")
        '    Value.AppendLine("    [SupplierItemNumber],")
        '    Value.AppendLine("    [IncotermsCode],")
        '    Value.AppendLine("    [DeliveryTerm],")
        '    Value.AppendLine("    [Packing],")
        '    Value.AppendLine("    [Purity],")
        '    Value.AppendLine("    [QMMethod],")
        '    Value.AppendLine("    [NoOfferReasonCode],")
        '    Value.AppendLine("    [CreatedBy],")
        '    Value.AppendLine("    [CreateDate],")
        '    Value.AppendLine("    [UpdatedBy],")
        '    Value.AppendLine("    [UpdateDate],")
        '    Value.AppendLine("    [SupplierOfferNo],")
        '    Value.AppendLine("    [OutputStatus]")
        '    Value.AppendLine("FROM")
        '    Value.AppendLine("    [RFQLine]")

        '    Using DBConn As New SqlConnection(DB_CONNECT_STRING)
        '        Using DBCommand As SqlCommand = DBConn.CreateCommand()
        '            DBCommand.CommandText = Value.ToString()
        '            DBConn.Open()
        '            Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()
        '            While DBReader.Read()
        '                Dim dc_RFQLine As New RFQLine()
        '                SetProperty(DBReader("RFQLineNumber"), dc_RFQLine.RFQLineNumber)
        '                SetProperty(DBReader("RFQNumber"), dc_RFQLine.RFQNumber)
        '                SetProperty(DBReader("EnqQuantity"), dc_RFQLine.EnqQuantity)
        '                SetProperty(DBReader("EnqUnitCode"), dc_RFQLine.EnqUnitCode)
        '                SetProperty(DBReader("EnqPiece"), dc_RFQLine.EnqPiece)
        '                SetProperty(DBReader("CurrencyCode"), dc_RFQLine.CurrencyCode)
        '                SetProperty(DBReader("UnitPrice"), dc_RFQLine.UnitPrice)
        '                SetProperty(DBReader("QuoPer"), dc_RFQLine.QuoPer)
        '                SetProperty(DBReader("QuoUnitCode"), dc_RFQLine.QuoUnitCode)
        '                SetProperty(DBReader("LeadTime"), dc_RFQLine.LeadTime)
        '                SetProperty(DBReader("SupplierItemNumber"), dc_RFQLine.SupplierItemNumber)
        '                SetProperty(DBReader("IncotermsCode"), dc_RFQLine.IncotermsCode)
        '                SetProperty(DBReader("DeliveryTerm"), dc_RFQLine.DeliveryTerm)
        '                SetProperty(DBReader("Packing"), dc_RFQLine.Packing)
        '                SetProperty(DBReader("Purity"), dc_RFQLine.Purity)
        '                SetProperty(DBReader("QMMethod"), dc_RFQLine.QMMethod)
        '                SetProperty(DBReader("NoOfferReasonCode"), dc_RFQLine.NoOfferReasonCode)
        '                SetProperty(DBReader("CreatedBy"), dc_RFQLine.CreatedBy)
        '                SetProperty(DBReader("CreateDate"), dc_RFQLine.CreateDate)
        '                SetProperty(DBReader("UpdatedBy"), dc_RFQLine.UpdatedBy)
        '                SetProperty(DBReader("UpdateDate"), dc_RFQLine.UpdateDate)
        '                SetProperty(DBReader("SupplierOfferNo"), dc_RFQLine.SupplierOfferNo)
        '                SetProperty(DBReader("OutputStatus"), dc_RFQLine.OutputStatus)
        '                Me.Add(dc_RFQLine)
        '            End While
        '            DBReader.Close()
        '        End Using
        '    End Using

        'End Sub

#End Region 'User-Defined Methods of List End

    End Class

End Namespace
