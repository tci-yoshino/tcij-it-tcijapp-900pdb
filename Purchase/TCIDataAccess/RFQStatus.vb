Option Explicit On
Option Infer Off
Option Strict On

Imports System.Text
Imports System.Data.SqlClient
Imports System.Text.RegularExpressions
Imports Purchase.TCIDataAccess.DBCommon

Namespace TCIDataAccess

    ''' <summary> 
    ''' RFQStatus データクラス 
    ''' </summary> 
    ''' <remarks>
    ''' <para>Generated by データクラス自動生成ツール Ver 4.1</para>
    ''' </remarks>
    Public Class RFQStatus


#Region "User-Defined Constant"

#End Region 'User-Defined Constant End

        Protected _RFQStatusCode As String = String.Empty
        Protected _Text As String = String.Empty
        Protected _SortOrder As Integer = 0

        ''' <summary> 
        ''' RFQStatusCode を設定、または取得する 
        ''' </summary> 
        Public Property RFQStatusCode() As String
            Get
                Return _RFQStatusCode
            End Get
            Set(ByVal value As String)
                _RFQStatusCode = value
            End Set
        End Property

        ''' <summary> 
        ''' Text を設定、または取得する 
        ''' </summary> 
        Public Property Text() As String
            Get
                Return _Text
            End Get
            Set(ByVal value As String)
                _Text = value
            End Set
        End Property

        ''' <summary> 
        ''' SortOrder を設定、または取得する 
        ''' </summary> 
        Public Property SortOrder() As Integer
            Get
                Return _SortOrder
            End Get
            Set(ByVal value As Integer)
                _SortOrder = value
            End Set
        End Property

        ''' <summary> 
        ''' コンストラクタ
        ''' </summary> 
        Public Sub New()

        End Sub

        ''' <summary>
        ''' データベースからデータを読み込む。
        ''' </summary>
        ''' <param name="RFQStatusCode">RFQStatusCode</param>
        Public Sub Load(ByVal RFQStatusCode As String)

            'データベースからデータを読み込む SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    [RFQStatusCode],")
            Value.AppendLine("    [Text],")
            Value.AppendLine("    [SortOrder]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [RFQStatus]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    [RFQStatusCode] = @RFQStatusCode")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBCommand.Parameters.AddWithValue("RFQStatusCode", RFQStatusCode)
                    DBConn.Open()
                    Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()
                    While DBReader.Read()
                        SetProperty(DBReader("RFQStatusCode"), _RFQStatusCode)
                        SetProperty(DBReader("Text"), _Text)
                        SetProperty(DBReader("SortOrder"), _SortOrder)
                    End While
                    DBReader.Close()
                End Using
            End Using

        End Sub

        ''' <summary> 
        ''' データベースへデータを書き込む。
        ''' </summary> 
        ''' <returns>IDENTITY で自動的に挿入された ID 値。更新または IDENTITY 列が無い場合は 0 が返る。</returns> 
        Public Function Save() As Integer

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                DBConn.Open()
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    Dim i_Identity As Integer = Me.Save(DBCommand)
                    Return i_Identity
                End Using
            End Using

        End Function

        ''' <summary> 
        ''' データベースへデータを書き込む。(Facade 専用)
        ''' </summary> 
        ''' <param name="DBCommand">SqlCommand</param>
        ''' <returns>IDENTITY で自動的に挿入された ID 値。更新または IDENTITY 列が無い場合は 0 が返る。</returns> 
        Public Function Save(ByVal DBCommand As SqlCommand) As Integer

            Dim i_ID As Integer = 0
            DBCommand.CommandText = CreateSaveSQL()
            DBCommand.Parameters.Clear()
            DBCommand.Parameters.AddWithValue("RFQStatusCode", _RFQStatusCode)
            DBCommand.Parameters.AddWithValue("Text", _Text)
            DBCommand.Parameters.AddWithValue("SortOrder", _SortOrder)
            Dim ob_ID As Object = DBCommand.ExecuteScalar()
            If Not IsDBNull(ob_ID) Then
                i_ID = CInt(ob_ID)
            End If
            Return i_ID

        End Function

        ''' <summary> 
        ''' データベースへデータを書き込む SQL 文字列を生成する。
        ''' </summary> 
        ''' <returns>生成した SQL 文字列</returns> 
        Private Function CreateSaveSQL() As String

            Dim Value As New StringBuilder()
            Value.AppendLine("IF(")
            Value.AppendLine("    SELECT")
            Value.AppendLine("        COUNT(*)")
            Value.AppendLine("    FROM")
            Value.AppendLine("        [RFQStatus]")
            Value.AppendLine("    WHERE")
            Value.AppendLine("        [RFQStatusCode] = @RFQStatusCode")
            Value.AppendLine("    ) = 0")
            Value.AppendLine("        INSERT [RFQStatus] (")
            Value.AppendLine("            [RFQStatusCode],")
            Value.AppendLine("            [Text],")
            Value.AppendLine("            [SortOrder]")
            Value.AppendLine("        )")
            Value.AppendLine("        Values(")
            Value.AppendLine("            @RFQStatusCode,")
            Value.AppendLine("            @Text,")
            Value.AppendLine("            @SortOrder")
            Value.AppendLine("        )")
            Value.AppendLine("    ELSE")
            Value.AppendLine("        UPDATE")
            Value.AppendLine("            [RFQStatus]")
            Value.AppendLine("        SET")
            Value.AppendLine("            [RFQStatusCode] = @RFQStatusCode,")
            Value.AppendLine("            [Text] = @Text,")
            Value.AppendLine("            [SortOrder] = @SortOrder")
            Value.AppendLine("        WHERE ")
            Value.AppendLine("            [RFQStatusCode] = @RFQStatusCode")
            Value.AppendLine(";")
            Value.AppendLine("SELECT SCOPE_IDENTITY();")
            Return Value.ToString()

        End Function

        ''' <summary> 
        ''' データの存在チェックを行う。
        ''' </summary> 
        ''' <returns>存在する場合は True、しない場合は False を返す</returns> 
        ''' <param name="RFQStatusCode">RFQStatusCode</param>
        Public Shared Function IsExists(ByVal RFQStatusCode As String) As Boolean

            ' データの存在チェックを行う SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    COUNT(*)")
            Value.AppendLine("FROM")
            Value.AppendLine("    [RFQStatus]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    [RFQStatusCode] = @RFQStatusCode")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBCommand.Parameters.Clear()
                    DBCommand.Parameters.AddWithValue("RFQStatusCode", RFQStatusCode)
                    DBConn.Open()
                    Dim i_Count As Integer = Convert.ToInt32(DBCommand.ExecuteScalar())
                    Return i_Count > 0
                End Using
            End Using

        End Function

#Region "User-Defined Methods"

        '''' <summary>
        '''' データベースのデータを削除する
        '''' </summary>
        '''' <param name="RFQStatusCode">RFQStatusCode</param>
        'Public Sub Delete(ByVal RFQStatusCode As String)

        '    Using DBConn As New SqlConnection(DB_CONNECT_STRING)
        '        DBConn.Open()
        '        Using DBCommand As SqlCommand = DBConn.CreateCommand()
        '            Delete(DBCommand, RFQStatusCode)
        '        End Using
        '    End Using

        'End Sub

        '''' <summary>
        '''' データベースのデータを削除する (Facade 専用)
        '''' </summary>
        '''' <param name="DBCommand">SqlCommand</param>
        '''' <param name="RFQStatusCode">RFQStatusCode</param>
        'Public Sub Delete(ByVal DBCommand As SqlCommand, _
        '                  ByVal RFQStatusCode As String)

        '    'データベースのデータを削除する SQL 文字列を生成する
        '    Dim Value As New StringBuilder()
        '    Value.AppendLine("DELETE FROM [RFQStatus]")
        '    Value.AppendLine("WHERE")
        '    Value.AppendLine("    [RFQStatusCode] = @RFQStatusCode")

        '    DBCommand.CommandText = Value.ToString()
        '    DBCommand.Parameters.Clear()
        '    DBCommand.Parameters.AddWithValue("RFQStatusCode", RFQStatusCode)
        '    DBCommand.ExecuteNonQuery()

        'End Sub

#End Region 'User-Defined Methods End

    End Class

    ''' <summary> 
    ''' RFQStatus リストクラス 
    ''' </summary> 
    Public Class RFQStatusList
        Inherits List(Of RFQStatus)

#Region "User-Defined Constant of List"

#End Region 'User-Defined Constant of List End

        ''' <summary>
        ''' コンストラクタ
        ''' </summary>
        Public Sub New()

        End Sub

#Region "User-Defined Methods of List"

        ''' <summary>
        ''' データベースから全てのデータを読み込む
        ''' </summary>
        Public Sub Load()

            'データベースから全てのデータを読み込む SQL 文字列を生成する
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    [RFQStatusCode],")
            Value.AppendLine("    [Text],")
            Value.AppendLine("    [SortOrder]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [RFQStatus]")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBConn.Open()
                    Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()
                    While DBReader.Read()
                        Dim dc_RFQStatus As New RFQStatus()
                        SetProperty(DBReader("RFQStatusCode"), dc_RFQStatus.RFQStatusCode)
                        SetProperty(DBReader("Text"), dc_RFQStatus.Text)
                        SetProperty(DBReader("SortOrder"), dc_RFQStatus.SortOrder)
                        Me.Add(dc_RFQStatus)
                    End While
                    DBReader.Close()
                End Using
            End Using

        End Sub

        ''' <summary>
        ''' RFQStatusドロップダウンリスト設定
        ''' </summary>
        ''' <param name="Combo">ドロップダウンリスト</param>
        ''' <param name="st_FirstItemText">先頭項目名</param>
        ''' <remarks></remarks>
        Public Sub SetRFQStatusDropDownList(ByVal Combo As System.Web.UI.WebControls.ListControl, ByVal st_FirstItemText As String)
            Combo.Items.Clear()
            Me.Load()

            If Not String.IsNullOrEmpty(st_FirstItemText) Then
                Combo.Items.Add(New ListItem(st_FirstItemText, st_FirstItemText))
            End If

            For Each RFQStatus As RFQStatus In Me
                Combo.Items.Add(New ListItem(RFQStatus.Text, RFQStatus.RFQStatusCode))
            Next
        End Sub

#End Region 'User-Defined Methods of List End

    End Class

End Namespace
