Option Explicit On
Option Infer Off
Option Strict On

Imports System.Text
Imports System.Data.SqlClient
Imports System.Text.RegularExpressions
Imports Purchase.TCIDataAccess.DBCommon

Namespace TCIDataAccess

    ''' <summary> 
    ''' s_EhsHeader データクラス 
    ''' </summary> 
    ''' <remarks>
    ''' <para>Generated by データクラス自動生成ツール Ver 4.1</para>
    ''' </remarks>
    Public Class s_EhsHeader


        Protected _LocationCode As String = String.Empty
        Protected _Item As String = String.Empty
        Protected _Text As String = String.Empty
        Protected _SortOrder As Integer = 0
        Protected _isRestockingControlSettings As Boolean = False
        Protected _isOutputTransferOrder As Boolean = False
        Protected _isOutputPriceRevision As Boolean = False
        Protected _CreatedBy As Integer = 0
        Protected _CreateDate As DateTime = New DateTime(0)
        Protected _UpdatedBy As Integer = 0
        Protected _UpdateDate As DateTime = New DateTime(0)

        ''' <summary> 
        ''' LocationCode を設定、または取得する 
        ''' </summary> 
        Public Property LocationCode() As String
            Get
                Return _LocationCode
            End Get
            Set(ByVal value As String)
                _LocationCode = value
            End Set
        End Property

        ''' <summary> 
        ''' Item を設定、または取得する 
        ''' </summary> 
        Public Property Item() As String
            Get
                Return _Item
            End Get
            Set(ByVal value As String)
                _Item = value
            End Set
        End Property

        ''' <summary> 
        ''' Text を設定、または取得する 
        ''' </summary> 
        Public Property Text() As String
            Get
                Return _Text
            End Get
            Set(ByVal value As String)
                _Text = value
            End Set
        End Property

        ''' <summary> 
        ''' SortOrder を設定、または取得する 
        ''' </summary> 
        Public Property SortOrder() As Integer
            Get
                Return _SortOrder
            End Get
            Set(ByVal value As Integer)
                _SortOrder = value
            End Set
        End Property

        ''' <summary> 
        ''' isRestockingControlSettings を設定、または取得する 
        ''' </summary> 
        Public Property isRestockingControlSettings() As Boolean
            Get
                Return _isRestockingControlSettings
            End Get
            Set(ByVal value As Boolean)
                _isRestockingControlSettings = value
            End Set
        End Property

        ''' <summary> 
        ''' isOutputTransferOrder を設定、または取得する 
        ''' </summary> 
        Public Property isOutputTransferOrder() As Boolean
            Get
                Return _isOutputTransferOrder
            End Get
            Set(ByVal value As Boolean)
                _isOutputTransferOrder = value
            End Set
        End Property

        ''' <summary> 
        ''' isOutputPriceRevision を設定、または取得する 
        ''' </summary> 
        Public Property isOutputPriceRevision() As Boolean
            Get
                Return _isOutputPriceRevision
            End Get
            Set(ByVal value As Boolean)
                _isOutputPriceRevision = value
            End Set
        End Property

        ''' <summary> 
        ''' CreatedBy を設定、または取得する 
        ''' </summary> 
        Public Property CreatedBy() As Integer
            Get
                Return _CreatedBy
            End Get
            Set(ByVal value As Integer)
                _CreatedBy = value
            End Set
        End Property

        ''' <summary> 
        ''' CreateDate を設定、または取得する 
        ''' </summary> 
        Public Property CreateDate() As DateTime
            Get
                Return _CreateDate
            End Get
            Set(ByVal value As DateTime)
                _CreateDate = value
            End Set
        End Property

        ''' <summary> 
        ''' UpdatedBy を設定、または取得する 
        ''' </summary> 
        Public Property UpdatedBy() As Integer
            Get
                Return _UpdatedBy
            End Get
            Set(ByVal value As Integer)
                _UpdatedBy = value
            End Set
        End Property

        ''' <summary> 
        ''' UpdateDate を設定、または取得する 
        ''' </summary> 
        Public Property UpdateDate() As DateTime
            Get
                Return _UpdateDate
            End Get
            Set(ByVal value As DateTime)
                _UpdateDate = value
            End Set
        End Property

        ''' <summary> 
        ''' コンストラクタ
        ''' </summary> 
        Public Sub New()

        End Sub

        ''' <summary>
        ''' データベースからデータを読み込む。
        ''' </summary>
        ''' <param name="Item">Item</param>
        Public Sub Load(ByVal Item As String)

            'データベースからデータを読み込む SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    [LocationCode],")
            Value.AppendLine("    [Item],")
            Value.AppendLine("    [Text],")
            Value.AppendLine("    [SortOrder],")
            Value.AppendLine("    [isRestockingControlSettings],")
            Value.AppendLine("    [isOutputTransferOrder],")
            Value.AppendLine("    [isOutputPriceRevision],")
            Value.AppendLine("    [CreatedBy],")
            Value.AppendLine("    [CreateDate],")
            Value.AppendLine("    [UpdatedBy],")
            Value.AppendLine("    [UpdateDate]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [s_EhsHeader]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    [Item] = @Item")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBCommand.Parameters.AddWithValue("Item", Item)
                    DBConn.Open()
                    Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()
                    While DBReader.Read()
                        SetProperty(DBReader("LocationCode"), _LocationCode)
                        SetProperty(DBReader("Item"), _Item)
                        SetProperty(DBReader("Text"), _Text)
                        SetProperty(DBReader("SortOrder"), _SortOrder)
                        SetProperty(DBReader("isRestockingControlSettings"), _isRestockingControlSettings)
                        SetProperty(DBReader("isOutputTransferOrder"), _isOutputTransferOrder)
                        SetProperty(DBReader("isOutputPriceRevision"), _isOutputPriceRevision)
                        SetProperty(DBReader("CreatedBy"), _CreatedBy)
                        SetProperty(DBReader("CreateDate"), _CreateDate)
                        SetProperty(DBReader("UpdatedBy"), _UpdatedBy)
                        SetProperty(DBReader("UpdateDate"), _UpdateDate)
                    End While
                    DBReader.Close()
                End Using
            End Using

        End Sub

        ''' <summary> 
        ''' データの存在チェックを行う。
        ''' </summary> 
        ''' <returns>存在する場合は True、しない場合は False を返す</returns> 
        ''' <param name="Item">Item</param>
        Public Shared Function IsExists(ByVal Item As String) As Boolean

            ' データの存在チェックを行う SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    COUNT(*)")
            Value.AppendLine("FROM")
            Value.AppendLine("    [s_EhsHeader]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    [Item] = @Item")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBCommand.Parameters.Clear()
                    DBCommand.Parameters.AddWithValue("Item", Item)
                    DBConn.Open()
                    Dim i_Count As Integer = Convert.ToInt32(DBCommand.ExecuteScalar())
                    Return i_Count > 0
                End Using
            End Using

        End Function

    End Class

    ''' <summary> 
    ''' s_EhsHeader リストクラス 
    ''' </summary> 
    Public Class s_EhsHeaderList
        Inherits List(Of s_EhsHeader)

        Public Sub New()
            MyBase.New

        End Sub

        ''' <summary>
        ''' データベースから拠点初期設定のデータを読み込む（拠点ソート）
        ''' </summary>
        ''' <param name="locationCode"></param>
        Public Sub LoadForLocation(ByVal locationCode As String)
            'データベースから全てのデータを読み込む SQL 文字列を生成する
            Dim Value As StringBuilder = New StringBuilder
            Value.AppendLine("SELECT")
            Value.AppendLine("    [LocationCode],")
            Value.AppendLine("    [Item],")
            Value.AppendLine("    [Text],")
            Value.AppendLine("    [SortOrder],")
            Value.AppendLine("    [isRestockingControlSettings],")
            Value.AppendLine("    [isOutputTransferOrder],")
            Value.AppendLine("    [isOutputPriceRevision],")
            Value.AppendLine("    [CreatedBy],")
            Value.AppendLine("    [CreateDate],")
            Value.AppendLine("    [UpdatedBy],")
            Value.AppendLine("    [UpdateDate]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [s_EhsHeader]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    [LocationCode] IN (@global, @locationCode)")
            Value.AppendLine("ORDER BY")
            Value.AppendLine("    CASE WHEN [LocationCode] = @global THEN 0 ELSE 1 END, [LocationCode],")
            Value.AppendLine("    [SortOrder]")
            Dim DBConn As SqlConnection = New SqlConnection(DBCommon.DB_CONNECT_STRING)
            Dim DBCommand As SqlCommand = DBConn.CreateCommand
            DBCommand.CommandText = Value.ToString
            DBCommand.Parameters.Clear()
            DBCommand.Parameters.AddWithValue("global", Common.LOCATION_CODE_GL)
            DBCommand.Parameters.AddWithValue("locationCode", locationCode)
            DBConn.Open()
            Dim DBReader As SqlDataReader = DBCommand.ExecuteReader

            While DBReader.Read
                Dim _LocationCode As String = String.Empty
                Dim _Item As String = String.Empty
                Dim _Text As String = String.Empty
                Dim _SortOrder As Integer = 0
                Dim _isRestockingControlSettings As Boolean = False
                Dim _isOutputTransferOrder As Boolean = False
                Dim _isOutputPriceRevision As Boolean = False
                Dim _CreatedBy As Integer = 0
                Dim _CreateDate As DateTime = New DateTime(0)
                Dim _UpdatedBy As Integer = 0
                Dim _UpdateDate As DateTime = New DateTime(0)
                Dim dc_EhsHeader As s_EhsHeader = New s_EhsHeader
                DBCommon.SetProperty(DBReader("LocationCode"), _LocationCode)
                DBCommon.SetProperty(DBReader("Item"), _Item)
                DBCommon.SetProperty(DBReader("Text"), _Text)
                DBCommon.SetProperty(DBReader("SortOrder"), _SortOrder)
                DBCommon.SetProperty(DBReader("isRestockingControlSettings"), _isRestockingControlSettings)
                DBCommon.SetProperty(DBReader("isOutputTransferOrder"), _isOutputTransferOrder)
                DBCommon.SetProperty(DBReader("isOutputPriceRevision"), _isOutputPriceRevision)
                DBCommon.SetProperty(DBReader("CreatedBy"), _CreatedBy)
                DBCommon.SetProperty(DBReader("CreateDate"), _CreateDate)
                DBCommon.SetProperty(DBReader("UpdatedBy"), _UpdatedBy)
                DBCommon.SetProperty(DBReader("UpdateDate"), _UpdateDate)
                dc_EhsHeader.LocationCode = _LocationCode
                dc_EhsHeader.Item = _Item
                dc_EhsHeader.Text = _Text
                dc_EhsHeader.SortOrder = _SortOrder
                dc_EhsHeader.isRestockingControlSettings = _isRestockingControlSettings
                dc_EhsHeader.isOutputTransferOrder = _isOutputTransferOrder
                dc_EhsHeader.isOutputPriceRevision = _isOutputPriceRevision
                dc_EhsHeader.CreatedBy = _CreatedBy
                dc_EhsHeader.CreateDate = _CreateDate
                dc_EhsHeader.UpdatedBy = _UpdatedBy
                dc_EhsHeader.UpdateDate = _UpdateDate
                Me.Add(dc_EhsHeader)

            End While

            DBReader.Close()
        End Sub

        ''' <summary>
        ''' データベースから全てのデータを読み込む（拠点ソート）    
        ''' </summary>
        Public Sub Load(ByVal locationCode As String)
            'データベースから全てのデータを読み込む SQL 文字列を生成する
            Dim Value As StringBuilder = New StringBuilder
            Value.AppendLine("SELECT")
            Value.AppendLine("    [LocationCode],")
            Value.AppendLine("    [Item],")
            Value.AppendLine("    [Text],")
            Value.AppendLine("    [SortOrder],")
            Value.AppendLine("    [isRestockingControlSettings],")
            Value.AppendLine("    [isOutputTransferOrder],")
            Value.AppendLine("    [isOutputPriceRevision],")
            Value.AppendLine("    [CreatedBy],")
            Value.AppendLine("    [CreateDate],")
            Value.AppendLine("    [UpdatedBy],")
            Value.AppendLine("    [UpdateDate]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [s_EhsHeader] ")
            Value.AppendLine("ORDER BY")
            Value.AppendLine("    CASE [LocationCode] ")
            Value.AppendLine("    WHEN @gl ")
            Value.AppendLine("        THEN 0")
            Value.AppendLine("    WHEN @jp ")
            Value.AppendLine("        THEN (SELECT CAST([SortOrder] AS int) ")
            Value.AppendLine("              FROM s_BranchSortOrder")
            Value.AppendLine("              WHERE LocationCode = @locationCode AND DisplayLocationCode = @jp) ")
            Value.AppendLine("    WHEN @us ")
            Value.AppendLine("        THEN (SELECT CAST([SortOrder] AS int) ")
            Value.AppendLine("              FROM s_BranchSortOrder")
            Value.AppendLine("              WHERE LocationCode = @locationCode AND DisplayLocationCode = @us) ")
            Value.AppendLine("    WHEN @eu ")
            Value.AppendLine("        THEN (SELECT CAST([SortOrder] AS int) ")
            Value.AppendLine("              FROM s_BranchSortOrder")
            Value.AppendLine("              WHERE LocationCode = @locationCode AND DisplayLocationCode = @eu) ")
            Value.AppendLine("    WHEN @in ")
            Value.AppendLine("        THEN (SELECT CAST([SortOrder] AS int) ")
            Value.AppendLine("              FROM s_BranchSortOrder")
            Value.AppendLine("              WHERE LocationCode = @locationCode AND DisplayLocationCode = @in) ")
            Value.AppendLine("    WHEN @cn ")
            Value.AppendLine("        THEN (SELECT CAST([SortOrder] AS int) ")
            Value.AppendLine("              FROM s_BranchSortOrder")
            Value.AppendLine("              WHERE LocationCode = @locationCode AND DisplayLocationCode = @cn) ")
            Value.AppendLine("    END,")
            Value.AppendLine("    [LocationCode], ")
            Value.AppendLine("    [SortOrder]")
            Dim DBConn As SqlConnection = New SqlConnection(DBCommon.DB_CONNECT_STRING)
            Dim DBCommand As SqlCommand = DBConn.CreateCommand
            DBCommand.CommandText = Value.ToString
            DBCommand.Parameters.Clear()

            DBCommand.Parameters.AddWithValue("gl", Common.LOCATION_CODE_GL)
            DBCommand.Parameters.AddWithValue("jp", Common.LOCATION_CODE_JP)
            DBCommand.Parameters.AddWithValue("us", Common.LOCATION_CODE_US)
            DBCommand.Parameters.AddWithValue("eu", Common.LOCATION_CODE_EU)
            DBCommand.Parameters.AddWithValue("cn", Common.LOCATION_CODE_CN)
            DBCommand.Parameters.AddWithValue("in", Common.LOCATION_CODE_IN)
            DBCommand.Parameters.AddWithValue("locationCode", locationCode)
            DBConn.Open()
            Dim DBReader As SqlDataReader = DBCommand.ExecuteReader

            While DBReader.Read
                Dim _LocationCode As String = String.Empty
                Dim _Item As String = String.Empty
                Dim _Text As String = String.Empty
                Dim _SortOrder As Integer = 0
                Dim _isRestockingControlSettings As Boolean = False
                Dim _isOutputTransferOrder As Boolean = False
                Dim _isOutputPriceRevision As Boolean = False
                Dim _CreatedBy As Integer = 0
                Dim _CreateDate As DateTime = New DateTime(0)
                Dim _UpdatedBy As Integer = 0
                Dim _UpdateDate As DateTime = New DateTime(0)
                Dim dc_EhsHeader As s_EhsHeader = New s_EhsHeader
                DBCommon.SetProperty(DBReader("LocationCode"), _LocationCode)
                DBCommon.SetProperty(DBReader("Item"), _Item)
                DBCommon.SetProperty(DBReader("Text"), _Text)
                DBCommon.SetProperty(DBReader("SortOrder"), _SortOrder)
                DBCommon.SetProperty(DBReader("isRestockingControlSettings"), _isRestockingControlSettings)
                DBCommon.SetProperty(DBReader("isOutputTransferOrder"), _isOutputTransferOrder)
                DBCommon.SetProperty(DBReader("isOutputPriceRevision"), _isOutputPriceRevision)
                DBCommon.SetProperty(DBReader("CreatedBy"), _CreatedBy)
                DBCommon.SetProperty(DBReader("CreateDate"), _CreateDate)
                DBCommon.SetProperty(DBReader("UpdatedBy"), _UpdatedBy)
                DBCommon.SetProperty(DBReader("UpdateDate"), _UpdateDate)
                dc_EhsHeader.LocationCode = _LocationCode
                dc_EhsHeader.Item = _Item
                dc_EhsHeader.Text = _Text
                dc_EhsHeader.SortOrder = _SortOrder
                dc_EhsHeader.isRestockingControlSettings = _isRestockingControlSettings
                dc_EhsHeader.isOutputTransferOrder = _isOutputTransferOrder
                dc_EhsHeader.isOutputPriceRevision = _isOutputPriceRevision
                dc_EhsHeader.CreatedBy = _CreatedBy
                dc_EhsHeader.CreateDate = _CreateDate
                dc_EhsHeader.UpdatedBy = _UpdatedBy
                dc_EhsHeader.UpdateDate = _UpdateDate
                Me.Add(dc_EhsHeader)

            End While

            DBReader.Close()
        End Sub

        ''' <summary>
        ''' データベースから全てのデータを読み込む
        ''' 
        ''' </summary>
        ''' <param name="LocationCode">拠点コード(ソートのみに使用)</param>
        Public Sub LoadForSettings(ByVal locationCode As String)
            Dim Value As StringBuilder = New StringBuilder
            Value.AppendLine("SELECT")
            Value.AppendLine("    BSO.[LocationCode],")
            Value.AppendLine("    BSO.[SortOrder],")
            Value.AppendLine("    EH.[LocationCode],")
            Value.AppendLine("    EH.[Item],")
            Value.AppendLine("    EH.[Text],")
            Value.AppendLine("    EH.[SortOrder],")
            Value.AppendLine("    EH.[isRestockingControlSettings],")
            Value.AppendLine("    EH.[isOutputTransferOrder],")
            Value.AppendLine("    EH.[isOutputPriceRevision],")
            Value.AppendLine("    EH.[CreatedBy],")
            Value.AppendLine("    EH.[CreateDate],")
            Value.AppendLine("    EH.[UpdatedBy],")
            Value.AppendLine("    EH.[UpdateDate]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [s_EhsHeader] AS EH")
            Value.AppendLine("" & "LEFT OUTER JOIN s_BranchSortOrder AS BSO")
            Value.AppendLine("" & "ON BSO.[DisplayLocationCode] = EH.[LocationCode]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    EH.[isRestockingControlSettings] = 1 ")
            Value.AppendLine("    AND (BSO.[LocationCode] IS NULL OR BSO.[LocationCode] = @LocationCode)")
            Value.AppendLine("ORDER BY")
            Value.AppendLine("    BSO.[LocationCode],")
            Value.AppendLine("    BSO.[SortOrder],")
            Value.AppendLine("    EH.[SortOrder]")
            Dim DBConn As SqlConnection = New SqlConnection(DBCommon.DB_CONNECT_STRING)
            Dim DBCommand As SqlCommand = DBConn.CreateCommand
            DBCommand.CommandText = Value.ToString
            DBCommand.Parameters.Clear()
            DBCommand.Parameters.AddWithValue("locationCode", locationCode)
            DBConn.Open()
            Dim DBReader As SqlDataReader = DBCommand.ExecuteReader

            While DBReader.Read
                Dim _LocationCode As String = String.Empty
                Dim _Item As String = String.Empty
                Dim _Text As String = String.Empty
                Dim _SortOrder As Integer = 0
                Dim _isRestockingControlSettings As Boolean = False
                Dim _isOutputTransferOrder As Boolean = False
                Dim _isOutputPriceRevision As Boolean = False
                Dim _CreatedBy As Integer = 0
                Dim _CreateDate As DateTime = New DateTime(0)
                Dim _UpdatedBy As Integer = 0
                Dim _UpdateDate As DateTime = New DateTime(0)
                Dim dc_EhsHeader As s_EhsHeader = New s_EhsHeader
                DBCommon.SetProperty(DBReader("LocationCode"), _LocationCode)
                DBCommon.SetProperty(DBReader("Item"), _Item)
                DBCommon.SetProperty(DBReader("Text"), _Text)
                DBCommon.SetProperty(DBReader("SortOrder"), _SortOrder)
                DBCommon.SetProperty(DBReader("isRestockingControlSettings"), _isRestockingControlSettings)
                DBCommon.SetProperty(DBReader("isOutputTransferOrder"), _isOutputTransferOrder)
                DBCommon.SetProperty(DBReader("isOutputPriceRevision"), _isOutputPriceRevision)
                DBCommon.SetProperty(DBReader("CreatedBy"), _CreatedBy)
                DBCommon.SetProperty(DBReader("CreateDate"), _CreateDate)
                DBCommon.SetProperty(DBReader("UpdatedBy"), _UpdatedBy)
                DBCommon.SetProperty(DBReader("UpdateDate"), _UpdateDate)
                dc_EhsHeader.LocationCode = _LocationCode
                dc_EhsHeader.Item = _Item
                dc_EhsHeader.Text = _Text
                dc_EhsHeader.SortOrder = _SortOrder
                dc_EhsHeader.isRestockingControlSettings = _isRestockingControlSettings
                dc_EhsHeader.isOutputTransferOrder = _isOutputTransferOrder
                dc_EhsHeader.isOutputPriceRevision = _isOutputPriceRevision
                dc_EhsHeader.CreatedBy = _CreatedBy
                dc_EhsHeader.CreateDate = _CreateDate
                dc_EhsHeader.UpdatedBy = _UpdatedBy
                dc_EhsHeader.UpdateDate = _UpdateDate
                Me.Add(dc_EhsHeader)

            End While

            DBReader.Close()
        End Sub

        Private Function UpdateSQL() As String
            Dim Value As StringBuilder = New StringBuilder
            Value.AppendLine("UPDATE")
            Value.AppendLine("    [EhsHeader]")
            Value.AppendLine("SET")
            Value.AppendLine("    [isOutputTransferOrder] = @isOutputTransferOrder,")
            Value.AppendLine("    [isOutputPriceRevision] = @isOutputPriceRevision,")
            Value.AppendLine("    [UpdatedBy] = @UpdatedBy,")
            Value.AppendLine("    [UpdateDate] = GETDATE()")
            Value.AppendLine("WHERE ")
            Value.AppendLine("    [Item] = @Item")
            Value.AppendLine(";")
            Value.AppendLine("SELECT SCOPE_IDENTITY();")
            Return Value.ToString
        End Function

        ''' <summary>
        ''' 最後に更新されたUpdateDateを取得
        ''' </summary>
        Public Function GetLatestUpdateDate() As DateTime
            Dim retVal As DateTime = DateTime.MinValue
            ' データベースからデータを読み込む SQL 文字列を生成する。
            Dim Value As StringBuilder = New StringBuilder
            Value.AppendLine("SELECT")
            Value.AppendLine("    MAX([UpdateDate]) AS UpdateDate")
            Value.AppendLine("FROM")
            Value.AppendLine("    [EhsHeader]")
            Dim DBConn As SqlConnection = New SqlConnection(DBCommon.DB_CONNECT_STRING)
            Dim DBCommand As SqlCommand = DBConn.CreateCommand
            DBCommand.CommandText = Value.ToString
            DBCommand.Parameters.Clear()
            DBConn.Open()

            If (DBCommand.ExecuteScalar IsNot DBNull.Value) Then
                retVal = Convert.ToDateTime(DBCommand.ExecuteScalar)
            End If

            Return retVal
        End Function
    End Class

End Namespace
