Option Explicit On
Option Infer Off
Option Strict On

Imports System.Text
Imports System.Data.SqlClient
Imports System.Text.RegularExpressions
Imports Purchase.TCIDataAccess.DBCommon

Namespace TCIDataAccess

    ''' <summary> 
    ''' v_Territory データクラス 
    ''' </summary> 
    ''' <remarks>
    ''' <para>Generated by データクラス自動生成ツール Ver 4.1</para>
    ''' </remarks>
    Public Class v_Territory


        Protected _SupplierCode As Integer = 0
        Protected _TerritoryCode As String = String.Empty
        Protected _TerritoryName As String = String.Empty

        ''' <summary> 
        ''' SupplierCode を設定、または取得する 
        ''' </summary> 
        Public Property SupplierCode() As Integer
            Get
                Return _SupplierCode
            End Get
            Set(ByVal value As Integer)
                _SupplierCode = value
            End Set
        End Property

        ''' <summary> 
        ''' TerritoryCode を設定、または取得する 
        ''' </summary> 
        Public Property TerritoryCode() As String
            Get
                Return _TerritoryCode
            End Get
            Set(ByVal value As String)
                _TerritoryCode = value
            End Set
        End Property

        ''' <summary> 
        ''' TerritoryName を設定、または取得する 
        ''' </summary> 
        Public Property TerritoryName() As String
            Get
                Return _TerritoryName
            End Get
            Set(ByVal value As String)
                _TerritoryName = value
            End Set
        End Property

        ''' <summary> 
        ''' コンストラクタ
        ''' </summary> 
        Public Sub New()

        End Sub

        ''' <summary>
        ''' データベースからデータを読み込む。
        ''' </summary>
        Public Sub Load()

            'データベースからデータを読み込む SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    [SupplierCode],")
            Value.AppendLine("    [TerritoryCode],")
            Value.AppendLine("    [TerritoryName]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [v_Territory]")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBConn.Open()
                    Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()
                    While DBReader.Read()
                        SetProperty(DBReader("SupplierCode"), _SupplierCode)
                        SetProperty(DBReader("TerritoryCode"), _TerritoryCode)
                        SetProperty(DBReader("TerritoryName"), _TerritoryName)
                    End While
                    DBReader.Close()
                End Using
            End Using

        End Sub

#Region "User-Defined Methods"

        ''' <summary>
        ''' データベースからデータを読み込む。
        ''' </summary>
        ''' <remarks></remarks>
        ''' <param name="st_SupplierCode">SupplierCode</param>
        ''' <returns>v_TerritoryList</returns>
        Public Shared Function Load(ByVal st_SupplierCode As String) As List(Of v_Territory)
            Dim territoryList As List(Of v_Territory) = New List(Of v_Territory)

            'データベースからデータを読み込む SQL 文字列を生成する。
            Dim sb_SQL As New StringBuilder()
            sb_SQL.AppendLine("SELECT")
            sb_SQL.AppendLine("  VT.[SupplierCode],")
            sb_SQL.AppendLine("  VT.[TerritoryCode],")
            sb_SQL.AppendLine("  VT.[TerritoryName]")
            sb_SQL.AppendLine("FROM")
            sb_SQL.AppendLine("  [v_Territory] AS VT")
            sb_SQL.AppendLine("WHERE")
            sb_SQL.AppendLine("  VT.[SupplierCode] = @SupplierCode")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = sb_SQL.ToString()
                    DBCommand.Parameters.Clear()
                    DBCommand.Parameters.AddWithValue("SupplierCode", CInt(st_SupplierCode))
                    DBConn.Open()

                    Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()

                    If DBReader.HasRows Then
                        While DBReader.Read()
                            Dim territory As v_Territory = New v_Territory

                            DBCommon.SetProperty(DBReader("SupplierCode"), territory.SupplierCode)
                            DBCommon.SetProperty(DBReader("TerritoryCode"), territory.TerritoryCode)
                            DBCommon.SetProperty(DBReader("TerritoryName"), territory.TerritoryName)
                            territoryList.Add(territory)

                        End While
                    End If
                    DBReader.Close()

                    Return territoryList

                End Using
            End Using

        End Function

        '''' <summary> 
        '''' データの存在チェックを行う。
        '''' </summary> 
        '''' <returns>存在する場合は True、しない場合は False を返す</returns> 
        'Public Shared Function IsExists() As Boolean

        '    ' データの存在チェックを行う SQL 文字列を生成する。
        '    Dim Value As New StringBuilder()
        '    Value.AppendLine("SELECT")
        '    Value.AppendLine("    COUNT(*)")
        '    Value.AppendLine("FROM")
        '    Value.AppendLine("    [v_Territory]")

        '    Using DBConn As New SqlConnection(DB_CONNECT_STRING)
        '        Using DBCommand As SqlCommand = DBConn.CreateCommand()
        '            DBCommand.CommandText = Value.ToString()
        '            DBCommand.Parameters.Clear()
        '            DBConn.Open()
        '            Dim i_Count As Integer = Convert.ToInt32(DBCommand.ExecuteScalar())
        '            Return i_Count > 0
        '        End Using
        '    End Using

        'End Function

#End Region 'User-Defined Methods End

    End Class

    ''' <summary> 
    ''' v_Territory リストクラス 
    ''' </summary> 
    Public Class v_TerritoryList
        Inherits List(Of v_Territory)

        ''' <summary>
        ''' コンストラクタ
        ''' </summary>
        Public Sub New()

        End Sub

    End Class

End Namespace
