Option Explicit On
Option Infer Off
Option Strict On

Imports System.Text
Imports System.Data.SqlClient
Imports System.Text.RegularExpressions
Imports Purchase.TCIDataAccess.DBCommon

Namespace TCIDataAccess

    ''' <summary> 
    ''' s_Location データクラス 
    ''' </summary> 
    ''' <remarks>
    ''' <para>Generated by データクラス自動生成ツール Ver 4.1</para>
    ''' </remarks>
    Public Class s_Location

        Protected _LocationCode As String = String.Empty
        Protected _Name As String = String.Empty
        Protected _Timezone As Integer = 0
        Protected _Timediff As Decimal = 0

        ''' <summary> 
        ''' LocationCode を設定、または取得する 
        ''' </summary> 
        Public Property LocationCode() As String
            Get
                Return _LocationCode
            End Get
            Set(ByVal value As String)
                _LocationCode = value
            End Set
        End Property

        ''' <summary> 
        ''' Name を設定、または取得する 
        ''' </summary> 
        Public Property Name() As String
            Get
                Return _Name
            End Get
            Set(ByVal value As String)
                _Name = value
            End Set
        End Property

        ''' <summary> 
        ''' Timezone を設定、または取得する 
        ''' </summary> 
        Public Property Timezone() As Integer
            Get
                Return _Timezone
            End Get
            Set(ByVal value As Integer)
                _Timezone = value
            End Set
        End Property

        ''' <summary> 
        ''' Timediff を設定、または取得する 
        ''' </summary> 
        Public Property Timediff() As Decimal
            Get
                Return _Timediff
            End Get
            Set(ByVal value As Decimal)
                _Timediff = value
            End Set
        End Property

        ''' <summary> 
        ''' コンストラクタ
        ''' </summary> 
        Public Sub New()

        End Sub

        ''' <summary>
        ''' データベースからデータを読み込む。
        ''' </summary>
        ''' <param name="LocationCode">LocationCode</param>
        Public Sub Load(ByVal LocationCode As String)

            'データベースからデータを読み込む SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    [LocationCode],")
            Value.AppendLine("    [Name],")
            Value.AppendLine("    [Timezone],")
            Value.AppendLine("    [Timediff]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [s_Location]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    [LocationCode] = @LocationCode")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBCommand.Parameters.AddWithValue("LocationCode", LocationCode)
                    DBConn.Open()
                    Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()
                    While DBReader.Read()
                        SetProperty(DBReader("LocationCode"), _LocationCode)
                        SetProperty(DBReader("Name"), _Name)
                        SetProperty(DBReader("Timezone"), _Timezone)
                        SetProperty(DBReader("Timediff"), _Timediff)
                    End While
                    DBReader.Close()
                End Using
            End Using

        End Sub

        ''' <summary> 
        ''' データの存在チェックを行う。
        ''' </summary> 
        ''' <returns>存在する場合は True、しない場合は False を返す</returns> 
        ''' <param name="LocationCode">LocationCode</param>
        Public Shared Function IsExists(ByVal LocationCode As String) As Boolean

            ' データの存在チェックを行う SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    COUNT(*)")
            Value.AppendLine("FROM")
            Value.AppendLine("    [s_Location]")
            Value.AppendLine("WHERE")
            Value.AppendLine("    [LocationCode] = @LocationCode")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBCommand.Parameters.Clear()
                    DBCommand.Parameters.AddWithValue("LocationCode", LocationCode)
                    DBConn.Open()
                    Dim i_Count As Integer = Convert.ToInt32(DBCommand.ExecuteScalar())
                    Return i_Count > 0
                End Using
            End Using

        End Function

    End Class

    ''' <summary> 
    ''' s_Location リストクラス 
    ''' </summary> 
    Public Class s_LocationList
        Inherits List(Of s_Location)

        ''' <summary>
        ''' コンストラクタ
        ''' </summary>
        Public Sub New()

        End Sub

        ''' <summary>
        ''' データベースから全データをName順で読み込む。
        ''' </summary>
        Public Sub Load()

            'データベースからデータを読み込む SQL 文字列を生成する。
            Dim Value As StringBuilder = New StringBuilder
            Value.AppendLine("SELECT")
            Value.AppendLine("    [LocationCode],")
            Value.AppendLine("    [Name]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [s_Location]")
            Value.AppendLine("ORDER BY [Name]")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString
                    DBConn.Open()
                    Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()
                    While DBReader.Read()
                        Dim dc_Data As New s_Location
                        SetProperty(DBReader("LocationCode"), dc_Data.LocationCode)
                        SetProperty(DBReader("Name"), dc_Data.Name)
                        Me.Add(dc_Data)
                    End While
                    DBReader.Close()
                End Using
            End Using

        End Sub

    End Class
End Namespace
