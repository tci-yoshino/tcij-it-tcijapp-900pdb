Option Explicit On
Option Infer Off
Option Strict On

Imports System.Text
Imports System.Data.SqlClient
Imports System.Text.RegularExpressions
Imports Purchase.TCIDataAccess.DBCommon

Namespace TCIDataAccess

    ''' <summary> 
    ''' v_CONFIDENTIAL データクラス 
    ''' </summary> 
    ''' <remarks>
    ''' <para>Generated by データクラス自動生成ツール Ver 4.1</para>
    ''' </remarks>
    Public Class v_CONFIDENTIAL


        Protected _ProductID As Integer = 0
        Protected _ProductNumber As String = String.Empty
        Protected _isCONFIDENTIAL As Boolean = False

        ''' <summary> 
        ''' ProductID を設定、または取得する 
        ''' </summary> 
        Public Property ProductID() As Integer
            Get
                Return _ProductID
            End Get
            Set(ByVal value As Integer)
                _ProductID = value
            End Set
        End Property

        ''' <summary> 
        ''' ProductNumber を設定、または取得する 
        ''' </summary> 
        Public Property ProductNumber() As String
            Get
                Return _ProductNumber
            End Get
            Set(ByVal value As String)
                _ProductNumber = value
            End Set
        End Property

        ''' <summary> 
        ''' isCONFIDENTIAL を設定、または取得する 
        ''' </summary> 
        Public Property isCONFIDENTIAL() As Boolean
            Get
                Return _isCONFIDENTIAL
            End Get
            Set(ByVal value As Boolean)
                _isCONFIDENTIAL = value
            End Set
        End Property

        ''' <summary> 
        ''' コンストラクタ
        ''' </summary> 
        Public Sub New()

        End Sub

        ''' <summary>
        ''' データベースからデータを読み込む。
        ''' </summary>
        Public Sub Load()

            'データベースからデータを読み込む SQL 文字列を生成する。
            Dim Value As New StringBuilder()
            Value.AppendLine("SELECT")
            Value.AppendLine("    [ProductID],")
            Value.AppendLine("    [ProductNumber],")
            Value.AppendLine("    [isCONFIDENTIAL]")
            Value.AppendLine("FROM")
            Value.AppendLine("    [v_CONFIDENTIAL]")

            Using DBConn As New SqlConnection(DB_CONNECT_STRING)
                Using DBCommand As SqlCommand = DBConn.CreateCommand()
                    DBCommand.CommandText = Value.ToString()
                    DBConn.Open()
                    Dim DBReader As SqlDataReader = DBCommand.ExecuteReader()
                    While DBReader.Read()
                        SetProperty(DBReader("ProductID"), _ProductID)
                        SetProperty(DBReader("ProductNumber"), _ProductNumber)
                        SetProperty(DBReader("isCONFIDENTIAL"), _isCONFIDENTIAL)
                    End While
                    DBReader.Close()
                End Using
            End Using

        End Sub

        '''' <summary> 
        '''' データの存在チェックを行う。
        '''' </summary> 
        '''' <returns>存在する場合は True、しない場合は False を返す</returns> 
        'Public Shared Function IsExists() As Boolean

        '    ' データの存在チェックを行う SQL 文字列を生成する。
        '    Dim Value As New StringBuilder()
        '    Value.AppendLine("SELECT")
        '    Value.AppendLine("    COUNT(*)")
        '    Value.AppendLine("FROM")
        '    Value.AppendLine("    [v_CONFIDENTIAL]")

        '    Using DBConn As New SqlConnection(DB_CONNECT_STRING)
        '        Using DBCommand As SqlCommand = DBConn.CreateCommand()
        '            DBCommand.CommandText = Value.ToString()
        '            DBCommand.Parameters.Clear()
        '            DBConn.Open()
        '            Dim i_Count As Integer = Convert.ToInt32(DBCommand.ExecuteScalar())
        '            Return i_Count > 0
        '        End Using
        '    End Using

        'End Function

    End Class

    ''' <summary> 
    ''' v_CONFIDENTIAL リストクラス 
    ''' </summary> 
    Public Class v_CONFIDENTIALList
        Inherits List(Of v_CONFIDENTIAL)

        ''' <summary>
        ''' コンストラクタ
        ''' </summary>
        Public Sub New()

        End Sub

    End Class

End Namespace
