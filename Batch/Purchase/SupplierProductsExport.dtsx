<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/3/2017 11:40:54 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TCIJ-N12006"
  DTS:CreatorName="TCIX\Keiko.Watanabe"
  DTS:DTSID="{93DE5C30-8E0F-42A1-9AC0-C1792C401436}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1041"
  DTS:ObjectName="SupplierProductsExport"
  DTS:PackageType="5"
  DTS:VersionBuild="76"
  DTS:VersionGUID="{E319A8EA-991A-4ECE-AE2B-E9C13FFA42A6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{200DFC76-7213-4974-B50A-811B382E3FE6}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=excas.tcix.local;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SupplierProductsExport.log]"
      DTS:CreationName="FILE"
      DTS:DTSID="{28CC5271-F549-480D-BA57-9DB9552D2FE8}"
      DTS:ObjectName="SupplierProductsExport.log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogDir] + "SupplierProductsExport.log"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\tcijapp\Purchase\Batch\Log\SupplierProductsExport.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="C:\tcijapp\Purchase\Batch\Purchase\Purchase.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{E12A53C5-4D7E-404B-8C65-703920033B64}"
      DTS:ObjectName="構成 1" />
    <DTS:Configuration
      DTS:ConfigurationString="C:\tcijapp\Purchase\Batch\Purchase\SupplierProductsExport.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{C9F4C4BF-2772-4A7E-9B4E-62A80361DB94}"
      DTS:ObjectName="構成 2" />
  </DTS:Configurations>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="SupplierProductsExport.log"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="イベントのログ エントリを CSV ファイルに書き込みます"
      DTS:DTSID="{502FCBB3-DF81-402C-8DB6-39A8FAC22BA8}"
      DTS:ObjectName="テキスト ファイルの SSIS ログ プロバイダー1">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A3DD9CB5-1AEB-478C-9ACD-84AB76563916}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CommandTimeOut">
      <DTS:VariableValue
        DTS:DataType="3">600</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{37010AB9-C3C2-4F8D-8F8F-22F52FB75226}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=TDB2; Initial Catalog=Purchase; User ID=Purchase; Password=n061t@kun;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9DA23F31-401A-487C-8DCF-F50392EEFB42}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorFlag">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF0BB846-7006-46CF-99A7-FE1A6D0B4FD7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{258FADE3-51CB-4123-AA31-904BE69D0A25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogDir">
      <DTS:VariableValue
        DTS:DataType="8">C:\tcijapp\Purchase\Batch\Log\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC91315C-A162-49D1-BF19-00EF4A19D269}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailFrom">
      <DTS:VariableValue
        DTS:DataType="8">devteam_app@tcichemicals.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5A1E6C6-AE2F-46B9-9AF5-10C1ABC4E5FD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailTo">
      <DTS:VariableValue
        DTS:DataType="8">keiko.watanabe@tcichemicals.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EA9D1A7C-5BFC-48D3-808A-07C07DF5B509}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MaxRows">
      <DTS:VariableValue
        DTS:DataType="3">300000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74DDFC40-1CE8-4BFE-ABAE-C1E2B63B75E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\tcijapp\Purchase\Batch\temp\PDB supplier products.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA47C8ED-1AE2-4994-94F5-926D0CAB461A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StartTime">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">3,7,OnError,12,OnTaskFailed,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{502FCBB3-DF81-402C-8DB6-39A8FAC22BA8}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Supplier Products データ抽出処理"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="スクリプト タスク"
      DTS:DTSID="{A9023240-0EDA-4208-A4E6-804BFCB5C04B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Supplier Products データ抽出処理"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_cd404953e6a54ed9aba666383f8ac93b"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::CommandTimeOut,User::ConnectionString,User::MaxRows,User::OutputFile"
          ReadWriteVariables="User::ErrorFlag,User::ErrorMessage,User::StartTime">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_cd404953e6a54ed9aba666383f8ac93b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b61b3cbf-94d9-47ad-b94e-bce898222cbe}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_cd404953e6a54ed9aba666383f8ac93b</RootNamespace>
    <AssemblyName>ST_cd404953e6a54ed9aba666383f8ac93b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Settings.get_Default():ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Sett" +
    "ings")]

namespace ST_cd404953e6a54ed9aba666383f8ac93b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
using System.IO;
using System.Collections.Generic;
using System.Reflection;
using System.Data.SqlClient;
#endregion

namespace ST_cd404953e6a54ed9aba666383f8ac93b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        // 【Supplier Products 抽出処理】
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        // エラーメッセージ
        StringBuilder errorMessage;

        // SQL Server 接続 
        string sqlConnectionString;

        // TCIOpenXML に渡す SQL
        StringBuilder sql;

        // TCIOpenXML に渡す SQL のリスト
        List<String> sqlList;

        // TCIOpenXML で出力するExcelファイルのシートリスト
        List<String> sheetList;

        // Excel1シートあたりの最大行数
        int maxRows;

        // Excel1シートあたりの最小行数
        int minRows;

        // 抽出データ総件数
        int totalRows;

        // 件数チェック用の変数
        int? supplierCode1 = 0;
        int idNum1 = 0;
        int rowNum1 = 0;
        int? supplierCode2 = 0;
        int idNum2 = 0;
        int rowNum2 = 0;

        // タイムアウト設定
        int commandTimeOut;

        /// <summary>
        /// メイン処理
        /// </summary>
        /// <remarks>
        /// 1. 変数の初期化
        /// 2. 前回作成ファイルの削除
        /// 3. ファイル出力
        public void Main()
        {

            try
            {
                //エラーメッセージ
                this.errorMessage = new StringBuilder();

                // 変数の初期化
                Dts.TaskResult = (int)ScriptResults.Success;
                Dts.Variables["ErrorMessage"].Value = String.Empty;
                Dts.Variables["ErrorFlag"].Value = false;
                Dts.Variables["StartTime"].Value = DateTime.Now.ToString();

                // SQL Server 接続
                this.sqlConnectionString = Dts.Variables["ConnectionString"].Value.ToString();

                // 出力ファイル
                string outputFile = Dts.Variables["OutputFile"].Value.ToString();

                // Excel1シートあたりの最大行数
                this.maxRows = Convert.ToInt32(Dts.Variables["MaxRows"].Value.ToString());

                // タイムアウト値
                this.commandTimeOut = Convert.ToInt32(Dts.Variables["CommandTimeOut"].Value.ToString());

                // TCIOpenXML に渡す SQL
                this.sql = new StringBuilder();

                // TCIOpenXML に渡す SQL のリスト
                this.sqlList = new List<String>();

                // TCIOpenXML で出力するExcelファイルのシートリスト
                this.sheetList = new List<String>();

                // 抽出データ総件数
                this.totalRows = 0;

                // Excel1シートあたりの最少行数
                this.minRows = 1;

                // 前回作成ファイルの削除
                try
                {
                    File.Delete(outputFile);
                }
                catch
                {
                    this.errorMessage.AppendLine("前回作成ファイルの削除に失敗しました。" + "\r\n" + "ファイル : <<" + outputFile + ">>");
                    throw;
                }

                // ファイル出力
                this.OutputExcel(outputFile);

            }
            catch(Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                Dts.Variables["ErrorFlag"].Value = true;
                string formatMessage = "【Supplier Products 抽出処理でエラーが発生しました。】" + "\r\n" + "\r\n" + "{0}" + "\r\n" + "({1})" + "\r\n" + "{2}";
                Dts.Variables["ErrorMessage"].Value = String.Format(formatMessage, this.errorMessage.ToString(), ex.Message, ex.StackTrace);
            }
        }

        /// <summary>
        /// エクセルファイル出力
        /// </summary>
        /// <param name="outputFile"></param>
        private void OutputExcel(string outputFile)
        {

            try
            {
                // TCIOpenXML に渡す SQL の作成 と 抽出データの総件数取得 (this.totalRows)
                this.sql = this.GetTotalRows_CreateSQL();

                // 抽出データの総件数が1シートに出力する最大行数を超過する場合、Supplier Code 単位にシート分割出力
                if(this.maxRows < this.totalRows)
                {
                    // Supplier Code 初期値
                    int? supplierCode = 1;

                    // 出力シート数 初期値
                    int sheetCount = 1;
                    // 出力行数
                    int outputRows = 0;

                    // 出力行数が総件数未満の場合、未出力行あり
                    while(outputRows < this.totalRows)
                    {
                        outputRows = this.CreateSqlSheetList(ref supplierCode, ref sheetCount, ref outputRows);
                    }

                    // 引数降順で出力されるため降順ソート
                    this.sheetList.Reverse();
                    this.sqlList.Reverse();

                }
                else
                {
                    // 1シートに全行収まる場合、1シートに全行出力
                    this.sqlList.Add(this.sql.ToString());
                    this.sheetList.Add("Sheet1");
                }

                // 引数1: DB接続文字列(String)
                // 引数2: SQL文のジェネリック コレクション(List(Of String)
                // 引数3: 出力パス(String)
                // 引数4: シート名のジェネリック コレクション(List(Of String)
                // 引数5: 書式設定するか(True)、すべて文字列扱いとするか(False) (Boolean)
                // 引数6: コマンドタイムアウト時間

                AppDomain appDomain = AppDomain.CreateDomain("MyDomain");
                Object obj = appDomain.CreateInstanceAndUnwrap("TCIOpenXML", "TCIOpenXML.TCIOpenXML");
                MethodInfo methodInfo = obj.GetType().GetMethod("CreateOpenXML",
                                                                 new Type[] {typeof(String),
                                                                             typeof(List<String>),
                                                                             typeof(String),
                                                                             typeof(List<String>),
                                                                             typeof(bool),
                                                                             typeof(int)});

                methodInfo.Invoke(obj, new Object[] {this.sqlConnectionString,
                                                     sqlList,
                                                     outputFile,
                                                     sheetList,
                                                     true,
                                                     this.commandTimeOut});

            }
            catch
            {
                this.errorMessage.AppendLine("エクセル出力に失敗しました。" + "\r\n" + "出力ファイル : <<" + outputFile + ">>");
                throw;
            }
        }

        /// <summary>
        /// 総件数が1シートに出力する最大行数を超過する場合のSQL・シート作成
        /// </summary>
        /// 出力が必要なシート数を算出し、シート数分抽出SQLを作成する。
        ///  1. 1シートに出力するデータは、SupplierCode 単位のため、CheckRows メソッドでチェックする。
        ///  2. 1シートに出力するデータが 1件の SupplierCode のみ (最大行数超過) の場合、oneCodeOn1SheetFlag = true
        ///  3. oneCodeOn1SheetFlag = true の場合、1件の SupplierCode のデータ件数分必要なシートを作成する。
        ///  4. oneCodeOn1SheetFlag = false の場合、対象データについてシート作成する。
        /// <returns>outputRows</returns>
        private int CreateSqlSheetList(ref int? supplierCode, ref int sheetCount, ref int outputRows)
        {

            // 必要なシート数を算出
            int sheetsRequired = 1;
            if(this.maxRows < this.totalRows - outputRows)
            {
                sheetsRequired = Convert.ToInt32(Math.Ceiling(Convert.ToDecimal(1.0 * (this.totalRows - outputRows) / this.maxRows)));
            }

            for(int i = 1; i <= sheetsRequired; i++)
            {

                // 1シートに出力する対象データをチェック
                bool oneCodeOn1SheetFlag = this.CheckRows(supplierCode, this.minRows, this.maxRows);

                // 出力行なし
                if(this.rowNum1 == 0)
                {
                    break;
                }

                // 1つの SupplierCode の件数が 1シート の最大行数を超過
                if(oneCodeOn1SheetFlag)
                {
                    // 以下 (1)かつ(2)の場合を考慮し、SupplierCode を書き換え
                    // (1) 連続して 異なる SupplierCode が シートを跨がって出力される (A, A, A, B, B)
                    // (2) 直前の SupplierCode の出力行の余りがない
                    supplierCode = this.supplierCode1;

                    // 該当の SupplierCode の総件数を取得
                    int totalCount = this.CountRows(this.supplierCode1, true);
                    // 該当の SupplierCode のみを出力するシート数算出
                    int sheetCountRequired = totalCount / this.maxRows;
                    // 該当の SupplierCode のみ出力する場合の総件数
                    int totalCountToSheet = sheetCountRequired * this.maxRows;
                    // 残件数
                    int remainingCount = totalCount - totalCountToSheet;

                    // 該当の SupplierCode のみを出力する
                    for(int j = 1; j <= sheetCountRequired; j++)
                    {
                        this.sql = this.CreateSQL_SplitSheet(j, supplierCode, this.supplierCode2, true);
                        sqlList.Add(this.sql.ToString());
                        sheetList.Add("Sheet" + sheetCount);
                        sheetCount++;
                    }

                    // 残件数がある場合、次のシートを出力
                    if(remainingCount > 0)
                    {
                        this.CheckRows(supplierCode, totalCountToSheet, this.maxRows);

                        // 1Sheet に出力する SQL の作成
                        this.sql = this.CreateSQL_SplitSheet(sheetCountRequired + 1, supplierCode, this.supplierCode2, true);
                        sqlList.Add(this.sql.ToString());
                        sheetList.Add("Sheet" + sheetCount);
                        sheetCount++;
                        sheetsRequired -= sheetCountRequired + 1;
                        outputRows += this.rowNum1 - this.idNum1;
                        supplierCode = this.supplierCode2;

                    }
                    else
                    {
                        sheetsRequired -= sheetCountRequired;
                        outputRows += totalCountToSheet;
                        supplierCode += 1;
                    }

                }
                else
                {
                    // 1Sheet に出力する SQL の作成
                    this.sql = this.CreateSQL_SplitSheet(sheetCount, supplierCode, this.supplierCode2, false);
                    sqlList.Add(this.sql.ToString());
                    sheetList.Add("Sheet" + sheetCount);
                    sheetCount++;
                    if(this.supplierCode2 == null)
                    {
                        // 最終シート
                        outputRows += this.rowNum1;
                    }
                    else
                    {
                        outputRows += this.rowNum1 - this.idNum1;
                    }
                    supplierCode = this.supplierCode2;
                }

            }

            return outputRows;

        }

        /// <summary>
        /// 1シートに出力する SupplierCode のチェック
        /// </summary>
        /// <returns>sql</returns>
        private bool CheckRows(int? supplierCode, int minRows, int maxRows)
        {

            bool oneCodeOn1SheetFlag = false;
            this.supplierCode1 = null;
            this.idNum1 = 0;
            this.rowNum1 = 0;
            this.supplierCode2 = null;
            this.idNum2 = 0;
            this.rowNum2 = 0;

            // 1シートの最大行と次行のデータを取得
            DataTable rowData = this.GetRows(supplierCode, minRows, maxRows);

            // minRows が 1 でない = 前シートの最終行を指定
            if(minRows != this.minRows)
            {
                // 出力対象シートの最終行数 = 指定行 (前シートの最終行数) + 1シートの最大行
                maxRows += minRows;
            }

            foreach(DataRow row in rowData.Rows)
            {
                if(Convert.ToInt32(row["ROWNUM"]) == maxRows)
                {
                    // 対象シートの最終行
                    this.supplierCode1 = Convert.ToInt32(row["SupplierCode"]);
                    this.idNum1 = Convert.ToInt32(row["IDNUM"]);
                    this.rowNum1 = Convert.ToInt32(row["ROWNUM"]);
                }
                else
                {
                    // 次シートの先頭行
                    this.supplierCode2 = Convert.ToInt32(row["SupplierCode"]);
                    this.idNum2 = Convert.ToInt32(row["IDNUM"]);
                    this.rowNum2 = Convert.ToInt32(row["ROWNUM"]);
                }
            }

            if(this.supplierCode2 != null)
            {
                
                // 出力対象シートの最終行と次シートの先頭行の SupplierCode が同一、かつ SupplierCode の件数と行数が同一の場合
                if(this.supplierCode1 == this.supplierCode2 && this.idNum1 == this.rowNum1 && this.idNum2 == this.rowNum2)
                {
                    // 出力対象シートに1つの SupplierCode のデータを行数分出力
                    // 1シートに出力する最大行数 < 1つの SupplierCode のデータ件数
                    oneCodeOn1SheetFlag = true;
                }

                // 次シートの先頭行の SupplierCode の件数が1の場合 (idNum2 = 1)
                // ⇒ 出力対象シートの最終行と次シートの先頭行の SupplierCode が切り替わる
                // ⇒ 出力対象シートに最大行数出力される
                // 出力対象シートの最終行の SupplerCode の件数を0に置換（outputRows = this.rowNum1 - this.idNum1 = maxRows）
                if(this.idNum2 == 1)
                {
                    this.idNum1 = 0;
                }

            }
            else if(this.supplierCode1 == null && this.supplierCode2 == null)
            {
                // 最終シートの行数が1シートの最大行数に満たない場合
                this.rowNum1 = this.CountRows(supplierCode, false);
            }

            return oneCodeOn1SheetFlag;

        }

        /// <summary>
        /// データ件数カウント
        /// </summary>
        /// <returns>count</returns>
        private int CountRows(int? supplierCode, bool equalSign)
        {
            StringBuilder sql = new StringBuilder();
            int count = 0;

            try
            {
                // SQL 作成
                sql.AppendLine("SELECT");
                sql.AppendLine("	COUNT(*)");
                sql.AppendLine("FROM");
                sql.AppendLine("	[Supplier_Product] AS SP");
                sql.AppendLine("WHERE");
                if(equalSign)
                {
                    sql.AppendLine("	SP.[SupplierCode] = @supplierCode");
                }
                else
                {
                    sql.AppendLine("	SP.[SupplierCode] >= @supplierCode");
                }

                using(SqlConnection sqlConnection = new SqlConnection(this.sqlConnectionString))
                {
                    using(SqlCommand sqlCommand = sqlConnection.CreateCommand())
                    {
                        sqlCommand.CommandText = sql.ToString();

                        sqlCommand.Parameters.Clear();
                        sqlCommand.Parameters.AddWithValue("supplierCode", supplierCode);

                        sqlConnection.Open();
                        // 件数取得
                        count = Convert.ToInt32(sqlCommand.ExecuteScalar());

                    }
                }
            }
            catch
            {
                this.errorMessage.AppendLine("Supplier_Product の件数取得に失敗しました。supplierCode = " + supplierCode);
                throw;
            }

            return count;
        }

        /// <summary>
        /// 1シートに出力する SQL の作成
        /// </summary>
        /// <returns>sql</returns>
        private StringBuilder CreateSQL_SplitSheet(int sheetCount, int? supplierCodeOver, int? supplierCodeUnder, bool consecutiveFlag)
        {

            int rowNumberOver = this.minRows;
            int rowNumberUnder = this.maxRows;

            // SupplierCode 1件のみ出力の場合、出力行数をシート数に応じて加算
            if(consecutiveFlag)
            {
                rowNumberOver = this.minRows + (this.maxRows * (sheetCount - 1));
                rowNumberUnder = this.maxRows + (this.maxRows * (sheetCount - 1));
            }

            StringBuilder sql = new StringBuilder();
            // SQL 作成
            sql.AppendLine("WITH RowData AS (");
            sql.AppendLine("SELECT");
            sql.AppendLine("	SP.[SupplierCode] AS [Supplier Code (PDB)],");
            sql.AppendLine("	CONCAT(ISNULL(S.[Name3], ''), ' ', ISNULL(S.[Name4], '')) AS [Supplier Name],");
            sql.AppendLine("	ISNULL(P.[ProductNumber], '') AS [Product Number],");
            sql.AppendLine("	ISNULL(CASE WHEN P.[QuoName] IS NULL THEN P.[Name] ELSE P.[QuoName] END, '') AS [Product Name],");
            sql.AppendLine("	LEFT(CONVERT(NVARCHAR, SP.[UpdateDate], 120), 10) AS [Update Date],");
            sql.AppendLine("	ROW_NUMBER() OVER(ORDER BY SP.[SupplierCode], ISNULL(P.[ProductNumber], ''), SP.[UpdateDate]) AS [ROWNUM]");
            sql.AppendLine("FROM");
            sql.AppendLine("	[Supplier_Product] AS SP");
            sql.AppendLine("LEFT OUTER JOIN");
            sql.AppendLine("	[Supplier] AS S");
            sql.AppendLine("ON");
            sql.AppendLine("	S.[SupplierCode] = SP.[SupplierCode]");
            sql.AppendLine("LEFT OUTER JOIN");
            sql.AppendLine("	[Product] AS P");
            sql.AppendLine("ON");
            sql.AppendLine("	SP.[ProductID] = P.[ProductID]");
            sql.AppendLine("WHERE");
            sql.AppendLine("	SP.[SupplierCode] >= " + supplierCodeOver);
            if(supplierCodeUnder != null && supplierCodeOver != supplierCodeUnder)
            {
                sql.AppendLine("	AND SP.[SupplierCode] < " + supplierCodeUnder);
            }
            sql.AppendLine(")");
            sql.AppendLine("SELECT");
            sql.AppendLine("	[Supplier Code (PDB)],");
            sql.AppendLine("	[Supplier Name],");
            sql.AppendLine("	[Product Number],");
            sql.AppendLine("	[Product Name],");
            sql.AppendLine("	[Update Date]");
            sql.AppendLine("FROM");
            sql.AppendLine("	RowData");
            sql.AppendLine("WHERE");
            sql.AppendLine("	ROWNUM >= " + rowNumberOver);
            sql.AppendLine("	AND ROWNUM <= " + rowNumberUnder);
            sql.AppendLine("ORDER BY");
            sql.AppendLine("	[Supplier Code (PDB)],");
            sql.AppendLine("	[Product Number],");
            sql.AppendLine("	[Update Date]");

            return sql;

        }

        /// <summary>
        /// データ件数取得
        /// </summary>
        /// <returns>rowData</returns>
        private DataTable GetRows(int? supplierCode, int minRows, int maxRows)
        {

            StringBuilder sql = new StringBuilder();
            DataTable rowData = new DataTable();

            try
            {
                // SQL 作成
                sql.AppendLine("WITH RowData AS (");
                sql.AppendLine("	SELECT");
                sql.AppendLine("		[SupplierCode],");
                sql.AppendLine("		ROW_NUMBER() OVER(PARTITION BY [SupplierCode] ORDER BY [SupplierCode]) AS [IDNUM],");
                sql.AppendLine("		ROW_NUMBER() OVER(ORDER BY [SupplierCode]) AS [ROWNUM]");
                sql.AppendLine("	FROM");
                sql.AppendLine("		[Supplier_Product]");
                sql.AppendLine("	WHERE");
                sql.AppendLine("		[SupplierCode] >= @supplierCode");
                sql.AppendLine(")");
                sql.AppendLine("SELECT");
                sql.AppendLine("	[SupplierCode],");
                sql.AppendLine("	[IDNUM],");
                sql.AppendLine("	[ROWNUM]");
                sql.AppendLine("FROM");
                sql.AppendLine("	RowData");
                sql.AppendLine("WHERE");
                sql.AppendLine("	[ROWNUM] = @rowNumber0");
                sql.AppendLine("	OR [ROWNUM] = @rowNumber1");

                using(SqlConnection sqlConnection = new SqlConnection(this.sqlConnectionString))
                {
                    using(SqlCommand sqlCommand = sqlConnection.CreateCommand())
                    {
                        sqlCommand.CommandText = sql.ToString();

                        sqlCommand.Parameters.Clear();
                        sqlCommand.Parameters.AddWithValue("supplierCode", supplierCode);

                        if(minRows == this.minRows)
                        {
                            // 出力対象シートの最終行 と 次シートの先頭行の取得 ⇒ 同一 SupplierCode は同一シート内に出力
                            sqlCommand.Parameters.AddWithValue("rowNumber0", maxRows);
                            sqlCommand.Parameters.AddWithValue("rowNumber1", maxRows + 1);
                        }
                        else
                        {
                            // minRows が 1 でない = 前シートの最終行を指定
                            // ⇒ 1つの SupplierCode のデータ件数が多く、1シートに全行出力不可、シートを跨った場合
                            // ⇒ 指定行 (前シートの最終行数) から出力対象シートの最終行 と 次シートの先頭行を取得
                            sqlCommand.Parameters.AddWithValue("rowNumber0", minRows + maxRows);
                            sqlCommand.Parameters.AddWithValue("rowNumber1", minRows + maxRows + 1);
                        }

                        sqlConnection.Open();
                        using(SqlDataAdapter sqlDataAdapter = new SqlDataAdapter(sqlCommand))
                        {
                            sqlDataAdapter.Fill(rowData);
                        }
                    }
                }
            }
            catch
            {
                this.errorMessage.AppendLine("Supplier_Product の取得に失敗しました。supplierCode = " + supplierCode);
                throw;
            }

            return rowData;

        }

        /// <summary>
        /// 総件数取得、データ抽出SQL作成
        /// </summary>
        /// <returns>sql</returns>
        private StringBuilder GetTotalRows_CreateSQL()
        {

            StringBuilder sql = new StringBuilder();

            try
            {
                // SQL 作成
                sql.AppendLine("SELECT");
                sql.AppendLine("	COUNT(*)");
                sql.AppendLine("FROM");
                sql.AppendLine("	[Supplier_Product] AS SP");

                using(SqlConnection sqlConnection = new SqlConnection(this.sqlConnectionString))
                {
                    using(SqlCommand sqlCommand = sqlConnection.CreateCommand())
                    {
                        sqlCommand.CommandText = sql.ToString();
                        sqlConnection.Open();
                        // 総件数取得
                        this.totalRows = Convert.ToInt32(sqlCommand.ExecuteScalar());

                    }
                }
            }
            catch
            {
                this.errorMessage.AppendLine("Supplier_Product の総件数取得に失敗しました。");
                throw;
            }

            sql = new StringBuilder();
            sql.AppendLine("SELECT");
            sql.AppendLine("	SP.[SupplierCode] AS [Supplier Code (PDB)],");
            sql.AppendLine("	CONCAT(ISNULL(S.[Name3], ''), ' ', ISNULL(S.[Name4], '')) AS [Supplier Name],");
            sql.AppendLine("	ISNULL(P.[ProductNumber], '') AS [Product Number],");
            sql.AppendLine("	ISNULL(CASE WHEN P.[QuoName] IS NULL THEN P.[Name] ELSE P.[QuoName] END, '') AS [Product Name],");
            sql.AppendLine("	LEFT(CONVERT(NVARCHAR, SP.[UpdateDate], 120), 10) AS [Update Date]");
            sql.AppendLine("FROM");
            sql.AppendLine("	[Supplier_Product] AS SP");
            sql.AppendLine("LEFT OUTER JOIN");
            sql.AppendLine("	[Supplier] AS S");
            sql.AppendLine("ON");
            sql.AppendLine("	S.[SupplierCode] = SP.[SupplierCode]");
            sql.AppendLine("LEFT OUTER JOIN");
            sql.AppendLine("	[Product] AS P");
            sql.AppendLine("ON");
            sql.AppendLine("	SP.[ProductID] = P.[ProductID]");
            sql.AppendLine("ORDER BY");
            sql.AppendLine("	SP.[SupplierCode],");
            sql.AppendLine("	P.[ProductNumber],");
            sql.AppendLine("	SP.[UpdateDate]");

            return sql;

        }

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_cd404953e6a54ed9aba666383f8ac93b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_cd404953e6a54ed9aba666383f8ac93b</msb:DisplayName>
		<msb:ProjectId>{E65CDCA4-D8E6-405D-8F24-985AB72F7C9C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_cd404953e6a54ed9aba666383f8ac93b.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_cd404953e6a54ed9aba666383f8ac93b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Toshiba")]
[assembly: AssemblyProduct("ST_cd404953e6a54ed9aba666383f8ac93b")]
[assembly: AssemblyCopyright("Copyright @ Toshiba 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_cd404953e6a54ed9aba666383f8ac93b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_cd404953e6a54ed9aba666383f8ac93b.dll">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
AAAKJgQsDgZyvwIAcG8fAAAKJisMBnIFAwBwbx8AAAomAnsCAAAEczkAAAoMCG86AAAKDQkGbxoA
AApvOwAACglvPAAACm89AAAKCW88AAAKck0DAHADjAIAABtvPgAACiYIbz8AAAoJb0AAAAooNgAA
CgveCgksBglvOAAACtzeCggsBghvOAAACtzeHyYCewEAAARyZwMAcAOMAgAAGygvAAAKbx8AAAom
/hoHKgABKAAAAgB0AEK2AAoAAAAAAgBtAFXCAAoAAAAAAAAIAMbOAB8UAAABEzAEAFwCAAAGAAAR
AnsHAAAECgJ7BgAABAsOBCwkAnsHAAAEAnsGAAAEAxdZWlgKAnsGAAAEAnsGAAAEAxdZWlgLcxAA
AAoMCHLDAwBwbx8AAAomCHJTAgBwbx8AAAomCHLnAwBwbx8AAAomCHJBBABwbx8AAAomCHLgBABw
bx8AAAomCHJIBQBwbx8AAAomCHILBgBwbx8AAAomCHKWBgBwbx8AAAomCHJ1AgBwbx8AAAomCHJ/
AgBwbx8AAAomCHJtBwBwbx8AAAomCHKNBwBwbx8AAAomCHKvBwBwbx8AAAomCHK1BwBwbx8AAAom
CHJtBwBwbx8AAAomCHIBCABwbx8AAAomCHKvBwBwbx8AAAomCHIhCABwbx8AAAomCHKzAgBwbx8A
AAomCHJhCABwBIwCAAAbKC8AAApvHwAACiYPAygwAAAKLEQEDQUTBBIDKDEAAAoSBCgxAAAKLgMX
KxMSAygwAAAKEgQoMAAACv4BFv4BLBcIco8IAHAFjAIAABsoLwAACm8fAAAKJghywwgAcG8fAAAK
JghyUwIAcG8fAAAKJghyxwgAcG8fAAAKJghy9wgAcG8fAAAKJghyGwkAcG8fAAAKJghyQQkAcG8f
AAAKJghyYwkAcG8fAAAKJghydQIAcG8fAAAKJghygQkAcG8fAAAKJghyswIAcG8fAAAKJghykwkA
cAaMLgAAASgvAAAKbx8AAAomCHKrCQBwB4wuAAABKC8AAApvHwAACiYIcssJAHBvHwAACiYIcscI
AHBvHwAACiYIchsJAHBvHwAACiYIcmMJAHBvHwAACiYIKhswBAAAAgAABwAAEXMQAAAKCnNBAAAK
CwZywwMAcG8fAAAKJgZy3QkAcG8fAAAKJgZy7QkAcG8fAAAKJgZyEQoAcG8fAAAKJgZyvAoAcG8f
AAAKJgZyLgsAcG8fAAAKJgZyOgsAcG8fAAAKJgZyZAsAcG8fAAAKJgZycgsAcG8fAAAKJgZywwgA
cG8fAAAKJgZyUwIAcG8fAAAKJgZytgsAcG8fAAAKJgZy2AsAcG8fAAAKJgZy7AsAcG8fAAAKJgZy
dQIAcG8fAAAKJgZygQkAcG8fAAAKJgZyswIAcG8fAAAKJgZyAAwAcG8fAAAKJgZyMAwAcG8fAAAK
JgJ7AgAABHM5AAAKDAhvOgAACg0JBm8aAAAKbzsAAAoJbzwAAApvPQAACglvPAAACnJNAwBwA4wC
AAAbbz4AAAomBAJ7BwAABDMyCW88AAAKcmYMAHAFjC4AAAFvPgAACiYJbzwAAApyfAwAcAUXWIwu
AAABbz4AAAomKzQJbzwAAApyZgwAcAQFWIwuAAABbz4AAAomCW88AAAKcnwMAHAEBVgXWIwuAAAB
bz4AAAomCG8/AAAKCXNCAAAKEwQRBAdvQwAACibeDBEELAcRBG84AAAK3N4KCSwGCW84AAAK3N4K
CCwGCG84AAAK3N4fJgJ7AQAABHKSDABwA4wCAAAbKC8AAApvHwAACib+GgcqQWQAAAIAAACuAQAA
CwAAALkBAAAMAAAAAAAAAAIAAAADAQAAxAAAAMcBAAAKAAAAAAAAAAIAAAD8AAAA1wAAANMBAAAK
AAAAAAAAAAAAAAAMAAAA0wEAAN8BAAAfAAAAFAAAARswAgCSAQAACAAAEXMQAAAKCgZyUwIAcG8f
AAAKJgZyYQIAcG8fAAAKJgZydQIAcG8fAAAKJgZyfwIAcG8fAAAKJgJ7AgAABHM5AAAKCwdvOgAA
CgwIBm8aAAAKbzsAAAoHbz8AAAoCCG9AAAAKKDYAAAp9CAAABN4KCCwGCG84AAAK3N4KBywGB284
AAAK3N4UJgJ7AQAABHLqDABwbx8AAAom/hpzEAAACgoGclMCAHBvHwAACiYGcucDAHBvHwAACiYG
ckEEAHBvHwAACiYGcuAEAHBvHwAACiYGckgFAHBvHwAACiYGcioNAHBvHwAACiYGcnUCAHBvHwAA
CiYGcn8CAHBvHwAACiYGcm0HAHBvHwAACiYGco0HAHBvHwAACiYGcq8HAHBvHwAACiYGcrUHAHBv
HwAACiYGcm0HAHBvHwAACiYGcgEIAHBvHwAACiYGcq8HAHBvHwAACiYGciEIAHBvHwAACiYGcssJ
AHBvHwAACiYGcrMNAHBvHwAACiYGctsNAHBvHwAACiYGcgMOAHBvHwAACiYGKgAAASgAAAIASQAl
bgAKAAAAAAIAQgA4egAKAAAAAAAABgCAhgAUFAAAAX4CFnMjAAAKfQkAAAQCFnMjAAAKfQwAAAQC
KEQAAAoqHgIoRQAACiqufhAAAAQtHnIlDgBw0AMAAAIoKQAACm9GAAAKc0cAAAqAEAAABH4QAAAE
Khp+EQAABCoeAoARAAAEKhp+EgAABCoeAihIAAAKKi5zDwAABoASAAAEKgAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAxAYAACN+AAAwBwAA5AkAACNTdHJpbmdzAAAAABQRAACY
DgAAI1VTAKwfAAAQAAAAI0dVSUQAAAC8HwAA/AIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQMAAAD6
ATMAFgAAAQAAADsAAAAFAAAAFQAAABAAAAARAAAASAAAAAIAAAAQAAAACAAAAAIAAAADAAAABAAA
AAIAAAABAAAABQAAAAEAAAABAAAAAABeBQEAAAAAAAYAowOIBwYAMgSIBwYA7wJ1Bw8A/AcAAAYA
HAMTBgYAhgMTBgYAZwMTBgYAGQQTBgYAwwMTBgYA3AMTBgYAMwMTBgYATgOcBAoA9wP3BAoAPAL3
BAYA3wakCQYADADfAAYAAQCYBQYAxQGYBQYAfwaYBQYA6QiYBQYATgdRCA4AyAmmAAYAigGYBQ4A
cQYyCQ4AFgEyCQ4AdwGmAA4ALgcyCQYAnwWYBQYA0gJ1BwYAAweoBwYApwb+BRIAmwJIBRIAAwNI
BRIAcwLpBQYAtwKIBwoANgX3BBYAPgjOARYAgQHOAQYAzASYBQYAsAWYBQYAXwmYBQYAwAF1AAYA
3wWYBQYA/AGYBQYAlgGYBQYAMgCYBQYAnAYTBgYAMQITBgYAIgWYBQYA0wSYBQ4AUgamAA4AWAKm
AA4A/gCJBg4AOwYyCQ4AJQaJBg4AEwcyCQ4AZAaJBg4AIAeJBgYA1AkTBgAAAABVAAAAAAABAAEA
AQAQAMcFsgA5AAEAAQAAABAArwcLCFEAEAAKAAABEABICAsIiQASAA4AAwEAAIMIAABxABMAEQAB
AGMBlAEBALYEOAABAIsFlAEBAGcJmAEBAIIJmAEBANMInwEBAK4InwEBAKQInwEBABMAogEBACEA
nwEBACgAnwEBADgAogEBAEYAnwEBAE0AnwEBAIwJnwERAKQFqQERACECrQERADoBsQEGBp4AnwFW
gHMItQFWgAECtQFQIAAAAACGAM0FBgABAHQiAAAAAIEAKgUQAAEA/CMAAAAAgQBvCbkBAgCAJgAA
AACBAJoIxwEFAGQoAAAAAIEAvgjSAQgAiCkAAAAAgQDwCNwBCgDwKwAAAACBALYI7QEOAGAuAAAA
AIEAXgD5AREAKDAAAAAAhhhoBwYAEQBIMAAAAACDGGgHBgARAFAwAAAAAJMI/wb+AREAfDAAAAAA
kwgJAgMCEQCDMAAAAACTCBUCCAIRAIswAAAAAJYIBQkOAhIAkjAAAAAAhhhoBwYAEgCaMAAAAACR
GG4HEwISAAAAAQC6AQAAAQBKAQAAAgBUCQAAAwDICAAAAQBKAQAAAgCuCAAAAwDTCAAAAQBKAQAA
AgC9BQAAAQBUCQAAAgA9BwAAAwDtBgAABACEBAAAAQBKAQAAAgCuCAAAAwDTCAAAAQB+BAkAaAcB
ABEAaAcGABkAaAcKACkAaAcQADEAaAcQADkAaAcQAEEAaAcQAEkAaAcQAFEAaAcQAFkAaAcQAGEA
aAcQAGkAaAcGAOkAaAcGAAkBaAcVABkBaAcGAHkAaAcGAHEAewglACEBIwkBACEBOggrACkBjwUx
ADkB3Qk4ADEBWgQ7AJEAwAlAAJEAygRFADEBUARJAKEAygRFAEkBMABNAAwAaAcGAFEBsAJYADkB
2whdAHkA7gFkAJkAVwFFAJkAKwFFADkB4ghqABQAaAeDAAwAkwIGAAwA+gCDAFkB0gWJAFkBswaQ
AKEA+QGWAGEBqAGcAGEBIQGlAIEBcAGwAEkBIAXLAJEBlATSAEkBMADbADkB2wjiABQAcQToABQA
EQnsANEAkQgFAaEBWgcLAakASAlJALEAjwUQAUkBMAAVAakAmwnoALkAiwIGAMEAaAcQAMEACAEk
AakBsAkQAMkAZAgpAbkBywYGALEBZAQvAckBuAUGAKkB0QZJANEAaAcGANkAaAdVAdEBhgVbAXEA
aAcGAKEAaAcGAGEB0AlqAfEAaAdwAREBaAcGAAgAUACKAQgAVACPASkAcwBOAi4ACwAmAi4AEwAv
Ai4AGwBOAi4AIwBXAi4AKwCAAi4AMwCAAi4AOwCGAi4AQwBXAi4ASwCTAi4AUwCAAi4AWwCxAkMA
YwCPAUkAcwBOAmMAawCPAUECewCPARwAcgC3APEAGgE3AUgBYQEDAAEABAADAAAAAwcXAgAAKQIc
AgAAGwkhAgIACwADAAIADAAFAAEADQAFAAIADgAHAFIAfQAEgAAAAQAAAEMZClIAAAAAAACyAAAA
BAAAAAAAAAAAAAAAeAHWAAAAAAANAAAAAAAAAAAAAACBAdgEAAAAAAQAAAAAAAAAAAAAAHgBpgAA
AAAABAAAAAAAAAAAAAAAeAGYBQAAAAANAAAAAAAAAAAAAACBAX8AAAAAAAAAAAABAAAAuQcAAAUA
AgAAAABOdWxsYWJsZWAxAExpc3RgMQBzdXBwbGllckNvZGUxAGlkTnVtMQByb3dOdW0xAFRvSW50
MzIAc3VwcGxpZXJDb2RlMgBpZE51bTIAcm93TnVtMgA8TW9kdWxlPgBHZXRUb3RhbFJvd3NfQ3Jl
YXRlU1FMAFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBT
eXN0ZW0uRGF0YQBTVF9jZDQwNDk1M2U2YTU0ZWQ5YWJhNjY2MzgzZjhhYzkzYgBtc2NvcmxpYgBT
eXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQARGJDb21tYW5kAENyZWF0ZUNvbW1hbmQAU3Fs
Q29tbWFuZABHZXRNZXRob2QAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3RhbmNlAHN1cHBsaWVy
Q29kZQBnZXRfTWVzc2FnZQBlcnJvck1lc3NhZ2UASW52b2tlAERhdGFUYWJsZQBWYXJpYWJsZQBJ
RGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBvdXRwdXRGaWxl
AERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQXBwZW5kTGluZQBHZXRU
eXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAE1ldGhv
ZEJhc2UAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rpb25C
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAUmV2ZXJzZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBEZWxldGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAQWRkV2l0aFZhbHVl
AGdldF9IYXNWYWx1ZQB2YWx1ZQBjb25zZWN1dGl2ZUZsYWcAQ2VpbGluZwBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAHNxbENvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcATWF0aABNaWNyb3NvZnQu
U3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0
VGFzawBUb0RlY2ltYWwAT3V0cHV0RXhjZWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUX2NkNDA0OTUzZTZhNTRlZDlhYmE2NjYzODNmOGFjOTNiLmRsbABGaWxsAHNx
bABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBCb29sZWFuAE9wZW4AZXF1YWxTaWdu
AFNjcmlwdE1haW4AQ3JlYXRlRG9tYWluAEFwcERvbWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYlBhcmFtZXRlckNvbGxlY3Rp
b24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24A
U3FsQ29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAE1ldGhvZEluZm8AQ3Vs
dHVyZUluZm8AQ3JlYXRlSW5zdGFuY2VBbmRVbndyYXAAQ2xlYXIARXhlY3V0ZVNjYWxhcgBTdHJp
bmdCdWlsZGVyAHN1cHBsaWVyQ29kZVVuZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU3FsUGFyYW1l
dGVyAERiRGF0YUFkYXB0ZXIAU3FsRGF0YUFkYXB0ZXIAc3VwcGxpZXJDb2RlT3ZlcgBJRW51bWVy
YXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2NkNDA0OTUzZTZh
NTRlZDlhYmE2NjYzODNmOGFjOTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF9jZDQwNDk1M2U2YTU0ZWQ5YWJhNjY2MzgzZjhhYzkzYi5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9QYXJhbWV0ZXJz
AFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9Sb3dzAENoZWNrUm93cwB0b3RhbFJv
d3MAbWluUm93cwBHZXRSb3dzAENvdW50Um93cwBvdXRwdXRSb3dzAG1heFJvd3MAQ29uY2F0AEZv
cm1hdABPYmplY3QAQ3JlYXRlU1FMX1NwbGl0U2hlZXQAZ2V0X0RlZmF1bHQAR2V0VmFsdWVPckRl
ZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJyZW50AHNo
ZWV0Q291bnQAQ29udmVydABzcWxMaXN0AENyZWF0ZVNxbFNoZWV0TGlzdABzaGVldExpc3QAY29t
bWFuZFRpbWVPdXQATW92ZU5leHQAU3lzdGVtLlRleHQAc2V0X0NvbW1hbmRUZXh0AGdldF9Ob3cA
RGF0YVJvdwBnZXRfQXNzZW1ibHkARW1wdHkAAAAZRQByAHIAbwByAE0AZQBzAHMAYQBnAGUAABNF
AHIAcgBvAHIARgBsAGEAZwAAE1MAdABhAHIAdABUAGkAbQBlAAAhQwBvAG4AbgBlAGMAdABpAG8A
bgBTAHQAcgBpAG4AZwAAFU8AdQB0AHAAdQB0AEYAaQBsAGUAAA9NAGEAeABSAG8AdwBzAAAdQwBv
AG0AbQBhAG4AZABUAGkAbQBlAE8AdQB0AAA9TVLeVlxPEGLVMKEwpDDrMG4wSlJklmswMVlXZVcw
fjBXMF8wAjANAAoA1TChMKQw6zAgADoAIAA8ADwAAQU+AD4AAG8QMFMAdQBwAHAAbABpAGUAcgAg
AFAAcgBvAGQAdQBjAHQAcwAgAL1i+lHmUQZ0ZzCoMOkw/DBMMHp2H3VXMH4wVzBfMAIwETANAAoA
DQAKAHsAMAB9AA0ACgAoAHsAMQB9ACkADQAKAHsAMgB9AAENUwBoAGUAZQB0ADEAABFNAHkARABv
AG0AYQBpAG4AABVUAEMASQBPAHAAZQBuAFgATQBMAAArVABDAEkATwBwAGUAbgBYAE0ATAAuAFQA
QwBJAE8AcABlAG4AWABNAEwAABtDAHIAZQBhAHQAZQBPAHAAZQBuAFgATQBMAAA3qDCvMLsw6zD6
UZtSazAxWVdlVzB+MFcwXzACMA0ACgD6UZtS1TChMKQw6zAgADoAIAA8ADwAAQtTAGgAZQBlAHQA
AA1SAE8AVwBOAFUATQAAGVMAdQBwAHAAbABpAGUAcgBDAG8AZABlAAALSQBEAE4AVQBNAAANUwBF
AEwARQBDAFQAABMJAEMATwBVAE4AVAAoACoAKQAACUYAUgBPAE0AADMJAFsAUwB1AHAAcABsAGkA
ZQByAF8AUAByAG8AZAB1AGMAdABdACAAQQBTACAAUwBQAAALVwBIAEUAUgBFAABFCQBTAFAALgBb
AFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0AIAA9ACAAQABzAHUAcABwAGwAaQBlAHIAQwBvAGQA
ZQAARwkAUwBQAC4AWwBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQBdACAAPgA9ACAAQABzAHUAcABw
AGwAaQBlAHIAQwBvAGQAZQAAGXMAdQBwAHAAbABpAGUAcgBDAG8AZABlAABbUwB1AHAAcABsAGkA
ZQByAF8AUAByAG8AZAB1AGMAdAAgAG4w9k5wZdZTl19rMDFZV2VXMH4wVzBfMAIwcwB1AHAAcABs
AGkAZQByAEMAbwBkAGUAIAA9ACAAASNXAEkAVABIACAAUgBvAHcARABhAHQAYQAgAEEAUwAgACgA
AFkJAFMAUAAuAFsAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAXQAgAEEAUwAgAFsAUwB1AHAAcABs
AGkAZQByACAAQwBvAGQAZQAgACgAUABEAEIAKQBdACwAAICdCQBDAE8ATgBDAEEAVAAoAEkAUwBO
AFUATABMACgAUwAuAFsATgBhAG0AZQAzAF0ALAAgACcAJwApACwAIAAnACAAJwAsACAASQBTAE4A
VQBMAEwAKABTAC4AWwBOAGEAbQBlADQAXQAsACAAJwAnACkAKQAgAEEAUwAgAFsAUwB1AHAAcABs
AGkAZQByACAATgBhAG0AZQBdACwAAWcJAEkAUwBOAFUATABMACgAUAAuAFsAUAByAG8AZAB1AGMA
dABOAHUAbQBiAGUAcgBdACwAIAAnACcAKQAgAEEAUwAgAFsAUAByAG8AZAB1AGMAdAAgAE4AdQBt
AGIAZQByAF0ALAABgMEJAEkAUwBOAFUATABMACgAQwBBAFMARQAgAFcASABFAE4AIABQAC4AWwBR
AHUAbwBOAGEAbQBlAF0AIABJAFMAIABOAFUATABMACAAVABIAEUATgAgAFAALgBbAE4AYQBtAGUA
XQAgAEUATABTAEUAIABQAC4AWwBRAHUAbwBOAGEAbQBlAF0AIABFAE4ARAAsACAAJwAnACkAIABB
AFMAIABbAFAAcgBvAGQAdQBjAHQAIABOAGEAbQBlAF0ALAABgIkJAEwARQBGAFQAKABDAE8ATgBW
AEUAUgBUACgATgBWAEEAUgBDAEgAQQBSACwAIABTAFAALgBbAFUAcABkAGEAdABlAEQAYQB0AGUA
XQAsACAAMQAyADAAKQAsACAAMQAwACkAIABBAFMAIABbAFUAcABkAGEAdABlACAARABhAHQAZQBd
ACwAAIDVCQBSAE8AVwBfAE4AVQBNAEIARQBSACgAKQAgAE8AVgBFAFIAKABPAFIARABFAFIAIABC
AFkAIABTAFAALgBbAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0ALAAgAEkAUwBOAFUATABMACgA
UAAuAFsAUAByAG8AZAB1AGMAdABOAHUAbQBiAGUAcgBdACwAIAAnACcAKQAsACAAUwBQAC4AWwBV
AHAAZABhAHQAZQBEAGEAdABlAF0AKQAgAEEAUwAgAFsAUgBPAFcATgBVAE0AXQABH0wARQBGAFQA
IABPAFUAVABFAFIAIABKAE8ASQBOAAAhCQBbAFMAdQBwAHAAbABpAGUAcgBdACAAQQBTACAAUwAA
BU8ATgAASwkAUwAuAFsAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAXQAgAD0AIABTAFAALgBbAFMA
dQBwAHAAbABpAGUAcgBDAG8AZABlAF0AAB8JAFsAUAByAG8AZAB1AGMAdABdACAAQQBTACAAUAAA
PwkAUwBQAC4AWwBQAHIAbwBkAHUAYwB0AEkARABdACAAPQAgAFAALgBbAFAAcgBvAGQAdQBjAHQA
SQBEAF0AAC0JAFMAUAAuAFsAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAXQAgAD4APQAgAAAzCQBB
AE4ARAAgAFMAUAAuAFsAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAXQAgADwAIAAAAykAAC8JAFsA
UwB1AHAAcABsAGkAZQByACAAQwBvAGQAZQAgACgAUABEAEIAKQBdACwAACMJAFsAUwB1AHAAcABs
AGkAZQByACAATgBhAG0AZQBdACwAACUJAFsAUAByAG8AZAB1AGMAdAAgAE4AdQBtAGIAZQByAF0A
LAAAIQkAWwBQAHIAbwBkAHUAYwB0ACAATgBhAG0AZQBdACwAAB0JAFsAVQBwAGQAYQB0AGUAIABE
AGEAdABlAF0AABEJAFIAbwB3AEQAYQB0AGEAABcJAFIATwBXAE4AVQBNACAAPgA9ACAAAB8JAEEA
TgBEACAAUgBPAFcATgBVAE0AIAA8AD0AIAAAEU8AUgBEAEUAUgAgAEIAWQAADwkAUwBFAEwARQBD
AFQAACMJAAkAWwBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQBdACwAAICpCQAJAFIATwBXAF8ATgBV
AE0AQgBFAFIAKAApACAATwBWAEUAUgAoAFAAQQBSAFQASQBUAEkATwBOACAAQgBZACAAWwBTAHUA
cABwAGwAaQBlAHIAQwBvAGQAZQBdACAATwBSAEQARQBSACAAQgBZACAAWwBTAHUAcABwAGwAaQBl
AHIAQwBvAGQAZQBdACkAIABBAFMAIABbAEkARABOAFUATQBdACwAAHEJAAkAUgBPAFcAXwBOAFUA
TQBCAEUAUgAoACkAIABPAFYARQBSACgATwBSAEQARQBSACAAQgBZACAAWwBTAHUAcABwAGwAaQBl
AHIAQwBvAGQAZQBdACkAIABBAFMAIABbAFIATwBXAE4AVQBNAF0AAAsJAEYAUgBPAE0AACkJAAkA
WwBTAHUAcABwAGwAaQBlAHIAXwBQAHIAbwBkAHUAYwB0AF0AAA0JAFcASABFAFIARQAAQwkACQBb
AFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0AIAA+AD0AIABAAHMAdQBwAHAAbABpAGUAcgBDAG8A
ZABlAAAhCQBbAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0ALAAAEwkAWwBJAEQATgBVAE0AXQAs
AAATCQBbAFIATwBXAE4AVQBNAF0AAC8JAFsAUgBPAFcATgBVAE0AXQAgAD0AIABAAHIAbwB3AE4A
dQBtAGIAZQByADAAADUJAE8AUgAgAFsAUgBPAFcATgBVAE0AXQAgAD0AIABAAHIAbwB3AE4AdQBt
AGIAZQByADEAABVyAG8AdwBOAHUAbQBiAGUAcgAwAAAVcgBvAHcATgB1AG0AYgBlAHIAMQAAV1MA
dQBwAHAAbABpAGUAcgBfAFAAcgBvAGQAdQBjAHQAIABuMNZTl19rMDFZV2VXMH4wVzBfMAIwcwB1
AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAAAT9TAHUAcABwAGwAaQBlAHIAXwBQAHIAbwBkAHUA
YwB0ACAAbjDPffZOcGXWU5dfazAxWVdlVzB+MFcwXzACMAGAhwkATABFAEYAVAAoAEMATwBOAFYA
RQBSAFQAKABOAFYAQQBSAEMASABBAFIALAAgAFMAUAAuAFsAVQBwAGQAYQB0AGUARABhAHQAZQBd
ACwAIAAxADIAMAApACwAIAAxADAAKQAgAEEAUwAgAFsAVQBwAGQAYQB0AGUAIABEAGEAdABlAF0A
ACcJAFMAUAAuAFsAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAXQAsAAAnCQBQAC4AWwBQAHIAbwBk
AHUAYwB0AE4AdQBtAGIAZQByAF0ALAAAIQkAUwBQAC4AWwBVAHAAZABhAHQAZQBEAGEAdABlAF0A
AHFTAFQAXwBjAGQANAAwADQAOQA1ADMAZQA2AGEANQA0AGUAZAA5AGEAYgBhADYANgA2ADMAOAAz
AGYAOABhAGMAOQAzAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAogQt15ImwQbN0FodF8vomAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAgQgHBA4RSRJNDgUg
ABKAkQUgABKAlQYgARKAmRwCBg4EIAEBHAQAABFJAyAADgMgABwEAAEIDgUVEkEBDgQAAQEOBgAD
Dg4ODgUgARI9DgcABA4OHBwcCgcEHBURRQEICAgFFRFFAQgFIAEBEwAGAAESgK0OBSACHA4OBSAA
EoCxCAABEoCxEYC1CiACEoC9Dh0SgLEGIAIcHB0cEwcJCAgCCAgICBURRQEIFRFFAQgGAAERgMUN
CAABEYDFEYDFBgABCBGAxQUAAg4cHAMgAAIEIAATABMHBgISVRJZEl0VEUUBCBURRQEIBSAAEoDN
BCAAElUEIAEcDgQAAQgcCQcEEj0IEmESZQQgABJlBSAAEoDZByACEoDhDhwQBwUICBI9FRFFAQgV
EUUBCAwHBRI9EmkSYRJlEm0FIAEBEmUFIAEIEmkIBwMSPRJhEmUFIAASgO0HIAIBDhKA7Qi3elxW
GTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhI9BgYVEkEBDgIGCAYGFRFFAQgDBhJ5AwYSfQMGEhAD
BhEUDSADCBAVEUUBCBAIEAgKIAMCFRFFAQgICAkgAggVEUUBCAIQIAQSPQgVEUUBCBURRQEIAgsg
AxJpFRFFAQgICAQgABI9BAAAEnkEAAASfQUAAQESfQQAABIQAwAAAQQIABJ5BAgAEn0ECAASEAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfY2Q0
MDQ5NTNlNmE1NGVkOWFiYTY2NjM4M2Y4YWM5M2IAAAUBAAAAAAwBAAdUb3NoaWJhAAAdAQAYQ29w
eXJpZ2h0IEAgVG9zaGliYSAyMDE3AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQFQA
AAAAAAAAAAAAWlQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExUAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAANgQAAAAAAAAA
AAAANgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAApS
QxkAAAEAClJDGT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBJYDAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHIDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQAB
AEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAwAAgAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAFQA
bwBzAGgAaQBiAGEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AYwBkADQAMAA0ADkANQAzAGUANgBhADUANABlAGQAOQBhAGIAYQA2ADYANgAzADgAMwBmADgA
YQBjADkAMwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANAA2
ADcALgAyADEAMAAwADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
YwBkADQAMAA0ADkANQAzAGUANgBhADUANABlAGQAOQBhAGIAYQA2ADYANgAzADgAMwBmADgAYQBj
ADkAMwBiAC4AZABsAGwAAABWABkAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABUAG8AcwBoAGkAYgBhACAAMgAwADEANwAAAAAAKgABAAEATABl
AGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwA
RgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYwBkADQAMAA0ADkANQAzAGUANgBhADUANABlAGQAOQBh
AGIAYQA2ADYANgAzADgAMwBmADgAYQBjADkAMwBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUA
YwB0AE4AYQBtAGUAAAAAAFMAVABfAGMAZAA0ADAANAA5ADUAMwBlADYAYQA1ADQAZQBkADkAYQBi
AGEANgA2ADYAMwA4ADMAZgA4AGEAYwA5ADMAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANgA0ADYANwAuADIAMQAwADAAMgAAAAAARgAPAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA0ADYANwAuADIAMQAwADAAMgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAGw0AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\メール送信タスク"
      DTS:CreationName="Microsoft.SendMailTask"
      DTS:Description="メール送信タスク"
      DTS:DTSID="{DF91B1AC-2976-44D3-B8A5-2899066141B9}"
      DTS:ExecutableType="Microsoft.SendMailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="メール送信タスク"
      DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:PropertyExpression
        DTS:Name="FromLine">@[User::MailFrom]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ToLine">@[User::MailTo]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{200DFC76-7213-4974-B50A-811B382E3FE6}"
          SendMailTask:From="devteam_app@tcichemicals.com"
          SendMailTask:To="keiko.watanabe@tcichemicals.com"
          SendMailTask:Subject="[PDB] Supplier Products Export エラー"
          SendMailTask:Priority="High"
          SendMailTask:MessageSourceType="Variable"
          SendMailTask:MessageSource="User::ErrorMessage" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\後処理"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="スクリプト タスク"
      DTS:DTSID="{B54766CB-2691-45FD-BFB5-E96A100CFF57}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="後処理"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_90f1589c22be400f8dd2e1d86c6b28cb"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::StartTime"
          ReadWriteVariables="User::ErrorFlag,User::ErrorMessage">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_90f1589c22be400f8dd2e1d86c6b28cb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        // 【後処理】
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        // エラーメッセージ
        StringBuilder errorMessage;

        /// <summary>
        /// メイン処理
        /// </summary>
        /// <remarks>
        /// 1. 変数の初期化
        /// 2. エラー時のメッセージ生成
        public void Main()
        {
            try
            {
                //エラーメッセージ
                this.errorMessage = new StringBuilder();

                // 変数の初期化
                Dts.TaskResult = (int)ScriptResults.Success;

                // 実行日
                DateTime execDate = DateTime.Now;

                // エラーフラグ
                bool errorFlag = Convert.ToBoolean(Dts.Variables["ErrorFlag"].Value);

                // エラーメッセージがある場合
                if(errorFlag)
                {
                    // 出力メッセージ作成
                    StringBuilder noticeMessage = new StringBuilder();
                    noticeMessage.AppendLine("処理名   ： [PDB] Supplier Products Export");
                    noticeMessage.AppendLine("実行パス ： " + Environment.CommandLine);
                    noticeMessage.AppendLine("開始日時 ： " + Dts.Variables["StartTime"].Value.ToString());
                    noticeMessage.AppendLine("終了日時 ： " + execDate.ToString());
                    noticeMessage.AppendLine("処理結果 ： エラーが発生しました。" + "\r\n" + "\r\n" + Dts.Variables["ErrorMessage"].Value.ToString());
                    // 共通のメッセージ変数に作成した通知内容をセット
                    Dts.Variables["ErrorMessage"].Value = noticeMessage.ToString();
                }

            }
            catch(Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                Dts.Variables["ErrorFlag"].Value = true;
                string formatMessage = "【後処理でエラーが発生しました。】" + "\r\n" + "{0}" + "\r\n" + "({1})" + "\r\n" + "{2}";

                // 出力メッセージ作成
                StringBuilder noticeMessage = new StringBuilder();
                noticeMessage.AppendLine("処理名   ： [PDB] Supplier Products Export");
                noticeMessage.AppendLine("実行パス ： " + Environment.CommandLine);
                noticeMessage.AppendLine("開始日時 ： " + Dts.Variables["StartTime"].Value.ToString());
                noticeMessage.AppendLine("終了日時 ： " + DateTime.Now.ToString());
                noticeMessage.AppendLine("処理結果 ： エラーが発生しました。" + "\r\n" + "\r\n" + Dts.Variables["ErrorMessage"].Value.ToString());
                Dts.Variables["ErrorMessage"].Value = noticeMessage.ToString() + "\r\n" + String.Format(formatMessage, this.errorMessage.ToString(), ex.Message, ex.StackTrace);
            }

        }

    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_90f1589c22be400f8dd2e1d86c6b28cb.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{98184788-e82a-4b97-8ce8-fecbf1fa1959}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_90f1589c22be400f8dd2e1d86c6b28cb</RootNamespace>
    <AssemblyName>ST_90f1589c22be400f8dd2e1d86c6b28cb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_90f1589c22be400f8dd2e1d86c6b28cb</msb:CodeName>
		<msb:DisplayName>ST_90f1589c22be400f8dd2e1d86c6b28cb</msb:DisplayName>
		<msb:ProjectId>{F99AA588-5538-4F42-8956-07E14D79FE57}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_90f1589c22be400f8dd2e1d86c6b28cb.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Settings.get_Default():ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Sett" +
    "ings")]

namespace ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_90f1589c22be400f8dd2e1d86c6b28cb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Toshiba")]
[assembly: AssemblyProduct("ST_90f1589c22be400f8dd2e1d86c6b28cb")]
[assembly: AssemblyCopyright("Copyright @ Toshiba 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_90f1589c22be400f8dd2e1d86c6b28cb.dll">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
sgBWgIYFtQBWgAwBtQBQIAAAAACGACQEBgABAKwiAAAAAIYYnQQGAAEAtCIAAAAAgxidBAYAAQC8
IgAAAACTCIkEuQABAOgiAAAAAJMIFAG+AAEA7yIAAAAAkwggAcMAAQD3IgAAAACWCLkFyQACAP4i
AAAAAIYYnQQGAAIABiMAAAAAkRijBM4AAgAAAAEAMgMJAJ0EAQARAJ0EBgAZAJ0ECgApAJ0EEAAx
AJ0EEAA5AJ0EEABBAJ0EEABJAJ0EEABRAJ0EEABZAJ0EEABhAJ0EEABpAJ0EBgCZAJ0EBgDBAJ0E
FQDRAJ0EBgB5AJ0EBgBxAI4FKQDZAMUFAQCBAPQFLgDZAG8FMwDhAPMDOADpAB4DPgDxABQEQgB5
APwARwD5AOwATQABAaQFUQChAFIDVwCBAFIDVwDpACgDWwCJAH0AVwCJAF4AVwABAasFYAABAaQF
aABxAJ0EBgChAJ0EBgARAbEAbwARAfwFeACpAJ0EfgDJAJ0EBgAIABgAmAAIABwAnQApAHMACQEu
AAsA4QAuABMA6gAuABsACQEuACMAEgEuACsAOwEuADMAOwEuADsAQQEuAEMAEgEuAEsATgEuAFMA
OwEuAFsAbAFDAGMAnQBJAHMACQFjAGsAnQCBAHsAnQAbAAMAAQAEAAMAAACNBNIAAAA0AdcAAAC9
BdwAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAAjGXpDAAAAAAAAMQAAAAQAAAAAAAAA
AAAAAIYAVQAAAAAADQAAAAAAAAAAAAAAjwBbAwAAAAAEAAAAAAAAAAAAAACGAPwDAAAAAA0AAAAA
AAAAAAAAAI8ACgAAAAAAAAAAAAEAAADuBAAABQACAAAAADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUXzkwZjE1ODljMjJiZTQwMGY4ZGQyZTFkODZjNmIy
OGNiAG1zY29ybGliAGdldF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBl
cnJvck1lc3NhZ2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
RGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBnZXRfQ29tbWFuZExpbmUA
QXBwZW5kTGluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlw
dE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF85MGYxNTg5YzIyYmU0MDBmOGRk
MmUxZDg2YzZiMjhjYi5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AVG9Cb29s
ZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFN0cmluZ0J1aWxkZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF85MGYxNTg5YzIyYmU0
MDBmOGRkMmUxZDg2YzZiMjhjYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU1RfOTBmMTU4OWMyMmJlNDAwZjhkZDJlMWQ4NmM2YjI4Y2IuUHJvcGVydGllcwBn
ZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNh
dABGb3JtYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AEVudmlyb25tZW50AENv
bnZlcnQAU3lzdGVtLlRleHQAZ2V0X05vdwBnZXRfQXNzZW1ibHkAAAAAABNFAHIAcgBvAHIARgBs
AGEAZwAATeZRBnQNVCAAIAAgABr/IABbAFAARABCAF0AIABTAHUAcABwAGwAaQBlAHIAIABQAHIA
bwBkAHUAYwB0AHMAIABFAHgAcABvAHIAdAABD59bTIjRMLkwIAAa/yAAAQ+LlctZ5WVCZiAAGv8g
AAETUwB0AGEAcgB0AFQAaQBtAGUAAA9CfYZO5WVCZiAAGv8gAAEt5lEGdFB9nGcgABr/IACoMOkw
/DBMMHp2H3VXMH4wVzBfMAIwDQAKAA0ACgABGUUAcgByAG8AcgBNAGUAcwBzAGEAZwBlAABFEDCM
X+ZRBnRnMKgw6TD8MEwwenYfdVcwfjBXMF8wAjARMA0ACgB7ADAAfQANAAoAKAB7ADEAfQApAA0A
CgB7ADIAfQABBQ0ACgAAcVMAVABfADkAMABmADEANQA4ADkAYwAyADIAYgBlADQAMAAwAGYAOABk
AGQAMgBlADEAZAA4ADYAYwA2AGIAMgA4AGMAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAAAAgXXQMVzys0WNfME2fngh+wAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQERXQ0HBhFBEj0SRQ4SPRFBBCAAEm0EAAARQQQgABJxBSABEnUcAyAAHAQAAQIcBSABEj0OAwAA
DgUAAg4ODgMgAA4EIAEBHAcABA4OHBwcBgADDg4ODggAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6
XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEj0DBhJVAwYSWQMGEhACBggDBhEUBAAAElUEAAAS
WQUAAQESWQQAABIQAwAAAQQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOTBmMTU4OWMyMmJlNDAwZjhkZDJlMWQ4NmM2
YjI4Y2IAAAUBAAAAAAwBAAdUb3NoaWJhAAAdAQAYQ29weXJpZ2h0IEAgVG9zaGliYSAyMDE3AABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNQAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABgyAAAAAAAAAAAAADIyAAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAkMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA2BAAAAAAAAAAAAAA2BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAekMjGQAAAQB6QyMZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAElgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAcgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADAACAABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAVABvAHMAaABpAGIAYQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwA5ADAAZgAxADUAOAA5AGMAMgAyAGIAZQA0ADAAMABmADgAZABk
ADIAZQAxAGQAOAA2AGMANgBiADIAOABjAGIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANgA0ADMANQAuADEANwAyADcANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABTAFQAXwA5ADAAZgAxADUAOAA5AGMAMgAyAGIAZQA0ADAAMABmADgAZABkADIA
ZQAxAGQAOAA2AGMANgBiADIAOABjAGIALgBkAGwAbAAAAFYAGQABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFQAbwBzAGgAaQBiAGEAIAAyADAA
MQA3AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA5ADAAZgAxADUAOAA5AGMA
MgAyAGIAZQA0ADAAMABmADgAZABkADIAZQAxAGQAOAA2AGMANgBiADIAOABjAGIALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOQAwAGYAMQA1ADgAOQBjADIA
MgBiAGUANAAwADAAZgA4AGQAZAAyAGUAMQBkADgANgBjADYAYgAyADgAYwBiAAAAQgAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADQAMwA1AC4AMQA3ADIANwA0AAAA
AABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADQAMwA1
AC4AMQA3ADIANwA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAARDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[制約]"
      DTS:CreationName=""
      DTS:DTSID="{9C92A7B6-453C-47FB-9250-4D559ED75593}"
      DTS:From="Package\Supplier Products データ抽出処理"
      DTS:LogicalAnd="True"
      DTS:ObjectName="制約"
      DTS:To="Package\後処理"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[制約 1]"
      DTS:CreationName=""
      DTS:DTSID="{37C78D6B-EADF-4BB6-9FA7-85C3784981BE}"
      DTS:EvalOp="4"
      DTS:Expression="@[User::ErrorFlag] == true"
      DTS:From="Package\後処理"
      DTS:ObjectName="制約 1"
      DTS:To="Package\メール送信タスク"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--この CDATA セクションにはパッケージのレイアウト情報が含まれています。(x,y) 座標、幅、高さなどの情報が含まれます。-->
<!--このセクションを手動で編集して間違った場合は、セクションを削除できます。-->
<!--パッケージは正常に読み込むことができますが、以前のレイアウト情報は失われ、デザイン画面上の要素が自動的に再配置されます。-->
<Objects
  Version="8">
  <!--次の各ノードには、実行時の動作に影響しないプロパティが含まれます。-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="250,42"
          Id="Package\Supplier Products データ抽出処理"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\メール送信タスク"
          TopLeft="51,209.5" />
        <NodeLayout
          Size="117,42"
          Id="Package\後処理"
          TopLeft="72,107.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[制約]"
          TopLeft="130.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.501953125,20.8212890625,21.00390625,10.857421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[制約 1]"
          TopLeft="130.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.3681640625,18.25,38.736328125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>