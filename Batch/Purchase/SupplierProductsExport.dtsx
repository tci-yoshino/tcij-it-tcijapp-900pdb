<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/3/2017 11:40:54 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TCIJ-N12006"
  DTS:CreatorName="TCIX\Keiko.Watanabe"
  DTS:DTSID="{93DE5C30-8E0F-42A1-9AC0-C1792C401436}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5228.0"
  DTS:LocaleID="1041"
  DTS:ObjectName="SupplierProductsExport"
  DTS:PackageType="5"
  DTS:VersionBuild="82"
  DTS:VersionGUID="{CEE3D2A7-70C5-41E8-AE7D-680FC463735C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="C:\tcijapp\Purchase\Batch\Purchase\Purchase.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{E12A53C5-4D7E-404B-8C65-703920033B64}"
      DTS:ObjectName="構成 1" />
    <DTS:Configuration
      DTS:ConfigurationString="C:\tcijapp\Purchase\Batch\Purchase\SupplierProductsExport.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{C9F4C4BF-2772-4A7E-9B4E-62A80361DB94}"
      DTS:ObjectName="構成 2" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A3DD9CB5-1AEB-478C-9ACD-84AB76563916}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CommandTimeOut">
      <DTS:VariableValue
        DTS:DataType="3">600</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{37010AB9-C3C2-4F8D-8F8F-22F52FB75226}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source="(local)"; Initial Catalog=Purchase; User ID=Purchase; Password=n061t@kun;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9DA23F31-401A-487C-8DCF-F50392EEFB42}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorFlag">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF0BB846-7006-46CF-99A7-FE1A6D0B4FD7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{258FADE3-51CB-4123-AA31-904BE69D0A25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogDir">
      <DTS:VariableValue
        DTS:DataType="8">C:\tcijapp\Purchase\Batch\Log\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC91315C-A162-49D1-BF19-00EF4A19D269}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailFrom">
      <DTS:VariableValue
        DTS:DataType="8">devteam_app@tcichemicals.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5A1E6C6-AE2F-46B9-9AF5-10C1ABC4E5FD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailTo">
      <DTS:VariableValue
        DTS:DataType="8">app@tcichemicals.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EA9D1A7C-5BFC-48D3-808A-07C07DF5B509}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MaxRows">
      <DTS:VariableValue
        DTS:DataType="3">300000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74DDFC40-1CE8-4BFE-ABAE-C1E2B63B75E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputFile">
      <DTS:VariableValue
        DTS:DataType="8">\\TFL5\GlobalProject\Supplier_Evaluation\Data\Purchasing records (PDB)\PDB supplier products.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{459E3CA9-7C4F-468D-A51C-87E808996B84}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPEndPoint">
      <DTS:VariableValue
        DTS:DataType="8">tcichemicals.smtps.jp</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8FD9EA74-1ED6-4B1A-AFFF-83FD967C3945}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPPassword">
      <DTS:VariableValue
        DTS:DataType="8">nyWsT4NTF!tV</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4728CFA1-C586-427A-8ABF-D17B67993D55}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPPort">
      <DTS:VariableValue
        DTS:DataType="3">10025</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8F79589F-7ACF-4C16-B36F-E72CACBF0A32}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPUserName">
      <DTS:VariableValue
        DTS:DataType="8">cmc_tcijapp@tcichemicals.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA47C8ED-1AE2-4994-94F5-926D0CAB461A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StartTime">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">3,7,OnError,12,OnTaskFailed,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\エラーメール送信"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="スクリプト タスク"
      DTS:DTSID="{A58324CB-FCD4-49EE-8818-12CD416E5367}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="エラーメール送信"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_de7dfe889edf4f169044b57ae822a2e6"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::SMTPEndPoint, User::SMTPPort, User::SMTPUserName, User::SMTPPassword, User::MailFrom, User::MailTo, User::ErrorMessage">
          <ProjectItem
            Name="ST_de7dfe889edf4f169044b57ae822a2e6.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{86BE57DD-9A9C-4097-983B-ACCB3083227C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_de7dfe889edf4f169044b57ae822a2e6</RootNamespace>
    <AssemblyName>ST_de7dfe889edf4f169044b57ae822a2e6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="MailKit">
      <HintPath>C:\tcijapp\ExternalAssemblies\MailKit.dll</HintPath>
    </Reference>
    <Reference Include="MimeKit">
      <HintPath>C:\tcijapp\ExternalAssemblies\MimeKit.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Buffers">
      <HintPath>C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Buffers.dll</HintPath>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de7dfe889edf4f169044b57ae822a2e6.Properties.Settings.get_Default():ST_de7dfe889edf4f169044b57ae822a2e6.Properties.Sett" +
    "ings")]

namespace ST_de7dfe889edf4f169044b57ae822a2e6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using MimeKit;
using System;
using System.Text.RegularExpressions;
#endregion

namespace ST_de7dfe889edf4f169044b57ae822a2e6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        const string MAIL_SUBJECT = "[Purchase] 仕入先製品データエクスポートエラー";

        private string smtpEndPoint = string.Empty;
        private int smtpPort = 0;
        private string smtpUserName = string.Empty;
        private string smtpPassword = string.Empty;
        private string mailFrom = string.Empty;
        private string errorMessage = string.Empty;

        /// <summary>
        /// メイン処理を行います。
        /// </summary>
        public void Main()
        {

            Dts.TaskResult = (int)ScriptResults.Success;

            this.smtpEndPoint = Dts.Variables["SMTPEndPoint"].Value.ToString();
            this.smtpPort = Convert.ToInt32(Dts.Variables["SMTPPort"].Value);
            this.smtpUserName = Dts.Variables["SMTPUserName"].Value.ToString();
            this.smtpPassword = Dts.Variables["SMTPPassword"].Value.ToString();
            this.mailFrom = Dts.Variables["MailFrom"].Value.ToString();
            this.errorMessage = Dts.Variables["ErrorMessage"].Value.ToString();

            string[] mailTo = Regex.Split(Dts.Variables["MailTo"].Value.ToString(), ",|;");

            try
            {
                SendMailSync(mailTo);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        /// <summary>
        /// メールを送信します。(同期バージョン)
        /// </summary>
        private void SendMailSync(string[] mailTo)
        {
            InternetAddressList addressList = new InternetAddressList();
            foreach (string address in mailTo)
            {
                addressList.Add(new MailboxAddress(address, address));
            }

            MimeMessage mailMsg = new MimeMessage();
            mailMsg.From.Add(new MailboxAddress(mailFrom, mailFrom));
            mailMsg.To.AddRange(addressList);
            mailMsg.Subject = MAIL_SUBJECT;
            mailMsg.Priority = MessagePriority.Urgent;

            TextPart bodyText = new TextPart(MimeKit.Text.TextFormat.Plain)
            {
                Text = errorMessage
            };
            mailMsg.Body = bodyText;

            using (var client = new MailKit.Net.Smtp.SmtpClient())
            {
                client.Connect(smtpEndPoint, smtpPort);
                client.Authenticate(smtpUserName, smtpPassword);
                client.Send(mailMsg);
                client.Disconnect(true);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_de7dfe889edf4f169044b57ae822a2e6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_de7dfe889edf4f169044b57ae822a2e6</msb:DisplayName>
    <msb:ProjectId>{D70EF345-7CB1-4974-AFA5-ED387961B2CE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_de7dfe889edf4f169044b57ae822a2e6.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_de7dfe889edf4f169044b57ae822a2e6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_de7dfe889edf4f169044b57ae822a2e6")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de7dfe889edf4f169044b57ae822a2e6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de7dfe889edf4f169044b57ae822a2e6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de7dfe889edf4f169044b57ae822a2e6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_de7dfe889edf4f169044b57ae822a2e6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_de7dfe889edf4f169044b57ae822a2e6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_de7dfe889edf4f169044b57ae822a2e6.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHA2FGUAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAfjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACw1AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
NQAAAAAAAEgAAAACAAUAYCMAABQRAAABAAAAAAAAAHQ0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwA2AQAAAQAAEQIoEAAAChZvEQAACgICKBAAAApvEgAA
CnIBAABwbxMAAApvFAAACm8VAAAKfQIAAAQCAigQAAAKbxIAAApyGwAAcG8TAAAKbxQAAAooFgAA
Cn0DAAAEAgIoEAAACm8SAAAKci0AAHBvEwAACm8UAAAKbxUAAAp9BAAABAICKBAAAApvEgAACnJH
AABwbxMAAApvFAAACm8VAAAKfQUAAAQCAigQAAAKbxIAAApyYQAAcG8TAAAKbxQAAApvFQAACn0G
AAAEAgIoEAAACm8SAAAKcnMAAHBvEwAACm8UAAAKbxUAAAp9BwAABAIoEAAACm8SAAAKco0AAHBv
EwAACm8UAAAKbxUAAApymwAAcCgXAAAKCgIGKAIAAAbeGG8VAAAKKBgAAAoCKBAAAAoXbxEAAAre
ACoAAAEQAAAAABQBCR0BGA8AAAEbMAUA/wAAAAIAABFzGQAACgoDDRYTBCsbCREEmhMFBhEFEQVz
GgAACm8bAAAKEQQXWBMEEQQJjmky3nMcAAAKCwdvHQAACgJ7BgAABAJ7BgAABHMaAAAKbxsAAAoH
bx4AAAoGbx8AAAoHcqMAAHBvIAAACgcYbyEAAAoWcyIAAAolAnsHAAAEbyMAAAoMBwhvJAAACnMl
AAAKEwYRBgJ7AgAABAJ7AwAABBcSB/4VFAAAAREHbyYAAAoRBgJ7BAAABAJ7BQAABBIH/hUUAAAB
EQdvJwAAChEGBxIH/hUUAAABEQcUbygAAAoRBhcSB/4VFAAAAREHbykAAAreDBEGLAcRBm8qAAAK
3CoAARAAAAIAkABi8gAMAAAAAPoCfisAAAp9AgAABAJ+KwAACn0EAAAEAn4rAAAKfQUAAAQCfisA
AAp9BgAABAJ+KwAACn0HAAAEAigsAAAKKh4CKC0AAAoqrn4IAAAELR5y3QAAcNADAAACKC4AAApv
LwAACnMwAAAKgAgAAAR+CAAABCoafgkAAAQqHgKACQAABCoafgoAAAQqHgIoMQAACioucwkAAAaA
CgAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAsBQAAI34AAJgFAADk
BwAAI1N0cmluZ3MAAAAAfA0AAFABAAAjVVMAzA4AABAAAAAjR1VJRAAAANwOAAA4AgAAI0Jsb2IA
AAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAMgAAAAUAAAANAAAACgAAAAIAAAAxAAAAAwAA
ABAAAAACAAAAAgAAAAMAAAAEAAAAAQAAAAYAAAABAAAAAQAAAAAAVQQBAAAAAAAGAPQCcgUGAIMD
cgUGAEACXwUPAOYFAAAGAG0C9wQGANcC9wQGALgC9wQGAGoD9wQGABQD9wQGAC0D9wQGAIQC9wQG
AJ8CwgMKAEgDBAQKAKoBBAQGAAkFhgQOAF8H7gYOANsA7gYOADcH7gYSAB8HLQUGALAEsQMGAJ8E
hgQGACMCXwUGAMgGhgQGAEIFkgUGACEF4gQWAPMBPwQWAFQCPwQWAMYBzQQGAAgCcgUKAC0EBAQa
ACgGSwEaAP0ASwEGAEAHhgQWAIkHOwYGADYBhgQOAIYG7gYOAHYG7gYGAAEAgQAOALIH7gYOAL0G
cwcOANMH7gYSAL8A9gYSAFoGwgcSAFEH9gYSAJUG9gYGAAYBhgQGAN4DhgQGAHUBhgQGABIBhgQG
AJwH9wQAAAAAOwAAAAAAAQABAAEAEADCBBcAOQABAAEAAAAQAJkF9QVdAAgABAAAARAAMgb1BXEA
CgAIAAMBAACvBgAAVQALAAsAUYBjALMAAQAqB7MAAQBIBzQBAQA+AbMAAQCyALMAAQCWBLMAAQDn
ALMAEQCkBDcBEQCaATsBEQDLAD8BBgZwADQBVoBuBkMBVoB6AUMBUCAAAAAAhgDIBAYAAQCkIQAA
AACBAJwARwEBAMAiAAAAAIYYUgUGAAIA/yIAAAAAgxhSBQYAAgAHIwAAAACTCD4FTQECADMjAAAA
AJMIggFSAQIAOiMAAAAAkwiOAVcBAgBCIwAAAACWCAQHXQEDAEkjAAAAAIYYUgUGAAMAUSMAAAAA
kRhYBWIBAwAAAAEAGgUAAAEAqwMJAFIFAQARAFIFBgAZAFIFCgApAFIFEAAxAFIFEAA5AFIFEABB
AFIFEABJAFIFEABRAFIFEABZAFIFEABhAFIFEABpAFIFBgCxAFIFBgDZAFIFFQDpAFIFBgBxAKcG
IADxABAHAQDxACQGJQD5AH0EKgABAaEDMQC5ANwDNQAJAQ8AOQARAf4GPgAZAWsBRQCBAFIFBgAh
AVIFWwCBAKkAYQCJAFIFBgCJAI0EaACJABMFaACBAPQAbQCJAM8GEACJAKUHeQCRAFIFgACRAIAH
EACJAI8HhwCZAFIFBgBRAdsGjgBRAeYBmQBhAa0AoQBRAeMGrABxAd4BBgB5Ad4HswBxAFIFBgC5
AFIFBgCBASQBtgCBAZgHvwDBAFIFxQDhAFIFBgAOAAQA8QAIADAAKgEIADQALwEpAHMAnQEuAAsA
dQEuABMAfgEuABsAnQEuACMApgEuACsAzwEuADMAzwEuADsAzwEuAEMApgEuAEsA1QEuAFMAzwEu
AFsA7AFDAGMALwFJAHMAnQFjAGsALwFBAXsALwEbAEoAAwABAAQAAwAAAEIFZgEAAKIBawEAAAgH
cAECAAUAAwACAAYABQABAAcABQACAAgABwAEgAAAAQAAAN4hQKIAAAAAAAAXAAAABAAAAAAAAAAA
AAAAzQB4AAAAAAAQAAAAAAAAAAAAAADWAOUDAAAAAAIADwAAAAAAAAAAAN8A7gYAAAAAAgAPAAAA
AAAAAAAA6AD2BgAAAAAEAAAAAAAAAAAAAADNAIYEAAAAABAAAAAAAAAAAAAAANYARAAAAAAAAAAA
AAEAAACjBQAABQACAAAAAElFbnVtZXJhYmxlYDEAVG9JbnQzMgBTVF9kZTdkZmU4ODllZGY0ZjE2
OTA0NGI1N2FlODIyYTJlNgA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
TUFJTF9TVUJKRUNUAHZhbHVlX18AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMA
U2VuZE1haWxTeW5jAEFkZABTZW5kAHNtdHBQYXNzd29yZABNYWlsU2VydmljZQBkZWZhdWx0SW5z
dGFuY2UATWltZU1lc3NhZ2UAZXJyb3JNZXNzYWdlAEFkZFJhbmdlAFZhcmlhYmxlAElEaXNwb3Nh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENvbnNvbGUAc210cFVzZXJO
YW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAV3JpdGVMaW5lAFR5cGUARmFpbHVy
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2Jq
ZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAQXV0aGVudGljYXRl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlRo
cmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9kZTdkZmU4ODllZGY0
ZjE2OTA0NGI1N2FlODIyYTJlNi5kbGwAZ2V0X0l0ZW0AU3lzdGVtAGdldF9Gcm9tAG1haWxGcm9t
AEVudW0AcmVzb3VyY2VNYW4AQ2FuY2VsbGF0aW9uVG9rZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRp
b24AZ2V0X1RvAG1haWxUbwBDdWx0dXJlSW5mbwBNYWlsS2l0Lk5ldC5TbXRwAGdldF9SZXNvdXJj
ZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZGU3ZGZlODg5ZWRmNGYxNjkwNDRi
NTdhZTgyMmEyZTYuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2RlN2RmZTg4OWVkZjRmMTY5MDQ0YjU3YWU4MjJhMmU2LlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU2VjdXJlU29ja2V0
T3B0aW9ucwBTdWNjZXNzAEludGVybmV0QWRkcmVzcwBNYWlsYm94QWRkcmVzcwBJVHJhbnNmZXJQ
cm9ncmVzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAVGV4dEZvcm1hdABPYmplY3QAc2V0X1N1Ympl
Y3QAQ29ubmVjdABEaXNjb25uZWN0AE1pbWVLaXQATWFpbEtpdABTcGxpdABnZXRfRGVmYXVsdABz
ZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AHNtdHBFbmRQb2ludABUZXh0UGFydABDb252ZXJ0AHNt
dHBQb3J0AE1haWxUcmFuc3BvcnQASW50ZXJuZXRBZGRyZXNzTGlzdABNaW1lS2l0LlRleHQAc2V0
X1RleHQAUmVnZXgAc2V0X0JvZHkAZ2V0X0Fzc2VtYmx5AHNldF9Qcmlvcml0eQBNZXNzYWdlUHJp
b3JpdHkATWFpbEtpdC5TZWN1cml0eQBNaW1lRW50aXR5AEVtcHR5AAAZUwBNAFQAUABFAG4AZABQ
AG8AaQBuAHQAABFTAE0AVABQAFAAbwByAHQAABlTAE0AVABQAFUAcwBlAHIATgBhAG0AZQAAGVMA
TQBUAFAAUABhAHMAcwB3AG8AcgBkAAARTQBhAGkAbABGAHIAbwBtAAAZRQByAHIAbwByAE0AZQBz
AHMAYQBnAGUAAA1NAGEAaQBsAFQAbwAABywAfAA7AAA5WwBQAHUAcgBjAGgAYQBzAGUAXQAgANVO
ZVFIUf2IwVTHMPwwvzCoMK8wuTDdMPwwyDCoMOkw/DABcVMAVABfAGQAZQA3AGQAZgBlADgAOAA5
AGUAZABmADQAZgAxADYAOQAwADQANABiADUANwBhAGUAOAAyADIAYQAyAGUANgAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAN08kBW7GANFiyNLJNTenLUABCABAQgD
IAABBSABARERBCABAQ4FIAEBEWkEBwEdDgQgABJ5BCAAEn0GIAESgIEcAyAAHAMgAA4EAAEIHAYA
Ah0ODg4EAAEBDhAHCBJBEkUSSR0OCA4STRFRBSACAQ4OBiABARKAlQQgABJBCyABARUSgJkBEoCV
BiABARGAnQYgAQERgKEGIAEBEoClCiAEAQ4IEYCtEVEHIAMBDg4RUQogAwESRRFREoC1BiACAQIR
UQIGDggAARKAwRGAxQUgABKAyQcgAgEOEoDJCLd6XFYZNOCJCImEXc2AgMyRCL7eHIpGxmgUCE4G
T+fESo8bOFsAUAB1AHIAYwBoAGEAcwBlAF0AIADVTmVRSFH9iMFUxzD8ML8wqDCvMLkw3TD8MMgw
qDDpMPwwBAAAAAAEAQAAAAIGCAMGEmEDBhJlAwYSEAMGERQFIAEBHQ4EAAASYQQAABJlBQABARJl
BAAAEhADAAABBAgAEmEECAASZQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTVF9kZTdkZmU4ODllZGY0ZjE2OTA0NGI1N2FlODIyYTJlNgAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAFQ1AAAAAAAAAAAAAG41AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgNQAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBAot4hAAABAECi3iE/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGQAZQA3AGQAZgBlADgAOAA5AGUAZABmADQAZgAxADYAOQAwADQANABiADUANwBhAGUA
OAAyADIAYQAyAGUANgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADYANwAwAC4ANAAxADUAMwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGQAZQA3AGQAZgBlADgAOAA5AGUAZABmADQAZgAxADYAOQAwADQANABiADUANwBhAGUAOAAy
ADIAYQAyAGUANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZABlADcAZABmAGUAOAA4ADkAZQBkAGYANABmADEANgA5ADAANAA0AGIANQA3
AGEAZQA4ADIAMgBhADIAZQA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGQAZQA3AGQAZgBlADgAOAA5AGUAZABmADQAZgAxADYAOQAwADQANABiADUANwBh
AGUAOAAyADIAYQAyAGUANgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA2ADcAMAAuADQAMQA1ADMANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA2ADcAMAAuADQAMQA1ADMANgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACANQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\シーケンス コンテナー"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="シーケンス コンテナー"
      DTS:DTSID="{CE2706E9-5AF1-4F9F-BB3D-A0BF6D0FEB5E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="シーケンス コンテナー">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\シーケンス コンテナー\仕入先製品データ抽出処理"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="スクリプト タスク"
          DTS:DTSID="{A9023240-0EDA-4208-A4E6-804BFCB5C04B}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="仕入先製品データ抽出処理"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_cd404953e6a54ed9aba666383f8ac93b"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CommandTimeOut,User::ConnectionString,User::MaxRows,User::OutputFile"
              ReadWriteVariables="User::ErrorFlag,User::ErrorMessage,User::StartTime">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_cd404953e6a54ed9aba666383f8ac93b.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b61b3cbf-94d9-47ad-b94e-bce898222cbe}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_cd404953e6a54ed9aba666383f8ac93b</RootNamespace>
    <AssemblyName>ST_cd404953e6a54ed9aba666383f8ac93b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Settings.get_Default():ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Sett" +
    "ings")]

namespace ST_cd404953e6a54ed9aba666383f8ac93b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
using System.IO;
using System.Collections.Generic;
using System.Reflection;
using System.Data.SqlClient;
#endregion

namespace ST_cd404953e6a54ed9aba666383f8ac93b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        // 【Supplier Products 抽出処理】
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        // エラーメッセージ
        StringBuilder errorMessage;

        // SQL Server 接続 
        string sqlConnectionString;

        // TCIOpenXML に渡す SQL
        StringBuilder sql;

        // TCIOpenXML に渡す SQL のリスト
        List<String> sqlList;

        // TCIOpenXML で出力するExcelファイルのシートリスト
        List<String> sheetList;

        // Excel1シートあたりの最大行数
        int maxRows;

        // Excel1シートあたりの最小行数
        int minRows;

        // 抽出データ総件数
        int totalRows;

        // 件数チェック用の変数
        int? supplierCode1 = 0;
        int idNum1 = 0;
        int rowNum1 = 0;
        int? supplierCode2 = 0;
        int idNum2 = 0;
        int rowNum2 = 0;

        // タイムアウト設定
        int commandTimeOut;

        /// <summary>
        /// メイン処理
        /// </summary>
        /// <remarks>
        /// 1. 変数の初期化
        /// 2. 前回作成ファイルの削除
        /// 3. ファイル出力
        public void Main()
        {

            try
            {
                //エラーメッセージ
                this.errorMessage = new StringBuilder();

                // 変数の初期化
                Dts.TaskResult = (int)ScriptResults.Success;
                Dts.Variables["ErrorMessage"].Value = String.Empty;
                Dts.Variables["ErrorFlag"].Value = false;
                Dts.Variables["StartTime"].Value = DateTime.Now.ToString();

                // SQL Server 接続
                this.sqlConnectionString = Dts.Variables["ConnectionString"].Value.ToString();

                // 出力ファイル
                string outputFile = Dts.Variables["OutputFile"].Value.ToString();

                // Excel1シートあたりの最大行数
                this.maxRows = Convert.ToInt32(Dts.Variables["MaxRows"].Value.ToString());

                // タイムアウト値
                this.commandTimeOut = Convert.ToInt32(Dts.Variables["CommandTimeOut"].Value.ToString());

                // TCIOpenXML に渡す SQL
                this.sql = new StringBuilder();

                // TCIOpenXML に渡す SQL のリスト
                this.sqlList = new List<String>();

                // TCIOpenXML で出力するExcelファイルのシートリスト
                this.sheetList = new List<String>();

                // 抽出データ総件数
                this.totalRows = 0;

                // Excel1シートあたりの最少行数
                this.minRows = 1;

                // 前回作成ファイルの削除
                try
                {
                    File.Delete(outputFile);
                }
                catch
                {
                    this.errorMessage.AppendLine("前回作成ファイルの削除に失敗しました。" + "\r\n" + "ファイル : <<" + outputFile + ">>");
                    throw;
                }

                // ファイル出力
                this.OutputExcel(outputFile);

            }
            catch(Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                Dts.Variables["ErrorFlag"].Value = true;
                string formatMessage = "【Supplier Products 抽出処理でエラーが発生しました。】" + "\r\n" + "\r\n" + "{0}" + "\r\n" + "({1})" + "\r\n" + "{2}";
                Dts.Variables["ErrorMessage"].Value = String.Format(formatMessage, this.errorMessage.ToString(), ex.Message, ex.StackTrace);
            }
        }

        /// <summary>
        /// エクセルファイル出力
        /// </summary>
        /// <param name="outputFile"></param>
        private void OutputExcel(string outputFile)
        {

            try
            {
                // TCIOpenXML に渡す SQL の作成 と 抽出データの総件数取得 (this.totalRows)
                this.sql = this.GetTotalRows_CreateSQL();

                // 抽出データの総件数が1シートに出力する最大行数を超過する場合、Supplier Code 単位にシート分割出力
                if(this.maxRows < this.totalRows)
                {
                    // Supplier Code 初期値
                    int? supplierCode = 1;

                    // 出力シート数 初期値
                    int sheetCount = 1;
                    // 出力行数
                    int outputRows = 0;

                    // 出力行数が総件数未満の場合、未出力行あり
                    while(outputRows < this.totalRows)
                    {
                        outputRows = this.CreateSqlSheetList(ref supplierCode, ref sheetCount, ref outputRows);
                    }

                    // 引数降順で出力されるため降順ソート
                    this.sheetList.Reverse();
                    this.sqlList.Reverse();

                }
                else
                {
                    // 1シートに全行収まる場合、1シートに全行出力
                    this.sqlList.Add(this.sql.ToString());
                    this.sheetList.Add("Sheet1");
                }

                // 引数1: DB接続文字列(String)
                // 引数2: SQL文のジェネリック コレクション(List(Of String)
                // 引数3: 出力パス(String)
                // 引数4: シート名のジェネリック コレクション(List(Of String)
                // 引数5: 書式設定するか(True)、すべて文字列扱いとするか(False) (Boolean)
                // 引数6: コマンドタイムアウト時間

                AppDomain appDomain = AppDomain.CreateDomain("MyDomain");
                Object obj = appDomain.CreateInstanceAndUnwrap("TCIOpenXML", "TCIOpenXML.TCIOpenXML");
                MethodInfo methodInfo = obj.GetType().GetMethod("CreateOpenXML",
                                                                 new Type[] {typeof(String),
                                                                             typeof(List<String>),
                                                                             typeof(String),
                                                                             typeof(List<String>),
                                                                             typeof(bool),
                                                                             typeof(int)});

                methodInfo.Invoke(obj, new Object[] {this.sqlConnectionString,
                                                     sqlList,
                                                     outputFile,
                                                     sheetList,
                                                     true,
                                                     this.commandTimeOut});

            }
            catch
            {
                this.errorMessage.AppendLine("エクセル出力に失敗しました。" + "\r\n" + "出力ファイル : <<" + outputFile + ">>");
                throw;
            }
        }

        /// <summary>
        /// 総件数が1シートに出力する最大行数を超過する場合のSQL・シート作成
        /// </summary>
        /// 出力が必要なシート数を算出し、シート数分抽出SQLを作成する。
        ///  1. 1シートに出力するデータは、SupplierCode 単位のため、CheckRows メソッドでチェックする。
        ///  2. 1シートに出力するデータが 1件の SupplierCode のみ (最大行数超過) の場合、oneCodeOn1SheetFlag = true
        ///  3. oneCodeOn1SheetFlag = true の場合、1件の SupplierCode のデータ件数分必要なシートを作成する。
        ///  4. oneCodeOn1SheetFlag = false の場合、対象データについてシート作成する。
        /// <returns>outputRows</returns>
        private int CreateSqlSheetList(ref int? supplierCode, ref int sheetCount, ref int outputRows)
        {

            // 必要なシート数を算出
            int sheetsRequired = 1;
            if(this.maxRows < this.totalRows - outputRows)
            {
                sheetsRequired = Convert.ToInt32(Math.Ceiling(Convert.ToDecimal(1.0 * (this.totalRows - outputRows) / this.maxRows)));
            }

            for(int i = 1; i <= sheetsRequired; i++)
            {

                // 1シートに出力する対象データをチェック
                bool oneCodeOn1SheetFlag = this.CheckRows(supplierCode, this.minRows, this.maxRows);

                // 出力行なし
                if(this.rowNum1 == 0)
                {
                    break;
                }

                // 1つの SupplierCode の件数が 1シート の最大行数を超過
                if(oneCodeOn1SheetFlag)
                {
                    // 以下 (1)かつ(2)の場合を考慮し、SupplierCode を書き換え
                    // (1) 連続して 異なる SupplierCode が シートを跨がって出力される (A, A, A, B, B)
                    // (2) 直前の SupplierCode の出力行の余りがない
                    supplierCode = this.supplierCode1;

                    // 該当の SupplierCode の総件数を取得
                    int totalCount = this.CountRows(this.supplierCode1, true);
                    // 該当の SupplierCode のみを出力するシート数算出
                    int sheetCountRequired = totalCount / this.maxRows;
                    // 該当の SupplierCode のみ出力する場合の総件数
                    int totalCountToSheet = sheetCountRequired * this.maxRows;
                    // 残件数
                    int remainingCount = totalCount - totalCountToSheet;

                    // 該当の SupplierCode のみを出力する
                    for(int j = 1; j <= sheetCountRequired; j++)
                    {
                        this.sql = this.CreateSQL_SplitSheet(j, supplierCode, this.supplierCode2, true);
                        sqlList.Add(this.sql.ToString());
                        sheetList.Add("Sheet" + sheetCount);
                        sheetCount++;
                    }

                    // 残件数がある場合、次のシートを出力
                    if(remainingCount > 0)
                    {
                        this.CheckRows(supplierCode, totalCountToSheet, this.maxRows);

                        // 1Sheet に出力する SQL の作成
                        this.sql = this.CreateSQL_SplitSheet(sheetCountRequired + 1, supplierCode, this.supplierCode2, true);
                        sqlList.Add(this.sql.ToString());
                        sheetList.Add("Sheet" + sheetCount);
                        sheetCount++;
                        sheetsRequired -= sheetCountRequired + 1;
                        outputRows += this.rowNum1 - this.idNum1;
                        supplierCode = this.supplierCode2;

                    }
                    else
                    {
                        sheetsRequired -= sheetCountRequired;
                        outputRows += totalCountToSheet;
                        supplierCode += 1;
                    }

                }
                else
                {
                    // 1Sheet に出力する SQL の作成
                    this.sql = this.CreateSQL_SplitSheet(sheetCount, supplierCode, this.supplierCode2, false);
                    sqlList.Add(this.sql.ToString());
                    sheetList.Add("Sheet" + sheetCount);
                    sheetCount++;
                    if(this.supplierCode2 == null)
                    {
                        // 最終シート
                        outputRows += this.rowNum1;
                    }
                    else
                    {
                        outputRows += this.rowNum1 - this.idNum1;
                    }
                    supplierCode = this.supplierCode2;
                }

            }

            return outputRows;

        }

        /// <summary>
        /// 1シートに出力する SupplierCode のチェック
        /// </summary>
        /// <returns>sql</returns>
        private bool CheckRows(int? supplierCode, int minRows, int maxRows)
        {

            bool oneCodeOn1SheetFlag = false;
            this.supplierCode1 = null;
            this.idNum1 = 0;
            this.rowNum1 = 0;
            this.supplierCode2 = null;
            this.idNum2 = 0;
            this.rowNum2 = 0;

            // 1シートの最大行と次行のデータを取得
            DataTable rowData = this.GetRows(supplierCode, minRows, maxRows);

            // minRows が 1 でない = 前シートの最終行を指定
            if(minRows != this.minRows)
            {
                // 出力対象シートの最終行数 = 指定行 (前シートの最終行数) + 1シートの最大行
                maxRows += minRows;
            }

            foreach(DataRow row in rowData.Rows)
            {
                if(Convert.ToInt32(row["ROWNUM"]) == maxRows)
                {
                    // 対象シートの最終行
                    this.supplierCode1 = Convert.ToInt32(row["SupplierCode"]);
                    this.idNum1 = Convert.ToInt32(row["IDNUM"]);
                    this.rowNum1 = Convert.ToInt32(row["ROWNUM"]);
                }
                else
                {
                    // 次シートの先頭行
                    this.supplierCode2 = Convert.ToInt32(row["SupplierCode"]);
                    this.idNum2 = Convert.ToInt32(row["IDNUM"]);
                    this.rowNum2 = Convert.ToInt32(row["ROWNUM"]);
                }
            }

            if(this.supplierCode2 != null)
            {
                
                // 出力対象シートの最終行と次シートの先頭行の SupplierCode が同一、かつ SupplierCode の件数と行数が同一の場合
                if(this.supplierCode1 == this.supplierCode2 && this.idNum1 == this.rowNum1 && this.idNum2 == this.rowNum2)
                {
                    // 出力対象シートに1つの SupplierCode のデータを行数分出力
                    // 1シートに出力する最大行数 < 1つの SupplierCode のデータ件数
                    oneCodeOn1SheetFlag = true;
                }

                // 次シートの先頭行の SupplierCode の件数が1の場合 (idNum2 = 1)
                // ⇒ 出力対象シートの最終行と次シートの先頭行の SupplierCode が切り替わる
                // ⇒ 出力対象シートに最大行数出力される
                // 出力対象シートの最終行の SupplerCode の件数を0に置換（outputRows = this.rowNum1 - this.idNum1 = maxRows）
                if(this.idNum2 == 1)
                {
                    this.idNum1 = 0;
                }

            }
            else if(this.supplierCode1 == null && this.supplierCode2 == null)
            {
                // 最終シートの行数が1シートの最大行数に満たない場合
                this.rowNum1 = this.CountRows(supplierCode, false);
            }

            return oneCodeOn1SheetFlag;

        }

        /// <summary>
        /// データ件数カウント
        /// </summary>
        /// <returns>count</returns>
        private int CountRows(int? supplierCode, bool equalSign)
        {
            StringBuilder sql = new StringBuilder();
            int count = 0;

            try
            {
                // SQL 作成
                sql.AppendLine("SELECT");
                sql.AppendLine("	COUNT(*)");
                sql.AppendLine("FROM");
                sql.AppendLine("	[Supplier_Product] AS SP");
                sql.AppendLine("WHERE");
                if(equalSign)
                {
                    sql.AppendLine("	SP.[SupplierCode] = @supplierCode");
                }
                else
                {
                    sql.AppendLine("	SP.[SupplierCode] >= @supplierCode");
                }

                using(SqlConnection sqlConnection = new SqlConnection(this.sqlConnectionString))
                {
                    using(SqlCommand sqlCommand = sqlConnection.CreateCommand())
                    {
                        sqlCommand.CommandText = sql.ToString();

                        sqlCommand.Parameters.Clear();
                        sqlCommand.Parameters.AddWithValue("supplierCode", supplierCode);

                        sqlConnection.Open();
                        // 件数取得
                        count = Convert.ToInt32(sqlCommand.ExecuteScalar());

                    }
                }
            }
            catch
            {
                this.errorMessage.AppendLine("Supplier_Product の件数取得に失敗しました。supplierCode = " + supplierCode);
                throw;
            }

            return count;
        }

        /// <summary>
        /// 1シートに出力する SQL の作成
        /// </summary>
        /// <returns>sql</returns>
        private StringBuilder CreateSQL_SplitSheet(int sheetCount, int? supplierCodeOver, int? supplierCodeUnder, bool consecutiveFlag)
        {

            int rowNumberOver = this.minRows;
            int rowNumberUnder = this.maxRows;

            // SupplierCode 1件のみ出力の場合、出力行数をシート数に応じて加算
            if(consecutiveFlag)
            {
                rowNumberOver = this.minRows + (this.maxRows * (sheetCount - 1));
                rowNumberUnder = this.maxRows + (this.maxRows * (sheetCount - 1));
            }

            StringBuilder sql = new StringBuilder();
            // SQL 作成
            sql.AppendLine("WITH RowData AS (");
            sql.AppendLine("SELECT");
            sql.AppendLine("	SP.[SupplierCode] AS [Supplier Code (PDB)],");
            sql.AppendLine("	CONCAT(ISNULL(S.[Name3], ''), ' ', ISNULL(S.[Name4], '')) AS [Supplier Name],");
            sql.AppendLine("	ISNULL(P.[ProductNumber], '') AS [Product Number],");
            sql.AppendLine("	ISNULL(CASE WHEN P.[QuoName] IS NULL THEN P.[Name] ELSE P.[QuoName] END, '') AS [Product Name],");
            sql.AppendLine("	LEFT(CONVERT(NVARCHAR, SP.[UpdateDate], 120), 10) AS [Update Date],");
            sql.AppendLine("    SP.[ValidQuotation] AS [Valid Quotation],");
            sql.AppendLine("    SP.[Note],");
            sql.AppendLine("	ROW_NUMBER() OVER(ORDER BY SP.[SupplierCode], ISNULL(P.[ProductNumber], ''), SP.[UpdateDate]) AS [ROWNUM]");
            sql.AppendLine("FROM");
            sql.AppendLine("	[Supplier_Product] AS SP");
            sql.AppendLine("LEFT OUTER JOIN");
            sql.AppendLine("	[Supplier] AS S");
            sql.AppendLine("ON");
            sql.AppendLine("	S.[SupplierCode] = SP.[SupplierCode]");
            sql.AppendLine("LEFT OUTER JOIN");
            sql.AppendLine("	[Product] AS P");
            sql.AppendLine("ON");
            sql.AppendLine("	SP.[ProductID] = P.[ProductID]");
            sql.AppendLine("WHERE");
            sql.AppendLine("	SP.[SupplierCode] >= " + supplierCodeOver);
            if(supplierCodeUnder != null && supplierCodeOver != supplierCodeUnder)
            {
                sql.AppendLine("	AND SP.[SupplierCode] < " + supplierCodeUnder);
            }
            sql.AppendLine(")");
            sql.AppendLine("SELECT");
            sql.AppendLine("	[Supplier Code (PDB)],");
            sql.AppendLine("	[Supplier Name],");
            sql.AppendLine("	[Product Number],");
            sql.AppendLine("	[Product Name],");
            sql.AppendLine("	[Update Date],");
            sql.AppendLine("    [Valid Quotation],");
            sql.AppendLine("    [Note]");
            sql.AppendLine("FROM");
            sql.AppendLine("	RowData");
            sql.AppendLine("WHERE");
            sql.AppendLine("	ROWNUM >= " + rowNumberOver);
            sql.AppendLine("	AND ROWNUM <= " + rowNumberUnder);
            sql.AppendLine("ORDER BY");
            sql.AppendLine("	[Supplier Code (PDB)],");
            sql.AppendLine("	[Product Number],");
            sql.AppendLine("	[Update Date]");

            return sql;

        }

        /// <summary>
        /// データ件数取得
        /// </summary>
        /// <returns>rowData</returns>
        private DataTable GetRows(int? supplierCode, int minRows, int maxRows)
        {

            StringBuilder sql = new StringBuilder();
            DataTable rowData = new DataTable();

            try
            {
                // SQL 作成
                sql.AppendLine("WITH RowData AS (");
                sql.AppendLine("	SELECT");
                sql.AppendLine("		[SupplierCode],");
                sql.AppendLine("		ROW_NUMBER() OVER(PARTITION BY [SupplierCode] ORDER BY [SupplierCode]) AS [IDNUM],");
                sql.AppendLine("		ROW_NUMBER() OVER(ORDER BY [SupplierCode]) AS [ROWNUM]");
                sql.AppendLine("	FROM");
                sql.AppendLine("		[Supplier_Product]");
                sql.AppendLine("	WHERE");
                sql.AppendLine("		[SupplierCode] >= @supplierCode");
                sql.AppendLine(")");
                sql.AppendLine("SELECT");
                sql.AppendLine("	[SupplierCode],");
                sql.AppendLine("	[IDNUM],");
                sql.AppendLine("	[ROWNUM]");
                sql.AppendLine("FROM");
                sql.AppendLine("	RowData");
                sql.AppendLine("WHERE");
                sql.AppendLine("	[ROWNUM] = @rowNumber0");
                sql.AppendLine("	OR [ROWNUM] = @rowNumber1");

                using(SqlConnection sqlConnection = new SqlConnection(this.sqlConnectionString))
                {
                    using(SqlCommand sqlCommand = sqlConnection.CreateCommand())
                    {
                        sqlCommand.CommandText = sql.ToString();

                        sqlCommand.Parameters.Clear();
                        sqlCommand.Parameters.AddWithValue("supplierCode", supplierCode);

                        if(minRows == this.minRows)
                        {
                            // 出力対象シートの最終行 と 次シートの先頭行の取得 ⇒ 同一 SupplierCode は同一シート内に出力
                            sqlCommand.Parameters.AddWithValue("rowNumber0", maxRows);
                            sqlCommand.Parameters.AddWithValue("rowNumber1", maxRows + 1);
                        }
                        else
                        {
                            // minRows が 1 でない = 前シートの最終行を指定
                            // ⇒ 1つの SupplierCode のデータ件数が多く、1シートに全行出力不可、シートを跨った場合
                            // ⇒ 指定行 (前シートの最終行数) から出力対象シートの最終行 と 次シートの先頭行を取得
                            sqlCommand.Parameters.AddWithValue("rowNumber0", minRows + maxRows);
                            sqlCommand.Parameters.AddWithValue("rowNumber1", minRows + maxRows + 1);
                        }

                        sqlConnection.Open();
                        using(SqlDataAdapter sqlDataAdapter = new SqlDataAdapter(sqlCommand))
                        {
                            sqlDataAdapter.Fill(rowData);
                        }
                    }
                }
            }
            catch
            {
                this.errorMessage.AppendLine("Supplier_Product の取得に失敗しました。supplierCode = " + supplierCode);
                throw;
            }

            return rowData;

        }

        /// <summary>
        /// 総件数取得、データ抽出SQL作成
        /// </summary>
        /// <returns>sql</returns>
        private StringBuilder GetTotalRows_CreateSQL()
        {

            StringBuilder sql = new StringBuilder();

            try
            {
                // SQL 作成
                sql.AppendLine("SELECT");
                sql.AppendLine("	COUNT(*)");
                sql.AppendLine("FROM");
                sql.AppendLine("	[Supplier_Product] AS SP");

                using(SqlConnection sqlConnection = new SqlConnection(this.sqlConnectionString))
                {
                    using(SqlCommand sqlCommand = sqlConnection.CreateCommand())
                    {
                        sqlCommand.CommandText = sql.ToString();
                        sqlConnection.Open();
                        // 総件数取得
                        this.totalRows = Convert.ToInt32(sqlCommand.ExecuteScalar());

                    }
                }
            }
            catch
            {
                this.errorMessage.AppendLine("Supplier_Product の総件数取得に失敗しました。");
                throw;
            }

            sql = new StringBuilder();
            sql.AppendLine("SELECT");
            sql.AppendLine("	SP.[SupplierCode] AS [Supplier Code (PDB)],");
            sql.AppendLine("	CONCAT(ISNULL(S.[Name3], ''), ' ', ISNULL(S.[Name4], '')) AS [Supplier Name],");
            sql.AppendLine("	ISNULL(P.[ProductNumber], '') AS [Product Number],");
            sql.AppendLine("	ISNULL(CASE WHEN P.[QuoName] IS NULL THEN P.[Name] ELSE P.[QuoName] END, '') AS [Product Name],");
            sql.AppendLine("	LEFT(CONVERT(NVARCHAR, SP.[UpdateDate], 120), 10) AS [Update Date],");
            sql.AppendLine("    SP.[ValidQuotation] AS [Valid Quotation],");
            sql.AppendLine("    SP.[Note]");
            sql.AppendLine("FROM");
            sql.AppendLine("	[Supplier_Product] AS SP");
            sql.AppendLine("LEFT OUTER JOIN");
            sql.AppendLine("	[Supplier] AS S");
            sql.AppendLine("ON");
            sql.AppendLine("	S.[SupplierCode] = SP.[SupplierCode]");
            sql.AppendLine("LEFT OUTER JOIN");
            sql.AppendLine("	[Product] AS P");
            sql.AppendLine("ON");
            sql.AppendLine("	SP.[ProductID] = P.[ProductID]");
            sql.AppendLine("ORDER BY");
            sql.AppendLine("	SP.[SupplierCode],");
            sql.AppendLine("	P.[ProductNumber],");
            sql.AppendLine("	SP.[UpdateDate]");

            return sql;

        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_cd404953e6a54ed9aba666383f8ac93b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_cd404953e6a54ed9aba666383f8ac93b</msb:DisplayName>
    <msb:ProjectId>{F3DFACAF-7DAB-4B46-93AC-9B44F82EF1B6}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_cd404953e6a54ed9aba666383f8ac93b.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_cd404953e6a54ed9aba666383f8ac93b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Toshiba")]
[assembly: AssemblyProduct("ST_cd404953e6a54ed9aba666383f8ac93b")]
[assembly: AssemblyCopyright("Copyright @ Toshiba 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_cd404953e6a54ed9aba666383f8ac93b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_cd404953e6a54ed9aba666383f8ac93b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_cd404953e6a54ed9aba666383f8ac93b.dll">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
BCwOBnK/AgBwbx8AAAomKwwGcgUDAHBvHwAACiYCewIAAARzOgAACgwIbzsAAAoNCQZvGgAACm88
AAAKCW89AAAKbz4AAAoJbz0AAApyTQMAcAOMAgAAG28/AAAKJghvQAAACglvQQAACig3AAAKC94K
CSwGCW85AAAK3N4KCCwGCG85AAAK3N4pJgJ7AQAABHJnAwBwAxMEEgT+FgIAABtvGgAACigwAAAK
bx8AAAom/hoHKgAAAAEoAAACAHQAQrYACgAAAAACAG0AVcIACgAAAAAAAAgAxs4AKRQAAAETMAQA
nAIAAAYAABECewcAAAQKAnsGAAAECw4ELCQCewcAAAQCewYAAAQDF1laWAoCewYAAAQCewYAAAQD
F1laWAtzEAAACgwIcsMDAHBvHwAACiYIclMCAHBvHwAACiYIcucDAHBvHwAACiYIckEEAHBvHwAA
CiYIcuAEAHBvHwAACiYIckgFAHBvHwAACiYIcgsGAHBvHwAACiYIcpYGAHBvHwAACiYIcvIGAHBv
HwAACiYIchAHAHBvHwAACiYIcnUCAHBvHwAACiYIcn8CAHBvHwAACiYIcucHAHBvHwAACiYIcgcI
AHBvHwAACiYIcikIAHBvHwAACiYIci8IAHBvHwAACiYIcucHAHBvHwAACiYIcnsIAHBvHwAACiYI
cikIAHBvHwAACiYIcpsIAHBvHwAACiYIcrMCAHBvHwAACiYIctsIAHAEDRID/hYCAAAbbxoAAAoo
MAAACm8fAAAKJg8DKDEAAAosSQQNBRMEEgMoMgAAChIEKDIAAAr+ARIDKDEAAAoSBCgxAAAK/gFf
LSEIcgkJAHAFEwQSBP4WAgAAG28aAAAKKDAAAApvHwAACiYIcj0JAHBvHwAACiYIclMCAHBvHwAA
CiYIckEJAHBvHwAACiYIcnEJAHBvHwAACiYIcpUJAHBvHwAACiYIcrsJAHBvHwAACiYIct0JAHBv
HwAACiYIcv0JAHBvHwAACiYIcisKAHBvHwAACiYIcnUCAHBvHwAACiYIckEKAHBvHwAACiYIcrMC
AHBvHwAACiYIclMKAHASACgvAAAKKDAAAApvHwAACiYIcmsKAHASASgvAAAKKDAAAApvHwAACiYI
cosKAHBvHwAACiYIckEJAHBvHwAACiYIcpUJAHBvHwAACiYIcp0KAHBvHwAACiYIKhswBAAKAgAA
BwAAEXMQAAAKCnNCAAAKCwZywwMAcG8fAAAKJgZyuwoAcG8fAAAKJgZyywoAcG8fAAAKJgZy7woA
cG8fAAAKJgZymgsAcG8fAAAKJgZyDAwAcG8fAAAKJgZyGAwAcG8fAAAKJgZyQgwAcG8fAAAKJgZy
UAwAcG8fAAAKJgZyPQkAcG8fAAAKJgZyUwIAcG8fAAAKJgZylAwAcG8fAAAKJgZytgwAcG8fAAAK
JgZyygwAcG8fAAAKJgZydQIAcG8fAAAKJgZyQQoAcG8fAAAKJgZyswIAcG8fAAAKJgZy3gwAcG8f
AAAKJgZyDg0AcG8fAAAKJgJ7AgAABHM6AAAKDAhvOwAACg0JBm8aAAAKbzwAAAoJbz0AAApvPgAA
CglvPQAACnJNAwBwA4wCAAAbbz8AAAomBAJ7BwAABDMyCW89AAAKckQNAHAFjC4AAAFvPwAACiYJ
bz0AAApyWg0AcAUXWIwuAAABbz8AAAomKzQJbz0AAApyRA0AcAQFWIwuAAABbz8AAAomCW89AAAK
cloNAHAEBVgXWIwuAAABbz8AAAomCG9AAAAKCXNDAAAKEwQRBAdvRAAACibeDBEELAcRBG85AAAK
3N4KCSwGCW85AAAK3N4KCCwGCG85AAAK3N4pJgJ7AQAABHJwDQBwAxMFEgX+FgIAABtvGgAACigw
AAAKbx8AAAom/hoHKgAAQWQAAAIAAACuAQAACwAAALkBAAAMAAAAAAAAAAIAAAADAQAAxAAAAMcB
AAAKAAAAAAAAAAIAAAD8AAAA1wAAANMBAAAKAAAAAAAAAAAAAAAMAAAA0wEAAN8BAAApAAAAFAAA
ARswAgCqAQAACAAAEXMQAAAKCgZyUwIAcG8fAAAKJgZyYQIAcG8fAAAKJgZydQIAcG8fAAAKJgZy
fwIAcG8fAAAKJgJ7AgAABHM6AAAKCwdvOwAACgwIBm8aAAAKbzwAAAoHb0AAAAoCCG9BAAAKKDcA
AAp9CAAABN4KCCwGCG85AAAK3N4KBywGB285AAAK3N4UJgJ7AQAABHLIDQBwbx8AAAom/hpzEAAA
CgoGclMCAHBvHwAACiYGcucDAHBvHwAACiYGckEEAHBvHwAACiYGcuAEAHBvHwAACiYGckgFAHBv
HwAACiYGcgsGAHBvHwAACiYGcpYGAHBvHwAACiYGcggOAHBvHwAACiYGcnUCAHBvHwAACiYGcn8C
AHBvHwAACiYGcucHAHBvHwAACiYGcgcIAHBvHwAACiYGcikIAHBvHwAACiYGci8IAHBvHwAACiYG
cucHAHBvHwAACiYGcnsIAHBvHwAACiYGcikIAHBvHwAACiYGcpsIAHBvHwAACiYGcosKAHBvHwAA
CiYGciQOAHBvHwAACiYGckwOAHBvHwAACiYGcnQOAHBvHwAACiYGKgAAASgAAAIASQAlbgAKAAAA
AAIAQgA4egAKAAAAAAAABgCAhgAUFAAAAX4CFnMjAAAKfQkAAAQCFnMjAAAKfQwAAAQCKEUAAAoq
HgIoRgAACiqufhAAAAQtHnKWDgBw0AMAAAIoKQAACm9HAAAKc0gAAAqAEAAABH4QAAAEKhp+EQAA
BCoeAoARAAAEKhp+EgAABCoeAihJAAAKKi5zDwAABoASAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAzAYAACN+AAA4BwAA5AkAACNTdHJpbmdzAAAAABwRAAAIDwAAI1VT
ACQgAAAQAAAAI0dVSUQAAAA0IAAACAMAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQMAAAD6ATMAFgAA
AQAAADsAAAAFAAAAFQAAABAAAAARAAAASQAAAAIAAAAQAAAACAAAAAIAAAADAAAABAAAAAIAAAAB
AAAABQAAAAEAAAABAAAAAABeBQEAAAAAAAYAowOIBwYAMgSIBwYA7wJ1Bw8A/AcAAAYAHAMTBgYA
hgMTBgYAZwMTBgYAGQQTBgYAwwMTBgYA3AMTBgYAMwMTBgYATgOcBAoA9wP3BAoAPAL3BAYA3wak
CQYADADfAAYAAQCYBQYAxQGYBQYAfwaYBQYA6QiYBQYATgdRCA4AyAmmAAYAigGYBQ4AcQYyCQ4A
FgEyCQ4AdwGmAA4ALgcyCQYAnwWYBQYA0gJ1BwYAAweoBwYApwb+BRIAmwJIBRIAAwNIBRIAcwLp
BQYAtwKIBwoANgX3BBYAPgjOARYAgQHOAQYAzASYBQYAsAWYBQYAXwmYBQYAwAF1AAYA3wWYBQYA
/AGYBQYAlgGYBQYAMgCYBQYAnAYTBgYAMQITBgYAIgWYBQYA0wSYBQ4AUgamAA4AWAKmAA4A/gCJ
Bg4AOwYyCQ4AJQaJBg4AEwcyCQ4AZAaJBg4AIAeJBgYA1AkTBgAAAABVAAAAAAABAAEAAQAQAMcF
sgA5AAEAAQAAABAArwcLCFEAEAAKAAABEABICAsIiQASAA4AAwEAAIMIAABxABMAEQABAGMBngEB
ALYEOAABAIsFngEBAGcJogEBAIIJogEBANMIqQEBAK4IqQEBAKQIqQEBABMArAEBACEAqQEBACgA
qQEBADgArAEBAEYAqQEBAE0AqQEBAIwJqQERAKQFswERACECtwERADoBuwEGBp4AqQFWgHMIvwFW
gAECvwFQIAAAAACGAM0FBgABAHQiAAAAAIEAKgUQAAEA/CMAAAAAgQBvCcMBAgCAJgAAAACBAJoI
0QEFAGAoAAAAAIEAvgjcAQgAkCkAAAAAgQDwCOYBCgA4LAAAAACBALYI9wEOALQuAAAAAIEAXgAD
AhEAlDAAAAAAhhhoBwYAEQC0MAAAAACDGGgHBgARALwwAAAAAJMI/wYIAhEA6DAAAAAAkwgJAg0C
EQDvMAAAAACTCBUCEgIRAPcwAAAAAJYIBQkYAhIA/jAAAAAAhhhoBwYAEgAGMQAAAACRGG4HHQIS
AAAAAQC6AQAAAQBKAQAAAgBUCQAAAwDICAAAAQBKAQAAAgCuCAAAAwDTCAAAAQBKAQAAAgC9BQAA
AQBUCQAAAgA9BwAAAwDtBgAABACEBAAAAQBKAQAAAgCuCAAAAwDTCAAAAQB+BAkAaAcBABEAaAcG
ABkAaAcKACkAaAcQADEAaAcQADkAaAcQAEEAaAcQAEkAaAcQAFEAaAcQAFkAaAcQAGEAaAcQAGkA
aAcGAOkAaAcGAAkBaAcVABkBaAcGAHkAaAcGAHEAewglACEBIwkBACEBOggrACkBjwUxADkB3Qk4
ADEBWgQ7AJEAwAlAAJEAygRFADEBUARJAKEAygRFAEkBMABNAAwAaAcGAFEBsAJYADkB2whdAHkA
7gFkAJkAVwFFAJkAKwFFADkB4ghqABQAaAeDAAwAkwIGAAwA+gCDAFkB0gWJAFkBswaQAKEA+QGW
AGEBqAGcAGEBIQGlAIEBcAGwAEkBIAXLAJEBlATSAEkBMADbAHEBygRFADkB2wjiABQAcQToABQA
EQnsANEAkQgFAaEBWgcLAakASAlJALEAjwUQAUkBMAAVAakAmwnoALkAiwIGAMEAaAcQAMEACAEp
AakBsAkQAMkAZAguAbkBywYGALEBZAQ0AckBuAUGAKkB0QZJANEAaAcGANkAaAdfAdEBhgVlAXEA
aAcGAKEAaAcGAGEB0Al0AfEAaAd6AREBaAcGAAgAUACUAQgAVACZASkAcwBYAi4ACwAwAi4AEwA5
Ai4AGwBYAi4AIwBhAi4AKwCKAi4AMwCKAi4AOwCQAi4AQwBhAi4ASwCdAi4AUwCKAi4AWwC7AkMA
YwCZAUkAcwBYAmMAawCZAUECewCZARwAcgC3APEAGgE8AU0BawEDAAEABAADAAAAAwchAgAAKQIm
AgAAGwkrAgIACwADAAIADAAFAAEADQAFAAIADgAHAFIAfQAEgAAAAQAAAN4hGKIAAAAAAACyAAAA
BAAAAAAAAAAAAAAAggHWAAAAAAAQAAAAAAAAAAAAAACLAdgEAAAAAAQAAAAAAAAAAAAAAIIBpgAA
AAAABAAAAAAAAAAAAAAAggGYBQAAAAAQAAAAAAAAAAAAAACLAX8AAAAAAAAAAAABAAAAuQcAAAUA
AgAAAAAAAE51bGxhYmxlYDEATGlzdGAxAHN1cHBsaWVyQ29kZTEAaWROdW0xAHJvd051bTEAVG9J
bnQzMgBzdXBwbGllckNvZGUyAGlkTnVtMgByb3dOdW0yADxNb2R1bGU+AEdldFRvdGFsUm93c19D
cmVhdGVTUUwAU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9f
AFN5c3RlbS5EYXRhAFNUX2NkNDA0OTUzZTZhNTRlZDlhYmE2NjYzODNmOGFjOTNiAG1zY29ybGli
AFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZABEYkNvbW1hbmQAQ3JlYXRlQ29tbWFuZABT
cWxDb21tYW5kAEdldE1ldGhvZABnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAc3VwcGxp
ZXJDb2RlAGdldF9NZXNzYWdlAGVycm9yTWVzc2FnZQBJbnZva2UARGF0YVRhYmxlAFZhcmlhYmxl
AElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAG91dHB1dEZp
bGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBBcHBlbmRMaW5lAEdl
dFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUATWV0
aG9kQmFzZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UASW50ZXJuYWxEYXRhQ29sbGVjdGlv
bkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBSZXZlcnNlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAERlbGV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBBZGRXaXRoVmFs
dWUAZ2V0X0hhc1ZhbHVlAHZhbHVlAGNvbnNlY3V0aXZlRmxhZwBDZWlsaW5nAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAc3FsQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBNYXRoAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFRvRGVjaW1hbABPdXRwdXRFeGNlbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU1RfY2Q0MDQ5NTNlNmE1NGVkOWFiYTY2NjM4M2Y4YWM5M2IuZGxsAEZpbGwA
c3FsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AT3BlbgBlcXVhbFNp
Z24AU2NyaXB0TWFpbgBDcmVhdGVEb21haW4AQXBwRG9tYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERiUGFyYW1ldGVyQ29sbGVj
dGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAERiQ29ubmVjdGlv
bgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ATWV0aG9kSW5mbwBD
dWx0dXJlSW5mbwBDcmVhdGVJbnN0YW5jZUFuZFVud3JhcABDbGVhcgBFeGVjdXRlU2NhbGFyAFN0
cmluZ0J1aWxkZXIAc3VwcGxpZXJDb2RlVW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTcWxQYXJh
bWV0ZXIARGJEYXRhQWRhcHRlcgBTcWxEYXRhQWRhcHRlcgBzdXBwbGllckNvZGVPdmVyAElFbnVt
ZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfY2Q0MDQ5NTNl
NmE1NGVkOWFiYTY2NjM4M2Y4YWM5M2IuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERl
YnVnZ2luZ01vZGVzAFNUX2NkNDA0OTUzZTZhNTRlZDlhYmE2NjYzODNmOGFjOTNiLlByb3BlcnRp
ZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTeXN0ZW0uQ29sbGVjdGlvbnMAZ2V0X1BhcmFtZXRl
cnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X1Jvd3MAQ2hlY2tSb3dzAHRvdGFs
Um93cwBtaW5Sb3dzAEdldFJvd3MAQ291bnRSb3dzAG91dHB1dFJvd3MAbWF4Um93cwBDb25jYXQA
Rm9ybWF0AE9iamVjdABDcmVhdGVTUUxfU3BsaXRTaGVldABnZXRfRGVmYXVsdABHZXRWYWx1ZU9y
RGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQA
c2hlZXRDb3VudABDb252ZXJ0AHNxbExpc3QAQ3JlYXRlU3FsU2hlZXRMaXN0AHNoZWV0TGlzdABj
b21tYW5kVGltZU91dABNb3ZlTmV4dABTeXN0ZW0uVGV4dABzZXRfQ29tbWFuZFRleHQAZ2V0X05v
dwBEYXRhUm93AGdldF9Bc3NlbWJseQBFbXB0eQAAABlFAHIAcgBvAHIATQBlAHMAcwBhAGcAZQAA
E0UAcgByAG8AcgBGAGwAYQBnAAATUwB0AGEAcgB0AFQAaQBtAGUAACFDAG8AbgBuAGUAYwB0AGkA
bwBuAFMAdAByAGkAbgBnAAAVTwB1AHQAcAB1AHQARgBpAGwAZQAAD00AYQB4AFIAbwB3AHMAAB1D
AG8AbQBtAGEAbgBkAFQAaQBtAGUATwB1AHQAAD1NUt5WXE8QYtUwoTCkMOswbjBKUmSWazAxWVdl
VzB+MFcwXzACMA0ACgDVMKEwpDDrMCAAOgAgADwAPAABBT4APgAAbxAwUwB1AHAAcABsAGkAZQBy
ACAAUAByAG8AZAB1AGMAdABzACAAvWL6UeZRBnRnMKgw6TD8MEwwenYfdVcwfjBXMF8wAjARMA0A
CgANAAoAewAwAH0ADQAKACgAewAxAH0AKQANAAoAewAyAH0AAQ1TAGgAZQBlAHQAMQAAEU0AeQBE
AG8AbQBhAGkAbgAAFVQAQwBJAE8AcABlAG4AWABNAEwAACtUAEMASQBPAHAAZQBuAFgATQBMAC4A
VABDAEkATwBwAGUAbgBYAE0ATAAAG0MAcgBlAGEAdABlAE8AcABlAG4AWABNAEwAADeoMK8wuzDr
MPpRm1JrMDFZV2VXMH4wVzBfMAIwDQAKAPpRm1LVMKEwpDDrMCAAOgAgADwAPAABC1MAaABlAGUA
dAAADVIATwBXAE4AVQBNAAAZUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAAAtJAEQATgBVAE0AAA1T
AEUATABFAEMAVAAAEwkAQwBPAFUATgBUACgAKgApAAAJRgBSAE8ATQAAMwkAWwBTAHUAcABwAGwA
aQBlAHIAXwBQAHIAbwBkAHUAYwB0AF0AIABBAFMAIABTAFAAAAtXAEgARQBSAEUAAEUJAFMAUAAu
AFsAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAXQAgAD0AIABAAHMAdQBwAHAAbABpAGUAcgBDAG8A
ZABlAABHCQBTAFAALgBbAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0AIAA+AD0AIABAAHMAdQBw
AHAAbABpAGUAcgBDAG8AZABlAAAZcwB1AHAAcABsAGkAZQByAEMAbwBkAGUAAFtTAHUAcABwAGwA
aQBlAHIAXwBQAHIAbwBkAHUAYwB0ACAAbjD2TnBl1lOXX2swMVlXZVcwfjBXMF8wAjBzAHUAcABw
AGwAaQBlAHIAQwBvAGQAZQAgAD0AIAABI1cASQBUAEgAIABSAG8AdwBEAGEAdABhACAAQQBTACAA
KAAAWQkAUwBQAC4AWwBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQBdACAAQQBTACAAWwBTAHUAcABw
AGwAaQBlAHIAIABDAG8AZABlACAAKABQAEQAQgApAF0ALAAAgJ0JAEMATwBOAEMAQQBUACgASQBT
AE4AVQBMAEwAKABTAC4AWwBOAGEAbQBlADMAXQAsACAAJwAnACkALAAgACcAIAAnACwAIABJAFMA
TgBVAEwATAAoAFMALgBbAE4AYQBtAGUANABdACwAIAAnACcAKQApACAAQQBTACAAWwBTAHUAcABw
AGwAaQBlAHIAIABOAGEAbQBlAF0ALAABZwkASQBTAE4AVQBMAEwAKABQAC4AWwBQAHIAbwBkAHUA
YwB0AE4AdQBtAGIAZQByAF0ALAAgACcAJwApACAAQQBTACAAWwBQAHIAbwBkAHUAYwB0ACAATgB1
AG0AYgBlAHIAXQAsAAGAwQkASQBTAE4AVQBMAEwAKABDAEEAUwBFACAAVwBIAEUATgAgAFAALgBb
AFEAdQBvAE4AYQBtAGUAXQAgAEkAUwAgAE4AVQBMAEwAIABUAEgARQBOACAAUAAuAFsATgBhAG0A
ZQBdACAARQBMAFMARQAgAFAALgBbAFEAdQBvAE4AYQBtAGUAXQAgAEUATgBEACwAIAAnACcAKQAg
AEEAUwAgAFsAUAByAG8AZAB1AGMAdAAgAE4AYQBtAGUAXQAsAAGAiQkATABFAEYAVAAoAEMATwBO
AFYARQBSAFQAKABOAFYAQQBSAEMASABBAFIALAAgAFMAUAAuAFsAVQBwAGQAYQB0AGUARABhAHQA
ZQBdACwAIAAxADIAMAApACwAIAAxADAAKQAgAEEAUwAgAFsAVQBwAGQAYQB0AGUAIABEAGEAdABl
AF0ALAAAWyAAIAAgACAAUwBQAC4AWwBWAGEAbABpAGQAUQB1AG8AdABhAHQAaQBvAG4AXQAgAEEA
UwAgAFsAVgBhAGwAaQBkACAAUQB1AG8AdABhAHQAaQBvAG4AXQAsAAAdIAAgACAAIABTAFAALgBb
AE4AbwB0AGUAXQAsAACA1QkAUgBPAFcAXwBOAFUATQBCAEUAUgAoACkAIABPAFYARQBSACgATwBS
AEQARQBSACAAQgBZACAAUwBQAC4AWwBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQBdACwAIABJAFMA
TgBVAEwATAAoAFAALgBbAFAAcgBvAGQAdQBjAHQATgB1AG0AYgBlAHIAXQAsACAAJwAnACkALAAg
AFMAUAAuAFsAVQBwAGQAYQB0AGUARABhAHQAZQBdACkAIABBAFMAIABbAFIATwBXAE4AVQBNAF0A
AR9MAEUARgBUACAATwBVAFQARQBSACAASgBPAEkATgAAIQkAWwBTAHUAcABwAGwAaQBlAHIAXQAg
AEEAUwAgAFMAAAVPAE4AAEsJAFMALgBbAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0AIAA9ACAA
UwBQAC4AWwBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQBdAAAfCQBbAFAAcgBvAGQAdQBjAHQAXQAg
AEEAUwAgAFAAAD8JAFMAUAAuAFsAUAByAG8AZAB1AGMAdABJAEQAXQAgAD0AIABQAC4AWwBQAHIA
bwBkAHUAYwB0AEkARABdAAAtCQBTAFAALgBbAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0AIAA+
AD0AIAAAMwkAQQBOAEQAIABTAFAALgBbAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0AIAA8ACAA
AAMpAAAvCQBbAFMAdQBwAHAAbABpAGUAcgAgAEMAbwBkAGUAIAAoAFAARABCACkAXQAsAAAjCQBb
AFMAdQBwAHAAbABpAGUAcgAgAE4AYQBtAGUAXQAsAAAlCQBbAFAAcgBvAGQAdQBjAHQAIABOAHUA
bQBiAGUAcgBdACwAACEJAFsAUAByAG8AZAB1AGMAdAAgAE4AYQBtAGUAXQAsAAAfCQBbAFUAcABk
AGEAdABlACAARABhAHQAZQBdACwAAC0gACAAIAAgAFsAVgBhAGwAaQBkACAAUQB1AG8AdABhAHQA
aQBvAG4AXQAsAAAVIAAgACAAIABbAE4AbwB0AGUAXQAAEQkAUgBvAHcARABhAHQAYQAAFwkAUgBP
AFcATgBVAE0AIAA+AD0AIAAAHwkAQQBOAEQAIABSAE8AVwBOAFUATQAgADwAPQAgAAARTwBSAEQA
RQBSACAAQgBZAAAdCQBbAFUAcABkAGEAdABlACAARABhAHQAZQBdAAAPCQBTAEUATABFAEMAVAAA
IwkACQBbAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0ALAAAgKkJAAkAUgBPAFcAXwBOAFUATQBC
AEUAUgAoACkAIABPAFYARQBSACgAUABBAFIAVABJAFQASQBPAE4AIABCAFkAIABbAFMAdQBwAHAA
bABpAGUAcgBDAG8AZABlAF0AIABPAFIARABFAFIAIABCAFkAIABbAFMAdQBwAHAAbABpAGUAcgBD
AG8AZABlAF0AKQAgAEEAUwAgAFsASQBEAE4AVQBNAF0ALAAAcQkACQBSAE8AVwBfAE4AVQBNAEIA
RQBSACgAKQAgAE8AVgBFAFIAKABPAFIARABFAFIAIABCAFkAIABbAFMAdQBwAHAAbABpAGUAcgBD
AG8AZABlAF0AKQAgAEEAUwAgAFsAUgBPAFcATgBVAE0AXQAACwkARgBSAE8ATQAAKQkACQBbAFMA
dQBwAHAAbABpAGUAcgBfAFAAcgBvAGQAdQBjAHQAXQAADQkAVwBIAEUAUgBFAABDCQAJAFsAUwB1
AHAAcABsAGkAZQByAEMAbwBkAGUAXQAgAD4APQAgAEAAcwB1AHAAcABsAGkAZQByAEMAbwBkAGUA
ACEJAFsAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAXQAsAAATCQBbAEkARABOAFUATQBdACwAABMJ
AFsAUgBPAFcATgBVAE0AXQAALwkAWwBSAE8AVwBOAFUATQBdACAAPQAgAEAAcgBvAHcATgB1AG0A
YgBlAHIAMAAANQkATwBSACAAWwBSAE8AVwBOAFUATQBdACAAPQAgAEAAcgBvAHcATgB1AG0AYgBl
AHIAMQAAFXIAbwB3AE4AdQBtAGIAZQByADAAABVyAG8AdwBOAHUAbQBiAGUAcgAxAABXUwB1AHAA
cABsAGkAZQByAF8AUAByAG8AZAB1AGMAdAAgAG4w1lOXX2swMVlXZVcwfjBXMF8wAjBzAHUAcABw
AGwAaQBlAHIAQwBvAGQAZQAgAD0AIAABP1MAdQBwAHAAbABpAGUAcgBfAFAAcgBvAGQAdQBjAHQA
IABuMM999k5wZdZTl19rMDFZV2VXMH4wVzBfMAIwARsgACAAIAAgAFMAUAAuAFsATgBvAHQAZQBd
AAAnCQBTAFAALgBbAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAF0ALAAAJwkAUAAuAFsAUAByAG8A
ZAB1AGMAdABOAHUAbQBiAGUAcgBdACwAACEJAFMAUAAuAFsAVQBwAGQAYQB0AGUARABhAHQAZQBd
AABxUwBUAF8AYwBkADQAMAA0ADkANQAzAGUANgBhADUANABlAGQAOQBhAGIAYQA2ADYANgAzADgA
MwBmADgAYQBjADkAMwBiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAB5Ad9uxl8TSJh8oGdLQOG/AAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAgQgHBA4RSRJNDgUg
ABKAkQUgABKAlQYgARKAmRwCBg4EIAEBHAQAABFJAyAADgMgABwEAAEIDgUVEkEBDgQAAQEOBgAD
Dg4ODgUgARI9DgcABA4OHBwcCgcEHBURRQEICAgFFRFFAQgFIAEBEwAGAAESgK0OBSACHA4OBSAA
EoCxCAABEoCxEYC1CiACEoC9Dh0SgLEGIAIcHB0cEwcJCAgCCAgICBURRQEIFRFFAQgGAAERgMUN
CAABEYDFEYDFBgABCBGAxQUAAg4ODgMgAAIEIAATABMHBgISVRJZEl0VEUUBCBURRQEIBSAAEoDN
BCAAElUEIAEcDgQAAQgcDgcFEj0IEmESZRURRQEIBCAAEmUFIAASgNkHIAISgOEOHBAHBQgIEj0V
EUUBCBURRQEIEQcGEj0SaRJhEmUSbRURRQEIBSABARJlBSABCBJpCAcDEj0SYRJlBSAAEoDtByAC
AQ4SgO0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSPQYGFRJBAQ4CBggGBhURRQEIAwYS
eQMGEn0DBhIQAwYRFA0gAwgQFRFFAQgQCBAICiADAhURRQEICAgJIAIIFRFFAQgCECAEEj0IFRFF
AQgVEUUBCAILIAMSaRURRQEICAgEIAASPQQAABJ5BAAAEn0FAAEBEn0EAAASEAMAAAEECAASeQQI
ABJ9BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NUX2NkNDA0OTUzZTZhNTRlZDlhYmE2NjYzODNmOGFjOTNiAAAFAQAAAAAMAQAHVG9zaGli
YQAAHQEAGENvcHlyaWdodCBAIFRvc2hpYmEgMjAxNwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAMFUAAAAAAAAAAAAASlUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxVAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAANgQAAAAAAAAA
AAAANgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABABii
3iEAAAEAGKLeIT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBJYDAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHIDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQAB
AEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAwAAgAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAFQA
bwBzAGgAaQBiAGEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AYwBkADQAMAA0ADkANQAzAGUANgBhADUANABlAGQAOQBhAGIAYQA2ADYANgAzADgAMwBmADgA
YQBjADkAMwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgANgA3
ADAALgA0ADEANAA5ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
YwBkADQAMAA0ADkANQAzAGUANgBhADUANABlAGQAOQBhAGIAYQA2ADYANgAzADgAMwBmADgAYQBj
ADkAMwBiAC4AZABsAGwAAABWABkAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABUAG8AcwBoAGkAYgBhACAAMgAwADEANwAAAAAAKgABAAEATABl
AGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwA
RgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYwBkADQAMAA0ADkANQAzAGUANgBhADUANABlAGQAOQBh
AGIAYQA2ADYANgAzADgAMwBmADgAYQBjADkAMwBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUA
YwB0AE4AYQBtAGUAAAAAAFMAVABfAGMAZAA0ADAANAA5ADUAMwBlADYAYQA1ADQAZQBkADkAYQBi
AGEANgA2ADYAMwA4ADMAZgA4AGEAYwA5ADMAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOAA2ADcAMAAuADQAMQA0ADkANgAAAAAARgAPAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA2ADcAMAAuADQAMQA0ADkANgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAFw1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\後処理"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="スクリプト タスク"
      DTS:DTSID="{B54766CB-2691-45FD-BFB5-E96A100CFF57}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="後処理"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_90f1589c22be400f8dd2e1d86c6b28cb"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::StartTime"
          ReadWriteVariables="User::ErrorFlag,User::ErrorMessage">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Settings.get_Default():ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Sett" +
    "ings")]

namespace ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_90f1589c22be400f8dd2e1d86c6b28cb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        // 【後処理】
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        // エラーメッセージ
        StringBuilder errorMessage;

        /// <summary>
        /// メイン処理
        /// </summary>
        /// <remarks>
        /// 1. 変数の初期化
        /// 2. エラー時のメッセージ生成
        public void Main()
        {
            try
            {
                //エラーメッセージ
                this.errorMessage = new StringBuilder();

                // 変数の初期化
                Dts.TaskResult = (int)ScriptResults.Success;

                // 実行日
                DateTime execDate = DateTime.Now;

                // エラーフラグ
                bool errorFlag = Convert.ToBoolean(Dts.Variables["ErrorFlag"].Value);

                // エラーメッセージがある場合
                if(errorFlag)
                {
                    // 出力メッセージ作成
                    StringBuilder noticeMessage = new StringBuilder();
                    noticeMessage.AppendLine("処理名   ： [PDB] Supplier Products Export");
                    noticeMessage.AppendLine("実行パス ： " + Environment.CommandLine);
                    noticeMessage.AppendLine("開始日時 ： " + Dts.Variables["StartTime"].Value.ToString());
                    noticeMessage.AppendLine("終了日時 ： " + execDate.ToString());
                    noticeMessage.AppendLine("処理結果 ： エラーが発生しました。" + "\r\n" + "\r\n" + Dts.Variables["ErrorMessage"].Value.ToString());
                    // 共通のメッセージ変数に作成した通知内容をセット
                    Dts.Variables["ErrorMessage"].Value = noticeMessage.ToString();
                }

            }
            catch(Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                Dts.Variables["ErrorFlag"].Value = true;
                string formatMessage = "【後処理でエラーが発生しました。】" + "\r\n" + "{0}" + "\r\n" + "({1})" + "\r\n" + "{2}";

                // 出力メッセージ作成
                StringBuilder noticeMessage = new StringBuilder();
                noticeMessage.AppendLine("処理名   ： [PDB] Supplier Products Export");
                noticeMessage.AppendLine("実行パス ： " + Environment.CommandLine);
                noticeMessage.AppendLine("開始日時 ： " + Dts.Variables["StartTime"].Value.ToString());
                noticeMessage.AppendLine("終了日時 ： " + DateTime.Now.ToString());
                noticeMessage.AppendLine("処理結果 ： エラーが発生しました。" + "\r\n" + "\r\n" + Dts.Variables["ErrorMessage"].Value.ToString());
                Dts.Variables["ErrorMessage"].Value = noticeMessage.ToString() + "\r\n" + String.Format(formatMessage, this.errorMessage.ToString(), ex.Message, ex.StackTrace);
            }

        }

    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_90f1589c22be400f8dd2e1d86c6b28cb.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{98184788-e82a-4b97-8ce8-fecbf1fa1959}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_90f1589c22be400f8dd2e1d86c6b28cb</RootNamespace>
    <AssemblyName>ST_90f1589c22be400f8dd2e1d86c6b28cb</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_90f1589c22be400f8dd2e1d86c6b28cb</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_90f1589c22be400f8dd2e1d86c6b28cb</msb:DisplayName>
    <msb:ProjectId>{FE321D21-4573-482D-83A0-9D367441D42E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_90f1589c22be400f8dd2e1d86c6b28cb.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_90f1589c22be400f8dd2e1d86c6b28cb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Toshiba")]
[assembly: AssemblyProduct("ST_90f1589c22be400f8dd2e1d86c6b28cb")]
[assembly: AssemblyCopyright("Copyright @ Toshiba 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_90f1589c22be400f8dd2e1d86c6b28cb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_90f1589c22be400f8dd2e1d86c6b28cb.dll">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
sgBWgIYFtQBWgAwBtQBQIAAAAACGACQEBgABAKwiAAAAAIYYnQQGAAEAtCIAAAAAgxidBAYAAQC8
IgAAAACTCIkEuQABAOgiAAAAAJMIFAG+AAEA7yIAAAAAkwggAcMAAQD3IgAAAACWCLkFyQACAP4i
AAAAAIYYnQQGAAIABiMAAAAAkRijBM4AAgAAAAEAMgMJAJ0EAQARAJ0EBgAZAJ0ECgApAJ0EEAAx
AJ0EEAA5AJ0EEABBAJ0EEABJAJ0EEABRAJ0EEABZAJ0EEABhAJ0EEABpAJ0EBgCZAJ0EBgDBAJ0E
FQDRAJ0EBgB5AJ0EBgBxAI4FKQDZAMUFAQCBAPQFLgDZAG8FMwDhAPMDOADpAB4DPgDxABQEQgB5
APwARwD5AOwATQABAaQFUQChAFIDVwCBAFIDVwDpACgDWwCJAH0AVwCJAF4AVwABAasFYAABAaQF
aABxAJ0EBgChAJ0EBgARAbEAbwARAfwFeACpAJ0EfgDJAJ0EBgAIABgAmAAIABwAnQApAHMACQEu
AAsA4QAuABMA6gAuABsACQEuACMAEgEuACsAOwEuADMAOwEuADsAQQEuAEMAEgEuAEsATgEuAFMA
OwEuAFsAbAFDAGMAnQBJAHMACQFjAGsAnQCBAHsAnQAbAAMAAQAEAAMAAACNBNIAAAA0AdcAAAC9
BdwAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAADeIRuiAAAAAAAAMQAAAAQAAAAAAAAA
AAAAAIYAVQAAAAAAEAAAAAAAAAAAAAAAjwBbAwAAAAAEAAAAAAAAAAAAAACGAPwDAAAAABAAAAAA
AAAAAAAAAI8ACgAAAAAAAAAAAAEAAADuBAAABQACAAAAADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUXzkwZjE1ODljMjJiZTQwMGY4ZGQyZTFkODZjNmIy
OGNiAG1zY29ybGliAGdldF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBl
cnJvck1lc3NhZ2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
RGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBnZXRfQ29tbWFuZExpbmUA
QXBwZW5kTGluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlw
dE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF85MGYxNTg5YzIyYmU0MDBmOGRk
MmUxZDg2YzZiMjhjYi5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AVG9Cb29s
ZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFN0cmluZ0J1aWxkZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF85MGYxNTg5YzIyYmU0
MDBmOGRkMmUxZDg2YzZiMjhjYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU1RfOTBmMTU4OWMyMmJlNDAwZjhkZDJlMWQ4NmM2YjI4Y2IuUHJvcGVydGllcwBn
ZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNh
dABGb3JtYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AEVudmlyb25tZW50AENv
bnZlcnQAU3lzdGVtLlRleHQAZ2V0X05vdwBnZXRfQXNzZW1ibHkAAAAAABNFAHIAcgBvAHIARgBs
AGEAZwAATeZRBnQNVCAAIAAgABr/IABbAFAARABCAF0AIABTAHUAcABwAGwAaQBlAHIAIABQAHIA
bwBkAHUAYwB0AHMAIABFAHgAcABvAHIAdAABD59bTIjRMLkwIAAa/yAAAQ+LlctZ5WVCZiAAGv8g
AAETUwB0AGEAcgB0AFQAaQBtAGUAAA9CfYZO5WVCZiAAGv8gAAEt5lEGdFB9nGcgABr/IACoMOkw
/DBMMHp2H3VXMH4wVzBfMAIwDQAKAA0ACgABGUUAcgByAG8AcgBNAGUAcwBzAGEAZwBlAABFEDCM
X+ZRBnRnMKgw6TD8MEwwenYfdVcwfjBXMF8wAjARMA0ACgB7ADAAfQANAAoAKAB7ADEAfQApAA0A
CgB7ADIAfQABBQ0ACgAAcVMAVABfADkAMABmADEANQA4ADkAYwAyADIAYgBlADQAMAAwAGYAOABk
AGQAMgBlADEAZAA4ADYAYwA2AGIAMgA4AGMAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAAAAqjHPrs6ORk6eplHXIM8rowAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQERXQ0HBhFBEj0SRQ4SPRFBBCAAEm0EAAARQQQgABJxBSABEnUcAyAAHAQAAQIcBSABEj0OAwAA
DgUAAg4ODgMgAA4EIAEBHAcABA4OHBwcBgADDg4ODggAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6
XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEj0DBhJVAwYSWQMGEhACBggDBhEUBAAAElUEAAAS
WQUAAQESWQQAABIQAwAAAQQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOTBmMTU4OWMyMmJlNDAwZjhkZDJlMWQ4NmM2
YjI4Y2IAAAUBAAAAAAwBAAdUb3NoaWJhAAAdAQAYQ29weXJpZ2h0IEAgVG9zaGliYSAyMDE3AABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABgyAAAAAAAAAAAAADIyAAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAkMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA2BAAAAAAAAAAAAAA2BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAG6LeIQAAAQAbot4hPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAElgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAcgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADAACAABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAVABvAHMAaABpAGIAYQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwA5ADAAZgAxADUAOAA5AGMAMgAyAGIAZQA0ADAAMABmADgAZABk
ADIAZQAxAGQAOAA2AGMANgBiADIAOABjAGIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4AOAA2ADcAMAAuADQAMQA0ADkAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABTAFQAXwA5ADAAZgAxADUAOAA5AGMAMgAyAGIAZQA0ADAAMABmADgAZABkADIA
ZQAxAGQAOAA2AGMANgBiADIAOABjAGIALgBkAGwAbAAAAFYAGQABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFQAbwBzAGgAaQBiAGEAIAAyADAA
MQA3AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA5ADAAZgAxADUAOAA5AGMA
MgAyAGIAZQA0ADAAMABmADgAZABkADIAZQAxAGQAOAA2AGMANgBiADIAOABjAGIALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOQAwAGYAMQA1ADgAOQBjADIA
MgBiAGUANAAwADAAZgA4AGQAZAAyAGUAMQBkADgANgBjADYAYgAyADgAYwBiAAAAQgAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADYANwAwAC4ANAAxADQAOQA5AAAA
AABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADYANwAw
AC4ANAAxADQAOQA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAARDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[制約]"
      DTS:CreationName=""
      DTS:DTSID="{E53F23DF-E0DD-4C7E-AF45-7D95E7B57D9B}"
      DTS:From="Package\シーケンス コンテナー"
      DTS:LogicalAnd="True"
      DTS:ObjectName="制約"
      DTS:To="Package\後処理"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[制約 2]"
      DTS:CreationName=""
      DTS:DTSID="{05704D9E-722E-4A66-B16B-0B86691D4798}"
      DTS:EvalOp="4"
      DTS:Expression="@[User::ErrorFlag] == True"
      DTS:From="Package\後処理"
      DTS:ObjectName="制約 2"
      DTS:To="Package\エラーメール送信"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--この CDATA セクションにはパッケージのレイアウト情報が含まれています。(x,y) 座標、幅、高さなどの情報が含まれます。-->
<!--このセクションを手動で編集して間違った場合は、セクションを削除できます。-->
<!--パッケージは正常に読み込むことができますが、以前のレイアウト情報は失われ、デザイン画面上の要素が自動的に再配置されます。-->
<Objects
  Version="8">
  <!--次の各ノードには、実行時の動作に影響しないプロパティが含まれます。-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="158.4,41.6"
          Id="Package\エラーメール送信"
          TopLeft="438,210.166665622758" />
        <NodeLayout
          Size="215.2,41.6"
          Id="Package\シーケンス コンテナー\仕入先製品データ抽出処理"
          TopLeft="26.5,28.8333327306642" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="280,132.8"
          Size="280,176"
          Id="Package\シーケンス コンテナー"
          TopLeft="72,55.1666664621896" />
        <NodeLayout
          Size="116.8,41.6"
          Id="Package\後処理"
          TopLeft="436,107.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[制約]"
          TopLeft="352,143.16666646219">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84,-14.6666664621895"
              Start="0,0"
              End="76.5,-14.6666664621895">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38,0" />
                  <mssgle:CubicBezierSegment
                    Point1="38,0"
                    Point2="42,0"
                    Point3="42,-4" />
                  <mssgle:LineSegment
                    End="42,-10.6666664621895" />
                  <mssgle:CubicBezierSegment
                    Point1="42,-10.6666664621895"
                    Point2="42,-14.6666664621895"
                    Point3="46,-14.6666664621895" />
                  <mssgle:LineSegment
                    End="76.5,-14.6666664621895" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="31.849609375,1,20.30078125,10.9501953125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[制約 2]"
          TopLeft="494.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.5,60.6666656227574"
              Start="0,0"
              End="22.5,53.1666656227574">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.3333328113787" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.3333328113787"
                    Point2="0,30.3333328113787"
                    Point3="4,30.3333328113787" />
                  <mssgle:LineSegment
                    End="18.5,30.3333328113787" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,30.3333328113787"
                    Point2="22.5,30.3333328113787"
                    Point3="22.5,34.3333328113787" />
                  <mssgle:LineSegment
                    End="22.5,53.1666656227574" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.015625,35.3333328113787,38.53125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>