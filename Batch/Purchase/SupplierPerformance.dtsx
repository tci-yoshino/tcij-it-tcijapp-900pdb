<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/12/2015 2:02:33 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TCIJ-N13051"
  DTS:CreatorName="TCIX\Masumi.Koyama"
  DTS:DTSID="{D4C3B75A-B13C-42EE-B6A6-48312244AE4D}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1041"
  DTS:ObjectName="SupplierPerformance"
  DTS:PackageType="5"
  DTS:VersionBuild="78"
  DTS:VersionGUID="{9EDA3A2B-0380-4394-BDCD-0D44F7026D3E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP 接続マネージャー]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{3715EA69-093A-49DB-90CE-10DF00860FC8}"
      DTS:ObjectName="SMTP 接続マネージャー">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=excas.tcix.local;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SupplierPerformance.log]"
      DTS:CreationName="FILE"
      DTS:DTSID="{69219EEC-2FA4-45FC-AC2A-6EC591D1CB77}"
      DTS:ObjectName="SupplierPerformance.log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogDir] + "SupplierPerformance.log"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\tcijapp\Purchase\Batch\Log\SupplierPerformance.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="C:\tcijapp\Purchase\Batch\Purchase\SupplierPerformance.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{D5230F8D-1EC8-41C6-90F7-A1284BB14096}"
      DTS:ObjectName="構成 1" />
    <DTS:Configuration
      DTS:ConfigurationString="C:\tcijapp\Purchase\Batch\Purchase\Purchase.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{C41B50F8-28C1-41AD-80EB-202FA179CB88}"
      DTS:ObjectName="構成 2" />
  </DTS:Configurations>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="SupplierPerformance.log"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="イベントのログ エントリを CSV ファイルに書き込みます"
      DTS:DTSID="{FC937C02-92D7-4C11-A6D1-8A76848F9C1D}"
      DTS:ObjectName="テキスト ファイルの SSIS ログ プロバイダー">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B7E5CD0-2085-4F61-8722-43CA94239B94}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CommandTimeout">
      <DTS:VariableValue
        DTS:DataType="3">600</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0AC0FCFD-2396-4209-A45F-D1F56ADB6A6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=TDB2; Initial Catalog=Purchase; User ID=Purchase; Password=n061t@kun;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4D653EDF-0CA3-41A5-88EB-661EF562CD9B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F552666D-AE2D-4997-96F1-7D5D583B790A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogDir">
      <DTS:VariableValue
        DTS:DataType="8">C:\tcijapp\Purchase\Batch\Log\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{61767ED7-8C43-4586-B09F-51D71ADB2CA7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailTo">
      <DTS:VariableValue
        DTS:DataType="8">masumi.koyama@tcichemicals.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B710232-DA80-4BE1-9D0F-29A0769FED9F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputFilePath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Masumi.Koyama\Desktop\RFQ Analysis all data (New).xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{638B032E-7293-4A61-85A0-3159B4EF8CA1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TemplateFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\tcijapp\Purchase\Batch\template\RFQ Analysis all data.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">3,7,OnError,12,OnTaskFailed,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{FC937C02-92D7-4C11-A6D1-8A76848F9C1D}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\シーケンス コンテナー"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="シーケンス コンテナー"
      DTS:DTSID="{3E88161D-8F22-42BA-8A2A-A6A68FB5B89C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="シーケンス コンテナー">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\シーケンス コンテナー\エクセルファイル出力"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="スクリプト タスク"
          DTS:DTSID="{503B42B0-574E-4F3A-BEA0-8F9FE6ED6665}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="エクセルファイル出力"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a2784740098a45c89c672d61dfb86d3d"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::ConnectionString, User::CommandTimeout, User::TemplateFilePath, User::OutputFilePath"
              ReadWriteVariables="User::ErrorMessage">
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Data
Imports System.Collections.Generic
Imports System.IO
Imports System.Reflection
Imports System.Text
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
	
    Dim connectionString As String = String.Empty
    Dim commandTimeout As Integer = 0
    Dim templateFilePath As String = String.Empty
    Dim outputFilePath As String = String.Empty

    ''' <summary>
    ''' メイン処理を行います。
    ''' </summary>
	Public Sub Main()

        connectionString = Dts.Variables("ConnectionString").Value.ToString
        commandTimeout = CInt(Dts.Variables("CommandTimeout").Value.ToString)
        templateFilePath = Dts.Variables("TemplateFilePath").Value.ToString
        outputFilePath = Dts.Variables("OutputFilePath").Value.ToString

        Dim sqlStr As New StringBuilder
        Dim sqlList As List(Of String) = New List(Of String)
        Dim sheetList As List(Of String) = New List(Of String)

        Try
            'ファイルが既に存在する場合は削除する
            If File.Exists(outputFilePath) Then
                File.Delete(outputFilePath)
            End If

            sqlStr = New StringBuilder
            sqlStr.AppendLine("WITH Y1 AS (")
            sqlStr.AppendLine("    SELECT")
            sqlStr.AppendLine("        S.SupplierCode,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.QN, 0)) AS QN_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.NQN, 0)) AS NQN_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.QS, 0)) AS QS_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.NQS, 0)) AS NQS_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PP, 0)) AS PP_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PPN, 0)) AS PPN_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PPS, 0)) AS PPS_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PPC, 0)) AS PPC_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PP2475, 0)) AS PP2475_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PPC, 0)) - SUM(ISNULL(Y1.PP2475, 0)) AS RC_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PA, 0)) AS PA_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PR, 0)) AS PR_Y1")
            sqlStr.AppendLine("    FROM")
            sqlStr.AppendLine("        Supplier AS S")
            sqlStr.AppendLine("            LEFT OUTER JOIN TmpSupplierPerformance AS Y1 ON Y1.SupplierCode = S.SupplierCode AND Y1.CreateDate BETWEEN DATEADD(YEAR, -1, CONVERT(date, GETDATE())) AND DATEADD(DAY, -1, CONVERT(date, GETDATE()))")
            sqlStr.AppendLine("    GROUP BY")
            sqlStr.AppendLine("        S.SupplierCode")
            sqlStr.AppendLine("),")
            sqlStr.AppendLine("Y5 AS (")
            sqlStr.AppendLine("    SELECT")
            sqlStr.AppendLine("        S.SupplierCode,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.QN, 0)) AS QN_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.NQN, 0)) AS NQN_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.QS, 0)) AS QS_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.NQS, 0)) AS NQS_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PP, 0)) AS PP_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PPN, 0)) AS PPN_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PPS, 0)) AS PPS_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PPC, 0)) AS PPC_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PP2475, 0)) AS PP2475_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PPC, 0)) - SUM(ISNULL(Y5.PP2475, 0)) AS RC_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PA, 0)) AS PA_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PR, 0)) AS PR_Y5")
            sqlStr.AppendLine("    FROM")
            sqlStr.AppendLine("        Supplier AS S")
            sqlStr.AppendLine("            LEFT OUTER JOIN TmpSupplierPerformance AS Y5 ON Y5.SupplierCode = S.SupplierCode AND Y5.CreateDate BETWEEN DATEADD(YEAR, -5, CONVERT(date, GETDATE())) AND DATEADD(DAY, -1, CONVERT(date, GETDATE()))")
            sqlStr.AppendLine("    GROUP BY")
            sqlStr.AppendLine("        S.SupplierCode")
            sqlStr.AppendLine(")")
            sqlStr.AppendLine("SELECT")
            sqlStr.AppendLine("    S.SupplierCode AS [Suplier Code],")
            sqlStr.AppendLine("    S.R3SupplierCode AS [TCI-J Supplier Code],")
            sqlStr.AppendLine("    LTRIM(RTRIM(ISNULL(S.Name3, '') + ' ' + ISNULL(S.Name4, ''))) AS [Supplier Name],")
            sqlStr.AppendLine("    C.Name AS [Country],")
            sqlStr.AppendLine("    CASE WHEN PA_Y5 + PA_Y5 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PA_Y5 / (PA_Y5 + PR_Y5), 2)) END AS [Pass rate (%) - Quality],")
            sqlStr.AppendLine("    CASE WHEN QN_Y5 + QS_Y5 - (NQN_Y5 + NQS_Y5) = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND((PPN_Y5 + PPS_Y5) / (QN_Y5 + QS_Y5 - (NQN_Y5 + NQS_Y5)), 2)) END AS [Buying rate (%) - Competitiveness],")
            sqlStr.AppendLine("    CASE WHEN QS_Y5 - NQS_Y5 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPS_Y5 / (QS_Y5 - NQS_Y5), 2)) END AS [Buying rate (%) (for Stock, for Raw Material)],")
            sqlStr.AppendLine("    CASE WHEN QN_Y5 - NQN_Y5 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPN_Y5 / (QN_Y5 - NQN_Y5), 2)) END AS [Buying rate (%) (for New)],")
            sqlStr.AppendLine("    CASE WHEN PP_Y5 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(RC_Y5 / PP_Y5, 2)) END AS [Cancel rate (%) - Cancel],")
            sqlStr.AppendLine("    CONVERT(int, QN_Y5 + QS_Y5) AS [RFQ],")
            sqlStr.AppendLine("    CONVERT(int, (QN_Y5 + QS_Y5) - (NQN_Y5 + NQS_Y5)) AS [RFQ (Price exist)],")
            sqlStr.AppendLine("    CONVERT(int, PPN_Y5 + PPS_Y5) AS [Par-PO],")
            sqlStr.AppendLine("    CASE WHEN PA_Y1 + PA_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PA_Y1 / (PA_Y1 + PR_Y1), 2)) END AS [Pass rate (%) - Quality (current)],")
            sqlStr.AppendLine("    CASE WHEN QN_Y1 + QS_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND((PPN_Y1 + PPS_Y1) / (QN_Y1 + QS_Y1), 2)) END AS [Buying rate (%) - Competitiveness (current)],")
            sqlStr.AppendLine("    CASE WHEN QS_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPS_Y1 / QS_Y1, 2)) END AS [Buying rate (%) (for Stock, for Raw Material) (current)],")
            sqlStr.AppendLine("    CASE WHEN QN_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPN_Y1 / QN_Y1, 2)) END AS [Buying rate (%) (for New) (current)],")
            sqlStr.AppendLine("    CASE WHEN PP_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(RC_Y1 / PP_Y1, 2)) END AS [Cancel rate (%) - Cancel (current)],")
            sqlStr.AppendLine("    CONVERT(int, QN_Y1 + QS_Y1) AS [RFQ (current)],")
            sqlStr.AppendLine("    CONVERT(int, (QN_Y1 + QS_Y1) - (NQN_Y1 + NQS_Y1)) AS [RFQ (Price exist, current)],")
            sqlStr.AppendLine("    CONVERT(int, PPN_Y1 + PPS_Y1) AS [Par-PO (current)],")
            sqlStr.AppendLine("    PPC_Y5 AS [PO Cancel],")
            sqlStr.AppendLine("    PP2475_Y5 AS [2475 PO],")
            sqlStr.AppendLine("    PPC_Y1 AS [PO Cancel (current)],")
            sqlStr.AppendLine("    PP2475_Y1 AS [2475 PO (current)]")
            sqlStr.AppendLine("FROM")
            sqlStr.AppendLine("    Y1,")
            sqlStr.AppendLine("    Y5,")
            sqlStr.AppendLine("    s_Country AS C,")
            sqlStr.AppendLine("    Supplier AS S")
            sqlStr.AppendLine("WHERE")
            sqlStr.AppendLine("    S.CountryCode = C.CountryCode")
            sqlStr.AppendLine("    AND S.SupplierCode = Y5.SupplierCode")
            sqlStr.AppendLine("    AND Y5.SupplierCode = Y1.SupplierCode")
            sqlStr.AppendLine("ORDER BY")
            sqlStr.AppendLine("    S.SupplierCode")

            sqlList.Add(sqlStr.ToString)
            sheetList.Add("Sheet1")

            'テンプレートファイルを出力先に上書きコピーする
            File.Copy(templateFilePath, outputFilePath, True)

            Dim domain As AppDomain = AppDomain.CreateDomain("MyDomain")
            Dim obj = domain.CreateInstanceAndUnwrap("TCIOpenXML", "TCIOpenXML.TCIOpenXML")

            Dim info As MethodInfo = obj.GetType().GetMethod("CreateOpenXML", _
                                                                New Type() {GetType(String), _
                                                                            GetType(List(Of String)), _
                                                                            GetType(String), _
                                                                            GetType(List(Of String)), _
                                                                            GetType(Boolean), _
                                                                            GetType(Integer)})

            info.Invoke(obj, New Object() {connectionString, _
                                           sqlList, _
                                           outputFilePath, _
                                           sheetList, _
                                           True, _
                                           commandTimeout})

        Catch ex As Exception
            Dts.TaskResult = ScriptResults.Failure
            SetErrorMessage(ex)

            Throw ex

        End Try

        Dts.TaskResult = ScriptResults.Success

	End Sub

    ''' <summary>
    ''' ユーザ変数にエラーメッセージを設定します。
    ''' </summary>
    Private Sub SetErrorMessage(ByVal ex As Exception)

        Dim msgStr As New StringBuilder

        msgStr.AppendLine("Company Performance データの出力において、システムエラーが発生しました。")
        msgStr.AppendLine()
        msgStr.AppendLine("実行パス：")
        msgStr.AppendLine(System.Environment.CommandLine)
        msgStr.AppendLine()
        msgStr.AppendLine("エラーメッセージ：")

        If ex.InnerException Is Nothing Then
            msgStr.AppendLine(ex.Message)
            msgStr.AppendLine(ex.StackTrace)
        Else
            msgStr.AppendLine(ex.InnerException.Message)
            msgStr.AppendLine(ex.InnerException.StackTrace)
        End If

        Dts.Variables("ErrorMessage").Value = msgStr.ToString

    End Sub

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="st_a2784740098a45c89c672d61dfb86d3d.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_a2784740098a45c89c672d61dfb86d3d.vbproj</RootNamespace>
    <AssemblyName>ST_a2784740098a45c89c672d61dfb86d3d.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{4DCA1405-E28C-4E54-A6C5-B281F92CD20B}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_a2784740098a45c89c672d61dfb86d3d</msb:CodeName>
		<msb:DisplayName>st_a2784740098a45c89c672d61dfb86d3d</msb:DisplayName>
		<msb:ProjectId>{0D054E32-2811-47F2-A7F1-2949AA8066C9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_a2784740098a45c89c672d61dfb86d3d.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_a2784740098a45c89c672d61dfb86d3d.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_a2784740098a45c89c672d61dfb86d3d.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2016")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("2f12205d-8a1e-466d-b1ee-60e43d8c3d52")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_a2784740098a45c89c672d61dfb86d3d.vbproj.dll">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
BgABAMIgAAAAABYIjgfEAQEA7iAAAAAAFgjSAckBAQD1IAAAAAAWCN4BzgEBAP0gAAAAABEYEwis
AQIADiEAAAAABhgNCAYAAgAYIQAAAAAWCKwE1AECAHQhAAAAAAYYDQgGAAIApCEAAAAABgBoBgYA
AgBcJwAAAAABAD4B2QECABUoAAAAAMYCvQkSAQMAIygAAAAAxgImARcBBAArKAAAAACDAMIB2gAE
ADcoAAAAAMYCCwWfAAQAQCgAAAAAEQCAAOABBABgKAAAAAABAGwA6AEFALogAAAAAAYYDQgGAAYA
bCgAAAAAAwgNAUoABgCgKAAAAAAGGA0IBgAGAAAAAQDJBAAAAQBgCgAAAQAGBwAAAQAdAQAAAQAd
AQkADQgBABEADQgGABkADQgKACkADQgQADEADQgQADkADQgQAEEADQgQAEkADQgQAFEADQgQAFkA
DQgVAGEADQgVAGkADQgQAHEADQgQAHkADQgQAIEADQgaAJEADQggAKkADQgGALEADQgGALkADQgG
ANEADQgmAOkADQgQAAkBDQgGABEBDQgGAJkADQgGAKEADQgGAAwADQgGABQADQgGABwADQgGACQA
DQgGAAwADQFKABQADQFKABwADQFKACQADQFKAMEADQgGANkAcAFPANkAkQpXAPEADQhdAFEBwARl
AAEBDQgGAFkBzQdqAFkBGwpqABkBDQgGAGEBowpvABkB5wmIAGkBpAmOAHEBKAaUAHkBrASbAMEA
CwWfAIEBogejACEBDQgGACwADQgGAIkB/QmvAIkBWgK0ACEBtwG5ACEBCwWfACwA4QDAAIkBngrG
AJEBbQbNAJEBCAfUAMEAwgHaANkA5QDfALEBTgHpALkB8wfwAGkBIAoBACEBtwH9AMEBpwEDATEB
3gYHATEBMgGfADEB7wCfAHkBtgQNAcEAvQkSAcEAJgEXAckB/gAjATwAVgo6AUQArARKAEQAtgTA
AEQADQgGAAgAPABsAQgAQABxASkAqwCfAy4ACwAYAi4AEwAhAi4AGwBAAi4AIwBJAi4AKwB5Ai4A
MwB5Ai4AOwBJAi4AQwB/Ai4ASwB5Ai4AUwCWAi4AWwB5Ai4AYwCcAi4AawDGAi4AcwDTAkAAiwBx
AUAAgwAbA0MAewAkA0MAgwAbA0kAqwCwA2MAewAkA2MAgwAbA2kAqwDEA4AAiwBxAYMAkwBxAYMA
mwBxAYMAewAkA4kAqwDRA6AAiwBxAakAgwBAAsAAiwBxAckAgwBAAuAAiwBxAeMAuwBxAeMAUwB5
AukAswBxAQMBgwAbAwMBowA9AyMBgwAbAyMBWwB5AkACgwAbA0ACiwBxAWACgwAbA2ACiwBxAYAC
gwAbA4ACiwBxAaACgwAbA6ACiwBxAcACiwBxAeACiwBxAQADiwBxAQADgwAbAyADiwBxAUADiwBx
AUADgwAbA3IA9wAbAS4BBAABAAUABQAGAAcACQAIAAAA4gfwAQAAlgb1AQAAyAf6AQAAZQj/AQAA
kgcEAgAA7gEJAgAAyQQOAgAAEQETAgIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQALAAIACgAN
AAEACwANAAIADgAPAAIAGQARAC4ANQA8AEMAqAAgATMBQgFJAQSAAAABAAAAAAAAAAAAAAAAADQF
AAAEAAAAAAAAAAAAAABRAacAAAAAAAQAAAAAAAAAAAAAAFEBMQYAAAAACgAAAAAAAAAAAAAAWgHL
AAAAAAANAAAAAAAAAAAAAABjAV8FAAAAAA0AAAAAAAAAAAAAAGMBSwAAAAAAAAAAAAEAAABWCQAA
CAAEAAkABAAKAAcAAAAQABIAagAAABAALQBqAAAAAAAvAGoAkwApAZMATAEAAAAAAENvbnRleHRW
YWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAExpc3RgMQBJbnQzMgA8TW9kdWxlPgBT
eXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFu
Y2VfXwBDcmVhdGVfX0luc3RhbmNlX18AdmFsdWVfXwBQcm9qZWN0RGF0YQBtc2NvcmxpYgBTeXN0
ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMAQWRkAEdldE1ldGhv
ZABnZXRfU3RhY2tUcmFjZQBDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UAaW5zdGFuY2UA
R2V0SGFzaENvZGUAZ2V0X01lc3NhZ2UAU2V0RXJyb3JNZXNzYWdlAEludm9rZQBWYXJpYWJsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUAZ2V0X0NvbW1hbmRMaW5lAEFwcGVuZExpbmUAR2V0VHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAE1ldGhvZEJhc2UAVlNUQVJUU2Ny
aXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0
dHJpYnV0ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRl
AEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVW
ZXJzaW9uQXR0cmlidXRlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3Jp
cHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0
cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUA
c2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBjb25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAHRlbXBsYXRlRmlsZVBhdGgAb3V0
cHV0RmlsZVBhdGgAU1RfYTI3ODQ3NDAwOThhNDVjODljNjcyZDYxZGZiODZkM2QudmJwcm9qAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNr
cy5TY3JpcHRUYXNrAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFNj
cmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9hMjc4NDc0MDA5OGE0NWM4
OWM2NzJkNjFkZmI4NmQzZC52YnByb2ouZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAEJvb2xlYW4A
U3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2lnbgBTY3JpcHRNYWluAENyZWF0ZURvbWFpbgBBcHBE
b21haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24A
U3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X0lubmVyRXhjZXB0aW9u
AE1ldGhvZEluZm8AQ3VsdHVyZUluZm8AQ3JlYXRlSW5zdGFuY2VBbmRVbndyYXAAbV9BcHBPYmpl
Y3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIA
bV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAU3RyaW5nQnVpbGRlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAFRvSW50ZWdlcgBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBnZXRfVXNlcgBFbnRlcgBn
ZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAFNldFByb2plY3RFcnJvcgBBY3RpdmF0b3IA
LmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNl
cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTI3ODQ3NDAwOThhNDVjODljNjcy
ZDYxZGZiODZkM2QudmJwcm9qLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF9hMjc4NDc0MDA5
OGE0NWM4OWM2NzJkNjFkZmI4NmQzZC52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBnZXRfVmFyaWFibGVzAE15U2V0dGluZ3MARXF1YWxzAENvbnZlcnNpb25zAFJ1bnRp
bWVIZWxwZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBtX1N5bmNPYmpl
Y3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tSZXN1bHQARW52aXJvbm1lbnQAY29tbWFuZFRpbWVv
dXQAU3lzdGVtLlRleHQAbV9Db250ZXh0AGV4AFNUX2EyNzg0NzQwMDk4YTQ1Yzg5YzY3MmQ2MWRm
Yjg2ZDNkLnZicHJvai5NeQBnZXRfQXNzZW1ibHkAQ29weQBFbXB0eQAAAAAAMU0AeQAuAFIAZQBz
AG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAhQwBvAG4AbgBlAGMAdABpAG8A
bgBTAHQAcgBpAG4AZwAAHUMAbwBtAG0AYQBuAGQAVABpAG0AZQBvAHUAdAAAIVQAZQBtAHAAbABh
AHQAZQBGAGkAbABlAFAAYQB0AGgAAB1PAHUAdABwAHUAdABGAGkAbABlAFAAYQB0AGgAABlXAEkA
VABIACAAWQAxACAAQQBTACAAKAAAFSAAIAAgACAAUwBFAEwARQBDAFQAAC8gACAAIAAgACAAIAAg
ACAAUwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwAAE8gACAAIAAgACAAIAAgACAAUwBVAE0A
KABJAFMATgBVAEwATAAoAFkAMQAuAFEATgAsACAAMAApACkAIABBAFMAIABRAE4AXwBZADEALAAA
UyAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABMACgAWQAxAC4ATgBRAE4ALAAgADAA
KQApACAAQQBTACAATgBRAE4AXwBZADEALAAATyAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBO
AFUATABMACgAWQAxAC4AUQBTACwAIAAwACkAKQAgAEEAUwAgAFEAUwBfAFkAMQAsAABTIAAgACAA
IAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADEALgBOAFEAUwAsACAAMAApACkAIABB
AFMAIABOAFEAUwBfAFkAMQAsAABPIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwA
KABZADEALgBQAFAALAAgADAAKQApACAAQQBTACAAUABQAF8AWQAxACwAAFMgACAAIAAgACAAIAAg
ACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAuAFAAUABOACwAIAAwACkAKQAgAEEAUwAgAFAA
UABOAF8AWQAxACwAAFMgACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAu
AFAAUABTACwAIAAwACkAKQAgAEEAUwAgAFAAUABTAF8AWQAxACwAAFMgACAAIAAgACAAIAAgACAA
UwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAuAFAAUABDACwAIAAwACkAKQAgAEEAUwAgAFAAUABD
AF8AWQAxACwAAF8gACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAuAFAA
UAAyADQANwA1ACwAIAAwACkAKQAgAEEAUwAgAFAAUAAyADQANwA1AF8AWQAxACwAAICJIAAgACAA
IAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADEALgBQAFAAQwAsACAAMAApACkAIAAt
ACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAuAFAAUAAyADQANwA1ACwAIAAwACkAKQAgAEEA
UwAgAFIAQwBfAFkAMQAsAAFPIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZ
ADEALgBQAEEALAAgADAAKQApACAAQQBTACAAUABBAF8AWQAxACwAAE0gACAAIAAgACAAIAAgACAA
UwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAuAFAAUgAsACAAMAApACkAIABBAFMAIABQAFIAXwBZ
ADEAABEgACAAIAAgAEYAUgBPAE0AACsgACAAIAAgACAAIAAgACAAUwB1AHAAcABsAGkAZQByACAA
QQBTACAAUwAAgaMgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEUARgBUACAATwBVAFQARQBSACAA
SgBPAEkATgAgAFQAbQBwAFMAdQBwAHAAbABpAGUAcgBQAGUAcgBmAG8AcgBtAGEAbgBjAGUAIABB
AFMAIABZADEAIABPAE4AIABZADEALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAD0AIABTAC4A
UwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABBAE4ARAAgAFkAMQAuAEMAcgBlAGEAdABlAEQAYQB0
AGUAIABCAEUAVABXAEUARQBOACAARABBAFQARQBBAEQARAAoAFkARQBBAFIALAAgAC0AMQAsACAA
QwBPAE4AVgBFAFIAVAAoAGQAYQB0AGUALAAgAEcARQBUAEQAQQBUAEUAKAApACkAKQAgAEEATgBE
ACAARABBAFQARQBBAEQARAAoAEQAQQBZACwAIAAtADEALAAgAEMATwBOAFYARQBSAFQAKABkAGEA
dABlACwAIABHAEUAVABEAEEAVABFACgAKQApACkAARkgACAAIAAgAEcAUgBPAFUAUAAgAEIAWQAA
LSAAIAAgACAAIAAgACAAIABTAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAAAUpACwAAA9ZADUA
IABBAFMAIAAoAABPIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUALgBR
AE4ALAAgADAAKQApACAAQQBTACAAUQBOAF8AWQA1ACwAAFMgACAAIAAgACAAIAAgACAAUwBVAE0A
KABJAFMATgBVAEwATAAoAFkANQAuAE4AUQBOACwAIAAwACkAKQAgAEEAUwAgAE4AUQBOAF8AWQA1
ACwAAE8gACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkANQAuAFEAUwAsACAA
MAApACkAIABBAFMAIABRAFMAXwBZADUALAAAUyAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBO
AFUATABMACgAWQA1AC4ATgBRAFMALAAgADAAKQApACAAQQBTACAATgBRAFMAXwBZADUALAAATyAA
IAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABMACgAWQA1AC4AUABQACwAIAAwACkAKQAg
AEEAUwAgAFAAUABfAFkANQAsAABTIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwA
KABZADUALgBQAFAATgAsACAAMAApACkAIABBAFMAIABQAFAATgBfAFkANQAsAABTIAAgACAAIAAg
ACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUALgBQAFAAUwAsACAAMAApACkAIABBAFMA
IABQAFAAUwBfAFkANQAsAABTIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZ
ADUALgBQAFAAQwAsACAAMAApACkAIABBAFMAIABQAFAAQwBfAFkANQAsAABfIAAgACAAIAAgACAA
IAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUALgBQAFAAMgA0ADcANQAsACAAMAApACkAIABB
AFMAIABQAFAAMgA0ADcANQBfAFkANQAsAACAiSAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBO
AFUATABMACgAWQA1AC4AUABQAEMALAAgADAAKQApACAALQAgAFMAVQBNACgASQBTAE4AVQBMAEwA
KABZADUALgBQAFAAMgA0ADcANQAsACAAMAApACkAIABBAFMAIABSAEMAXwBZADUALAABTyAAIAAg
ACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABMACgAWQA1AC4AUABBACwAIAAwACkAKQAgAEEA
UwAgAFAAQQBfAFkANQAsAABNIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZ
ADUALgBQAFIALAAgADAAKQApACAAQQBTACAAUABSAF8AWQA1AACBoyAAIAAgACAAIAAgACAAIAAg
ACAAIAAgAEwARQBGAFQAIABPAFUAVABFAFIAIABKAE8ASQBOACAAVABtAHAAUwB1AHAAcABsAGkA
ZQByAFAAZQByAGYAbwByAG0AYQBuAGMAZQAgAEEAUwAgAFkANQAgAE8ATgAgAFkANQAuAFMAdQBw
AHAAbABpAGUAcgBDAG8AZABlACAAPQAgAFMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEA
TgBEACAAWQA1AC4AQwByAGUAYQB0AGUARABhAHQAZQAgAEIARQBUAFcARQBFAE4AIABEAEEAVABF
AEEARABEACgAWQBFAEEAUgAsACAALQA1ACwAIABDAE8ATgBWAEUAUgBUACgAZABhAHQAZQAsACAA
RwBFAFQARABBAFQARQAoACkAKQApACAAQQBOAEQAIABEAEEAVABFAEEARABEACgARABBAFkALAAg
AC0AMQAsACAAQwBPAE4AVgBFAFIAVAAoAGQAYQB0AGUALAAgAEcARQBUAEQAQQBUAEUAKAApACkA
KQABAykAAA1TAEUATABFAEMAVAAASyAAIAAgACAAUwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABl
ACAAQQBTACAAWwBTAHUAcABsAGkAZQByACAAQwBvAGQAZQBdACwAAF0gACAAIAAgAFMALgBSADMA
UwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABBAFMAIABbAFQAQwBJAC0ASgAgAFMAdQBwAHAAbABp
AGUAcgAgAEMAbwBkAGUAXQAsAAGAqyAAIAAgACAATABUAFIASQBNACgAUgBUAFIASQBNACgASQBT
AE4AVQBMAEwAKABTAC4ATgBhAG0AZQAzACwAIAAnACcAKQAgACsAIAAnACAAJwAgACsAIABJAFMA
TgBVAEwATAAoAFMALgBOAGEAbQBlADQALAAgACcAJwApACkAKQAgAEEAUwAgAFsAUwB1AHAAcABs
AGkAZQByACAATgBhAG0AZQBdACwAATEgACAAIAAgAEMALgBOAGEAbQBlACAAQQBTACAAWwBDAG8A
dQBuAHQAcgB5AF0ALAAAgQ8gACAAIAAgAEMAQQBTAEUAIABXAEgARQBOACAAUABBAF8AWQA1ACAA
KwAgAFAAQQBfAFkANQAgAD0AIAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAAQwBPAE4AVgBF
AFIAVAAoAGQAZQBjAGkAbQBhAGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAoAFAAQQBfAFkA
NQAgAC8AIAAoAFAAQQBfAFkANQAgACsAIABQAFIAXwBZADUAKQAsACAAMgApACkAIABFAE4ARAAg
AEEAUwAgAFsAUABhAHMAcwAgAHIAYQB0AGUAIAAoACUAKQAgAC0AIABRAHUAYQBsAGkAdAB5AF0A
LAABgYsgACAAIAAgAEMAQQBTAEUAIABXAEgARQBOACAAUQBOAF8AWQA1ACAAKwAgAFEAUwBfAFkA
NQAgAC0AIAAoAE4AUQBOAF8AWQA1ACAAKwAgAE4AUQBTAF8AWQA1ACkAIAA9ACAAMAAgAFQASABF
AE4AIAAwACAARQBMAFMARQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4ACwA
MgApACwAIABSAE8AVQBOAEQAKAAoAFAAUABOAF8AWQA1ACAAKwAgAFAAUABTAF8AWQA1ACkAIAAv
ACAAKABRAE4AXwBZADUAIAArACAAUQBTAF8AWQA1ACAALQAgACgATgBRAE4AXwBZADUAIAArACAA
TgBRAFMAXwBZADUAKQApACwAIAAyACkAKQAgAEUATgBEACAAQQBTACAAWwBCAHUAeQBpAG4AZwAg
AHIAYQB0AGUAIAAoACUAKQAgAC0AIABDAG8AbQBwAGUAdABpAHQAaQB2AGUAbgBlAHMAcwBdACwA
AYFBIAAgACAAIABDAEEAUwBFACAAVwBIAEUATgAgAFEAUwBfAFkANQAgAC0AIABOAFEAUwBfAFkA
NQAgAD0AIAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAAQwBPAE4AVgBFAFIAVAAoAGQAZQBj
AGkAbQBhAGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAoAFAAUABTAF8AWQA1ACAALwAgACgA
UQBTAF8AWQA1ACAALQAgAE4AUQBTAF8AWQA1ACkALAAgADIAKQApACAARQBOAEQAIABBAFMAIABb
AEIAdQB5AGkAbgBnACAAcgBhAHQAZQAgACgAJQApACAAKABmAG8AcgAgAFMAdABvAGMAawAsACAA
ZgBvAHIAIABSAGEAdwAgAE0AYQB0AGUAcgBpAGEAbAApAF0ALAABgRkgACAAIAAgAEMAQQBTAEUA
IABXAEgARQBOACAAUQBOAF8AWQA1ACAALQAgAE4AUQBOAF8AWQA1ACAAPQAgADAAIABUAEgARQBO
ACAAMAAgAEUATABTAEUAIABDAE8ATgBWAEUAUgBUACgAZABlAGMAaQBtAGEAbAAoADEAOAAsADIA
KQAsACAAUgBPAFUATgBEACgAUABQAE4AXwBZADUAIAAvACAAKABRAE4AXwBZADUAIAAtACAATgBR
AE4AXwBZADUAKQAsACAAMgApACkAIABFAE4ARAAgAEEAUwAgAFsAQgB1AHkAaQBuAGcAIAByAGEA
dABlACAAKAAlACkAIAAoAGYAbwByACAATgBlAHcAKQBdACwAAYDtIAAgACAAIABDAEEAUwBFACAA
VwBIAEUATgAgAFAAUABfAFkANQAgAD0AIAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAAQwBP
AE4AVgBFAFIAVAAoAGQAZQBjAGkAbQBhAGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAoAFIA
QwBfAFkANQAgAC8AIABQAFAAXwBZADUALAAgADIAKQApACAARQBOAEQAIABBAFMAIABbAEMAYQBu
AGMAZQBsACAAcgBhAHQAZQAgACgAJQApACAALQAgAEMAYQBuAGMAZQBsAF0ALAABUyAAIAAgACAA
QwBPAE4AVgBFAFIAVAAoAGkAbgB0ACwAIABRAE4AXwBZADUAIAArACAAUQBTAF8AWQA1ACkAIABB
AFMAIABbAFIARgBRAF0ALAAAgJsgACAAIAAgAEMATwBOAFYARQBSAFQAKABpAG4AdAAsACAAKABR
AE4AXwBZADUAIAArACAAUQBTAF8AWQA1ACkAIAAtACAAKABOAFEATgBfAFkANQAgACsAIABOAFEA
UwBfAFkANQApACkAIABBAFMAIABbAFIARgBRACAAKABQAHIAaQBjAGUAIABlAHgAaQBzAHQAKQBd
ACwAAV0gACAAIAAgAEMATwBOAFYARQBSAFQAKABpAG4AdAAsACAAUABQAE4AXwBZADUAIAArACAA
UABQAFMAXwBZADUAKQAgAEEAUwAgAFsAUABhAHIALQBQAE8AXQAsAAGBIyAAIAAgACAAQwBBAFMA
RQAgAFcASABFAE4AIABQAEEAXwBZADEAIAArACAAUABBAF8AWQAxACAAPQAgADAAIABUAEgARQBO
ACAAMAAgAEUATABTAEUAIABDAE8ATgBWAEUAUgBUACgAZABlAGMAaQBtAGEAbAAoADEAOAAsADIA
KQAsACAAUgBPAFUATgBEACgAUABBAF8AWQAxACAALwAgACgAUABBAF8AWQAxACAAKwAgAFAAUgBf
AFkAMQApACwAIAAyACkAKQAgAEUATgBEACAAQQBTACAAWwBQAGEAcwBzACAAcgBhAHQAZQAgACgA
JQApACAALQAgAFEAdQBhAGwAaQB0AHkAIAAoAGMAdQByAHIAZQBuAHQAKQBdACwAAYFPIAAgACAA
IABDAEEAUwBFACAAVwBIAEUATgAgAFEATgBfAFkAMQAgACsAIABRAFMAXwBZADEAIAA9ACAAMAAg
AFQASABFAE4AIAAwACAARQBMAFMARQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgA
MQA4ACwAMgApACwAIABSAE8AVQBOAEQAKAAoAFAAUABOAF8AWQAxACAAKwAgAFAAUABTAF8AWQAx
ACkAIAAvACAAKABRAE4AXwBZADEAIAArACAAUQBTAF8AWQAxACkALAAgADIAKQApACAARQBOAEQA
IABBAFMAIABbAEIAdQB5AGkAbgBnACAAcgBhAHQAZQAgACgAJQApACAALQAgAEMAbwBtAHAAZQB0
AGkAdABpAHYAZQBuAGUAcwBzACAAKABjAHUAcgByAGUAbgB0ACkAXQAsAAGBLSAAIAAgACAAQwBB
AFMARQAgAFcASABFAE4AIABRAFMAXwBZADEAIAA9ACAAMAAgAFQASABFAE4AIAAwACAARQBMAFMA
RQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4ACwAMgApACwAIABSAE8AVQBO
AEQAKABQAFAAUwBfAFkAMQAgAC8AIABRAFMAXwBZADEALAAgADIAKQApACAARQBOAEQAIABBAFMA
IABbAEIAdQB5AGkAbgBnACAAcgBhAHQAZQAgACgAJQApACAAKABmAG8AcgAgAFMAdABvAGMAawAs
ACAAZgBvAHIAIABSAGEAdwAgAE0AYQB0AGUAcgBpAGEAbAApACAAKABjAHUAcgByAGUAbgB0ACkA
XQAsAACBBSAAIAAgACAAQwBBAFMARQAgAFcASABFAE4AIABRAE4AXwBZADEAIAA9ACAAMAAgAFQA
SABFAE4AIAAwACAARQBMAFMARQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4
ACwAMgApACwAIABSAE8AVQBOAEQAKABQAFAATgBfAFkAMQAgAC8AIABRAE4AXwBZADEALAAgADIA
KQApACAARQBOAEQAIABBAFMAIABbAEIAdQB5AGkAbgBnACAAcgBhAHQAZQAgACgAJQApACAAKABm
AG8AcgAgAE4AZQB3ACkAIAAoAGMAdQByAHIAZQBuAHQAKQBdACwAAIEBIAAgACAAIABDAEEAUwBF
ACAAVwBIAEUATgAgAFAAUABfAFkAMQAgAD0AIAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAA
QwBPAE4AVgBFAFIAVAAoAGQAZQBjAGkAbQBhAGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAo
AFIAQwBfAFkAMQAgAC8AIABQAFAAXwBZADEALAAgADIAKQApACAARQBOAEQAIABBAFMAIABbAEMA
YQBuAGMAZQBsACAAcgBhAHQAZQAgACgAJQApACAALQAgAEMAYQBuAGMAZQBsACAAKABjAHUAcgBy
AGUAbgB0ACkAXQAsAAFnIAAgACAAIABDAE8ATgBWAEUAUgBUACgAaQBuAHQALAAgAFEATgBfAFkA
MQAgACsAIABRAFMAXwBZADEAKQAgAEEAUwAgAFsAUgBGAFEAIAAoAGMAdQByAHIAZQBuAHQAKQBd
ACwAAICtIAAgACAAIABDAE8ATgBWAEUAUgBUACgAaQBuAHQALAAgACgAUQBOAF8AWQAxACAAKwAg
AFEAUwBfAFkAMQApACAALQAgACgATgBRAE4AXwBZADEAIAArACAATgBRAFMAXwBZADEAKQApACAA
QQBTACAAWwBSAEYAUQAgACgAUAByAGkAYwBlACAAZQB4AGkAcwB0ACwAIABjAHUAcgByAGUAbgB0
ACkAXQAsAAFxIAAgACAAIABDAE8ATgBWAEUAUgBUACgAaQBuAHQALAAgAFAAUABOAF8AWQAxACAA
KwAgAFAAUABTAF8AWQAxACkAIABBAFMAIABbAFAAYQByAC0AUABPACAAKABjAHUAcgByAGUAbgB0
ACkAXQAsAAE1IAAgACAAIABQAFAAQwBfAFkANQAgAEEAUwAgAFsAUABPACAAQwBhAG4AYwBlAGwA
XQAsAAA3IAAgACAAIABQAFAAMgA0ADcANQBfAFkANQAgAEEAUwAgAFsAMgA0ADcANQAgAFAATwBd
ACwAAEkgACAAIAAgAFAAUABDAF8AWQAxACAAQQBTACAAWwBQAE8AIABDAGEAbgBjAGUAbAAgACgA
YwB1AHIAcgBlAG4AdAApAF0ALAAASSAAIAAgACAAUABQADIANAA3ADUAXwBZADEAIABBAFMAIABb
ADIANAA3ADUAIABQAE8AIAAoAGMAdQByAHIAZQBuAHQAKQBdAAAJRgBSAE8ATQAADyAAIAAgACAA
WQAxACwAAA8gACAAIAAgAFkANQAsAAAnIAAgACAAIABzAF8AQwBvAHUAbgB0AHIAeQAgAEEAUwAg
AEMALAAAIyAAIAAgACAAUwB1AHAAcABsAGkAZQByACAAQQBTACAAUwAAC1cASABFAFIARQAAQyAA
IAAgACAAUwAuAEMAbwB1AG4AdAByAHkAQwBvAGQAZQAgAD0AIABDAC4AQwBvAHUAbgB0AHIAeQBD
AG8AZABlAABRIAAgACAAIABBAE4ARAAgAFMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAD0A
IABZADUALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAAUyAAIAAgACAAQQBOAEQAIABZADUALgBT
AHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAD0AIABZADEALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQA
ZQAAEU8AUgBEAEUAUgAgAEIAWQAAJSAAIAAgACAAUwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABl
AAANUwBoAGUAZQB0ADEAABFNAHkARABvAG0AYQBpAG4AABVUAEMASQBPAHAAZQBuAFgATQBMAAAr
VABDAEkATwBwAGUAbgBYAE0ATAAuAFQAQwBJAE8AcABlAG4AWABNAEwAABtDAHIAZQBhAHQAZQBP
AHAAZQBuAFgATQBMAABdQwBvAG0AcABhAG4AeQAgAFAAZQByAGYAbwByAG0AYQBuAGMAZQAgAMcw
/DC/MG4w+lGbUmswSjBEMGYwATC3MLkwxjDgMKgw6TD8MEwwenYfdVcwfjBXMF8wAjABC59bTIjR
MLkwGv8BE6gw6TD8MOEwwzC7MPwwuDAa/wEZRQByAHIAbwByAE0AZQBzAHMAYQBnAGUAAKjxFJCS
gmZPsdmUXfDsLNoABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEODg4O
BhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgKEFIAASgKUHIAIBDhKApQQA
ARwcBAABARwCBg4VBwUSgJEVEoCVAQ4VEoCVAQ4cEoCZBSAAEoC1BSAAEoC5BiABEoC9HAMgABwD
IAAOBAABCA4GFRKAlQEOBAABAg4EAAEBDgYgARKAkQ4FIAEBEwAGAAMBDg4CBgABEoDJDgUgAhwO
DgQgABJtCSACEoDVDh0SbQYgAhwcHRwGAAEBEoCZBQcBEoCRBSAAEoCRAwAADgUgABKAmQQgAQEc
BCABAhwDIAAIBAcBHgACHgAFEAEAHgAECgEeAAQHARMABhUSJAETAAcGFRJxARMABhUScQETAAIT
AAQKARMACLd6XFYZNOCJCLA/X38R1Qo6CImEXc2AgMyRBAAAAAAEAQAAAAcGFRIkARIMBwYVEiQB
EggHBhUSJAESZQcGFRIkARIgAwYSeQMGEn0DBhIYAgYcAgYIAwYRKAMAAAEEAAASDAQAABIIBAAA
EmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAASGAYgAQESgJkHEAEBHgAeAAcwAQEBEB4ABAgAEgwE
CAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAvAQAqU1RfYTI3ODQ3NDAwOThhNDVjODljNjcyZDYx
ZGZiODZkM2QudmJwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAUBAAEAACkBACQy
ZjEyMjA1ZC04YTFlLTQ2NmQtYjFlZS02MGU0M2Q4YzNkNTIAAAwBAAcxLjAuMC4wAABHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQIAQABAAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIu
U2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5j
ZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNh
dGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEhi
AAAAAAAAAAAAAGJiAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUYgAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAA
AAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAAAsBAAAAAAAAAAAAAAsBDQA
AABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAA
AAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYA
bwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEjAMAAAEAUwB0AHIAaQBu
AGcARgBpAGwAZQBJAG4AZgBvAAAAaAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0A
bQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAH4AKwAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBhADIANwA4ADQANwA0ADAA
MAA5ADgAYQA0ADUAYwA4ADkAYwA2ADcAMgBkADYAMQBkAGYAYgA4ADYAZAAzAGQALgB2AGIAcABy
AG8AagAAAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
fgAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBhADIANwA4ADQANwA0ADAAMAA5
ADgAYQA0ADUAYwA4ADkAYwA2ADcAMgBkADYAMQBkAGYAYgA4ADYAZAAzAGQALgB2AGIAcAByAG8A
agAuAGQAbABsAAAAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAIYALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AFQAXwBhADIANwA4ADQANwA0ADAAMAA5ADgAYQA0ADUAYwA4ADkAYwA2ADcAMgBkADYAMQBkAGYA
YgA4ADYAZAAzAGQALgB2AGIAcAByAG8AagAuAGQAbABsAAAAAAB2ACsAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGEAMgA3ADgANAA3ADQAMAAwADkAOABhADQANQBjADgAOQBjADYA
NwAyAGQANgAxAGQAZgBiADgANgBkADMAZAAuAHYAYgBwAHIAbwBqAAAAAAA0AAgAAQBQAHIAbwBk
AHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABgAAAMAAAAdDIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\シーケンス コンテナー\仕入先ランクデータ作成"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="スクリプト タスク"
          DTS:Disabled="True"
          DTS:DTSID="{7B89F675-93EB-4988-9862-32C39B2B8808}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="仕入先ランクデータ作成"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a6cdc6d2450c4d64b1d121862b4b2551"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::ConnectionString, User::CommandTimeout"
              ReadWriteVariables="User::ErrorMessage">
              <ProjectItem
                Name="\my project\settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="\my project\assemblyinfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2016")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("d92ee29a-f4ab-4492-af10-ce4d7e9f707f")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_a6cdc6d2450c4d64b1d121862b4b2551</msb:CodeName>
		<msb:DisplayName>st_a6cdc6d2450c4d64b1d121862b4b2551</msb:DisplayName>
		<msb:ProjectId>{D8C5AC5C-D1EE-4EB3-877B-51A130BAD323}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_a6cdc6d2450c4d64b1d121862b4b2551.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
	

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts property. Connections, variables, events,
	' and logging features are available as members of the Dts property as shown in the following examples.
	'
	' To reference a variable, call Dts.Variables("MyCaseSensitiveVariableName").Value
	' To post a log entry, call Dts.Log("This is my log text", 999, Nothing)
	' To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, True)
	'
	' To use the connections collection use something like the following:
	' ConnectionManager cm = Dts.Connections.Add("OLEDB")
	' cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;"
	'
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Help, press F1.

	Public Sub Main()
		'
        ' �����������܂��I
		'
		Dts.TaskResult = ScriptResults.Success
	End Sub

End Class]]></ProjectItem>
              <ProjectItem
                Name="\my project\resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_a6cdc6d2450c4d64b1d121862b4b2551.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj</RootNamespace>
    <AssemblyName>ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{EA0B67F8-C287-4283-B7EA-5A11FC2D28AB}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="\my project\settings.designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="\st_a6cdc6d2450c4d64b1d121862b4b2551.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj</RootNamespace>
    <AssemblyName>ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{EA0B67F8-C287-4283-B7EA-5A11FC2D28AB}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="\scriptmain.vb"
                Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
	

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts property. Connections, variables, events,
	' and logging features are available as members of the Dts property as shown in the following examples.
	'
	' To reference a variable, call Dts.Variables("MyCaseSensitiveVariableName").Value
	' To post a log entry, call Dts.Log("This is my log text", 999, Nothing)
	' To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, True)
	'
	' To use the connections collection use something like the following:
	' ConnectionManager cm = Dts.Connections.Add("OLEDB")
	' cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;"
	'
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Help, press F1.

	Public Sub Main()
		'
        ' �����������܂��I
		'
		Dts.TaskResult = ScriptResults.Success
	End Sub

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2016")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("d92ee29a-f4ab-4492-af10-ce4d7e9f707f")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="\my project\resources.designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO5uoVgAAAAAAAAAAOAAIiALAVAAABgAAAAIAAAAAAAAVjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQ3AABPAAAAAEAAAIgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
NwAAAAAAAEgAAAACAAUAKCIAACQUAAABAAAAAAAAAEw2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKjYCKCsAAAoWbywAAAoqNgIDKCYA
AAooLQAACioeAiguAAAKKi7QCAAAAigjAAAKKh4CKC8AAAoqEzABABQAAAABAAARAowFAAAbLQgo
AQAAKworAgIKBioiA/4VBQAAGyoAAAATMAIAKAAAAAIAABECezEAAApvMgAACgoGjAgAABstEigC
AAArCgJ7MQAACgZvMwAACgYqSgIoIgAACgJzNAAACn0xAAAKKgBCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAAB4BwAAI34AAOQHAACsCAAAI1N0cmluZ3MAAAAAkBAAADQAAAAjVVMA
xBAAABAAAAAjR1VJRAAAANQQAABQAwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJDwAAAPoBMwAWAAAB
AAAAKwAAAAoAAAAMAAAAGQAAAAQAAAA0AAAAAgAAADcAAAACAAAABAAAAAgAAAAJAAAACAAAAAEA
AAAEAAAAAQAAAAMAAAADAAAAAgAAAAAA1QQBAAAAAAAGAOkCNwcGAI4DNwcGAMABeAYPAOsHAAAG
AAECgAUGAMwCgAUGAHUDgAUGAAkDgAUGACIDgAUGAEgCgAUGAD0DBAUGAO0B8QYGAGkB8QYGAJQC
gAUGAGMC6AMKAIwBEgYKAFQBvwQKANQBvwQOACwBxwYOAEgGiwYGAHwCeAYOABgCEAcOADACbgAG
AD8IBAUOAC4GxwYOALECbgAGAN8ABAUOAAEAgwQKAHcBEAUGAAIGVwcGAJIFawUKADwBVgUGAKMB
eAYSAFMDWgQSABABWgQGAAsEBAUGAAsFBAUGALgABAUGAKAIgAUGAAwINwcGAHAG1wMSAK0EWgQG
AFkGBAUAAAAAKwAAAAAAAQABAAAAAABIBW4ITQABAAEAAAAAAEYGbghRAAEAAgAAARAARghuCGEA
AQADAAAAAACgB2gHYQAFAAgAAAEQAPoHEASBAAcADAABAAAALQUQBI0ACQAPAAUBAAC5BgAAYQAJ
ABEABQEAABAAAABhAAkAGAACAQAAKwgAAJUACgAaADEAxwXjADEAngXrADEAsgXzADEA4AX7ABEA
UQYDAREABAEHAREArAMLAREAOQgPASEAZAihAAYGXQASAVaAGwgVAVaA5AAVAVAgAAAAAAYYYwYG
AAEAWCAAAAAABhhjBgYAAQBgIAAAAAARGGkGGQEBAIogAAAAABMIOQYdAQEAliAAAAAAEwg4BSIB
AQCiIAAAAAATCCoGJwEBAK4gAAAAABMIqQYsAQEAuiAAAAAAAxhjBgYAAQDCIAAAAAAWCP4FMQEB
AO4gAAAAABYI7AA2AQEA9SAAAAAAFgj4ADsBAQD9IAAAAAARGGkGGQECAA4hAAAAAAYYYwYGAAIA
GCEAAAAAFgi0A0EBAgB0IQAAAAAGGGMGBgACAHwhAAAAAAYAMwUGAAIAiiEAAAAAxgIFCHUAAgCY
IQAAAADGAqwAegADAKAhAAAAAIMA3ABGAQMArCEAAAAAxgICBH4AAwC0IQAAAAARAEoASwEDANQh
AAAAAAEANgBTAQQAuiAAAAAABhhjBgYABQDgIQAAAAADCJMASgAFABQiAAAAAAYYYwYGAAUAAAAB
ANEDAAABAJwFAAABAKMAAAABAKMACQBjBgEAEQBjBgYAGQBjBgoAKQBjBhAAMQBjBhAAOQBjBhAA
QQBjBhAASQBjBhAAUQBjBhAAWQBjBhUAYQBjBhUAaQBjBhAAcQBjBhAAeQBjBhAAgQBjBhoAkQBj
BiAAqQBjBgYAsQBjBgYAuQBjBgYA0QBjBiYA6QBjBhAACQFjBgYAEQFjBgYAmQBjBgYAoQBjBgYA
DABjBgYAFABjBgYAHABjBgYAJABjBgYADACTAEoAFACTAEoAHACTAEoAJACTAEoAwQBjBgYA2QDK
AE8A2QCcCFcA8QBjBl0AQQHIA2UAAQFjBgYASQEzBmoASQFQCGoAGQFjBgYAGQEjCG8AUQFVCAEA
wQAFCHUAwQCsAHoAwQACBH4AWQGEAIoANABkCKEAPAC0A0oAPAC+A7gAPABjBgYACAAsANkACAAw
AN4AKQCrAAoDLgALAIMBLgATAIwBLgAbAKsBLgAjALQBLgArAOQBLgAzAOQBLgA7ALQBLgBDAOoB
LgBLAOQBLgBTAAECLgBbAOQBLgBjAAcCLgBrADECLgBzAD4CQACLAN4AQACDAIYCQwB7AI8CQwCD
AIYCSQCrABsDYwB7AI8CYwCDAIYCaQCrAC8DgACLAN4AgwCTAN4AgwCbAN4AgwB7AI8CiQCrADwD
oACLAN4AqQCDAKsBwACLAN4AyQCDAKsB4ACLAN4A4wC7AN4A4wBTAOQB6QCzAN4AAwGDAIYCAwGj
AKgCIwGDAIYCIwFbAOQBIAKDAIYCIAKLAN4AQAKDAIYCQAKLAN4AYAKDAIYCYAKLAN4AgAKDAIYC
gAKLAN4AoAKLAN4AwAKLAN4A4AKLAN4A4AKDAIYCAAOLAN4AIAOLAN4AIAODAIYCggCVAAQAAQAF
AAUABgAHAAkACAAAAEgGWwEAAEoFYAEAAC4GZQEAALsGagEAAAIGbwEAAAgBdAEAANEDeQEAAJcA
fgECAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQABAAsADQACAA4ADwACABgAEQAu
ADUAPABDAIcAmgCpALAABIAAAAEAAAAAAAAAAAAAAAAAEAQAAAQAAAAAAAAAAAAAAL4AZQAAAAAA
BAAAAAAAAAAAAAAAvgAEBQAAAAAKAAAAAAAAAAAAAADHAG4AAAAAAA0AAAAAAAAAAAAAANAAOwQA
AAAAAAAAAAEAAACsBwAACAAEAAkABAAKAAcAAAAQABIANAAAABAAKwA0AAAAAAAtADQAYQCQAGEA
swAAAAAAAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxADxNb2R1bGU+
AFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVfX0luc3RhbmNlX18AdmFsdWVfXwBtc2Nvcmxp
YgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGlu
c3RhbmNlAEdldEhhc2hDb2RlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEdl
dFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1
dGUAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRy
aWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRl
TW9kdWxlTmFtZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lv
bkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9W
YWx1ZQBHZXRPYmplY3RWYWx1ZQBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAVG9TdHJpbmcATWF0aABTVF9hNmNkYzZkMjQ1MGM0ZDY0YjFkMTIxODYyYjRiMjU1MS52
YnByb2oATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50
ZXJuYWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2E2Y2RjNmQy
NDUwYzRkNjRiMWQxMjE4NjJiNGIyNTUxLnZicHJvai5kbGwAU3lzdGVtAEVudW0AU3lzdGVtLkNv
bXBvbmVudE1vZGVsLkRlc2lnbgBTY3JpcHRNYWluAGdldF9BcHBsaWNhdGlvbgBNeUFwcGxpY2F0
aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAEN1bHR1cmVJbmZvAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlk
ZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVy
AGdldF9SZXNvdXJjZU1hbmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50
ZXIAZ2V0X0NvbXB1dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IALmN0b3IALmNjdG9y
AE1vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2Vz
AGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBs
aWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQu
VmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTZjZGM2ZDI0NTBjNGQ2NGIxZDEyMTg2MmI0YjI1NTEu
dmJwcm9qLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF9hNmNkYzZkMjQ1MGM0ZDY0YjFkMTIx
ODYyYjRiMjU1MS52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBNeVNl
dHRpbmdzAEVxdWFscwBSdW50aW1lSGVscGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBtX1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tSZXN1bHQAbV9Db250ZXh0AFNU
X2E2Y2RjNmQyNDUwYzRkNjRiMWQxMjE4NjJiNGIyNTUxLnZicHJvai5NeQBnZXRfQXNzZW1ibHkA
AAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAAAw1
bv32vuJClQWAF7xgSxAABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEO
Dg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgJkFIAASgJ0HIAIBDhKA
nQQAARwcBAABARwFIAASgKkEIAECHAMgAAgDIAAOBAcBHgACHgAFEAEAHgAECgEeAAQHARMABhUS
JAETAAcGFRJxARMABhUScQETAAITAAQKARMABSABARMACLd6XFYZNOCJCLA/X38R1Qo6CImEXc2A
gMyRBAAAAAAEAQAAAAcGFRIkARIMBwYVEiQBEggHBhUSJAESZQcGFRIkARIgAwYSeQMGEn0DBhIY
AgYcAgYIAwYRKAMAAAEEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAASGAQg
ABJtBxABAR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABIgBAgAEnkECAASfQQIABIYBCgA
EwAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAALwEAKlNU
X2E2Y2RjNmQyNDUwYzRkNjRiMWQxMjE4NjJiNGIyNTUxLnZicHJvagAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDE2AAAFAQABAAApAQAkZDkyZWUyOWEtZjRhYi00NDkyLWFmMTAtY2U0ZDdlOWY3
MDdmAAAMAQAHMS4wLjAuMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0CAEAAQAAAAAAGAEACk15VGVtcGxhdGUI
MTEuMC4wLjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVu
dFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015
LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2Vy
dmljZXMAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAAsNwAAAAAAAAAAAABGNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAODcAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAALAQAAAAAAAAAAAAALAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBIwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAAB+ACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AYQA2AGMAZABjADYAZAAyADQANQAwAGMANABkADYANABiADEAZAAxADIAMQA4ADYAMgBi
ADQAYgAyADUANQAxAC4AdgBiAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8A
bgAAAAAAMQAuADAALgAwAC4AMAAAAH4ALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AYQA2AGMAZABjADYAZAAyADQANQAwAGMANABkADYANABiADEAZAAxADIAMQA4ADYAMgBiADQA
YgAyADUANQAxAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAKgABAAEA
TABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAACGAC8AAQBPAHIAaQBnAGkAbgBh
AGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYQA2AGMAZABjADYAZAAyADQANQAwAGMANABkADYA
NABiADEAZAAxADIAMQA4ADYAMgBiADQAYgAyADUANQAxAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAA
AAAAdgArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBhADYAYwBkAGMANgBkADIA
NAA1ADAAYwA0AGQANgA0AGIAMQBkADEAMgAxADgANgAyAGIANABiADIANQA1ADEALgB2AGIAcABy
AG8AagAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4A
MAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAw
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAFg3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\シーケンス コンテナー\仕入先指標データ作成"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="スクリプト タスク"
          DTS:DTSID="{9E9F55E2-52D5-4100-BE27-C893F58FC0C1}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="仕入先指標データ作成"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_cbd20828325540598128df137d9f4b55"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::ConnectionString, User::CommandTimeout"
              ReadWriteVariables="User::ErrorMessage">
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Collections.Generic
Imports System.Data.SqlClient
Imports System.IO
Imports System.Reflection
Imports System.Text
Imports System.Text.RegularExpressions
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

    Dim connectionString As String = String.Empty
    Dim commandTimeout As Integer = 0

    ''' <summary>
    ''' メイン処理を行います。
    ''' </summary>
    Public Sub Main()

        connectionString = Dts.Variables("ConnectionString").Value.ToString
        commandTimeout = CInt(Dts.Variables("CommandTimeout").Value.ToString)

        Dim msg As String = String.Empty

        Try
            'テンポラリテーブル (TmpSupplierPerformance) クリア
            TruncateTmpTable()

            'RFQ (Purpose: for New) データ格納
            MergeRFQForNew()

            'RFQ (Purpose: for New) 有額回答無データ格納
            MergeNoPriceRFQForNew()

            'RFQ (Purpose: for Stock or for Raw Material) データ格納
            MergeRFQForStock()

            'RFQ (Purpose: for Stock or for Raw Material) 有額回答無データ格納
            MergeNoPriceRFQForStock()

            'PO 全データ格納
            MergeParPO()

            'PO (Purpose: for New) データ格納
            MergeParPOForNew()

            'PO (Purpose: for Stock or for Raw Material) データ格納
            MergeParPOForStock()

            'PO キャンセルデータ格納
            MergePOCancel()

            'PO (TCI-S 製造部) データ格納
            MergeParPO2475()

            'PO 合格データ格納
            MergePOApproved()

            'PO 不合格データ格納
            MergePORejected()

        Catch ex As Exception
            Dts.TaskResult = ScriptResults.Failure
            SetErrorMessage(ex)

            Throw ex

        End Try

        Dts.TaskResult = ScriptResults.Success

    End Sub

    ''' <summary>
    ''' テンポラリテーブル (TmpSupplierPerformance) をクリアします。
    ''' </summary>
    Private Sub TruncateTmpTable()

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = "TRUNCATE TABLE TmpSupplierPerformance"
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' RFQ (Purpose: for New) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeRFQForNew()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, H.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        NULL AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RFQCurrentStatus AS CS")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = CS.RFQNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        H.PurposeCode = 'N'")
        sqlStr.AppendLine("        AND (CS.StatusCode = 'Q'")
        sqlStr.AppendLine("            OR (CS.StatusCode = 'C' AND EXISTS (SELECT 1 FROM RFQHistory AS C WHERE C.RFQNumber = H.RFQNumber AND C.RFQStatusCode = 'Q')))")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L, v_RealPO AS P WHERE P.RFQLineNumber = L.RFQLineNumber AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery2 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        P.PONumber AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        H.PurposeCode = 'N'")
        sqlStr.AppendLine("        AND P.ParPONumber IS NULL")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery3 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        P.PONumber AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        H.PurposeCode <> 'N'")
        sqlStr.AppendLine("        AND P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND P.PurposeCode = 'N'")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery2 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery2 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery3 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery3 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("RFQ_forNew AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING RFQ_forNew AS QN ON (SP.SupplierCode = QN.SupplierCode AND SP.CreateDate = QN.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, QN) VALUES (QN.SupplierCode, QN.CreateDate, QN.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.QN = QN.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' RFQ (Purpose: for New) 有額回答無データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeNoPriceRFQForNew()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, H.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        NULL AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RFQCurrentStatus AS CS")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = CS.RFQNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        H.PurposeCode = 'N'")
        sqlStr.AppendLine("        AND (CS.StatusCode = 'Q'")
        sqlStr.AppendLine("            OR (CS.StatusCode = 'C' AND EXISTS (SELECT 1 FROM RFQHistory AS C WHERE C.RFQNumber = H.RFQNumber AND C.RFQStatusCode = 'Q')))")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L, v_RealPO AS P WHERE P.RFQLineNumber = L.RFQLineNumber AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L WHERE L.RFQNumber = H.RFQNumber AND L.UnitPrice > 0")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("NoPriceRFQ_forNew AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING NoPriceRFQ_forNew AS NQN ON (SP.SupplierCode = NQN.SupplierCode AND SP.CreateDate = NQN.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, NQN) VALUES (NQN.SupplierCode, NQN.CreateDate, NQN.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.NQN = NQN.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' RFQ (Purpose: for Stock or for Raw Material) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeRFQForStock()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, H.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        NULL AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RFQCurrentStatus AS CS")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = CS.RFQNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        (H.PurposeCode = 'S' OR H.PurposeCode = 'RM')")
        sqlStr.AppendLine("        AND (CS.StatusCode = 'Q'")
        sqlStr.AppendLine("            OR (CS.StatusCode = 'C' AND EXISTS (SELECT 1 FROM RFQHistory AS C WHERE C.RFQNumber = H.RFQNumber AND C.RFQStatusCode = 'Q')))")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L, v_RealPO AS P WHERE P.RFQLineNumber = L.RFQLineNumber AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery2 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        P.PONumber AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        (H.PurposeCode = 'S' OR H.PurposeCode = 'RM')")
        sqlStr.AppendLine("        AND P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND (P.PurposeCode <> 'N' OR P.PurposeCode IS NULL)")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery3 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        P.PONumber AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        (H.PurposeCode <> 'N' AND H.PurposeCode <> 'S' AND H.PurposeCode <> 'RM')")
        sqlStr.AppendLine("        AND P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND (P.PurposeCode = 'S' OR P.PurposeCode = 'RM')")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery2 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery2 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery3 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery3 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("RFQ_forStock AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING RFQ_forStock AS QS ON (SP.SupplierCode = QS.SupplierCode AND SP.CreateDate = QS.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, QS) VALUES (QS.SupplierCode, QS.CreateDate, QS.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.QS = QS.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' RFQ (Purpose: for Stock or for Raw Material) 有額回答無データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeNoPriceRFQForStock()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, H.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        NULL AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RFQCurrentStatus AS CS")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = CS.RFQNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        (H.PurposeCode = 'S' OR H.PurposeCode = 'RM')")
        sqlStr.AppendLine("        AND (CS.StatusCode = 'Q'")
        sqlStr.AppendLine("            OR (CS.StatusCode = 'C' AND EXISTS (SELECT 1 FROM RFQHistory AS C WHERE C.RFQNumber = H.RFQNumber AND C.RFQStatusCode = 'Q')))")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L, v_RealPO AS P WHERE P.RFQLineNumber = L.RFQLineNumber AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L WHERE L.RFQNumber = H.RFQNumber AND L.UnitPrice > 0")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.RFQNumber,")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        B.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("NoPriceRFQ_forStock AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING NoPriceRFQ_forStock AS NQS ON (SP.SupplierCode = NQS.SupplierCode AND SP.CreateDate = NQS.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, NQS) VALUES (NQS.SupplierCode, NQS.CreateDate, NQS.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.NQS = NQS.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 全データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeParPO()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("ParPO AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO AS PP ON (SP.SupplierCode = PP.SupplierCode AND SP.CreateDate = PP.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PP) VALUES (PP.SupplierCode, PP.CreateDate, PP.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PP = PP.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO (Purpose: for New) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeParPOForNew()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND (P.PurposeCode = 'N'")
        sqlStr.AppendLine("            OR (P.PurposeCode IS NULL AND H.PurposeCode = 'N'))")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("ParPO_forNew AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO_forNew AS PPN ON (SP.SupplierCode = PPN.SupplierCode AND SP.CreateDate = PPN.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PPN) VALUES (PPN.SupplierCode, PPN.CreateDate, PPN.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PPN = PPN.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO (Purpose: for Stock or for Raw Material) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeParPOForStock()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND ((P.PurposeCode = 'S' OR P.PurposeCode = 'RM')")
        sqlStr.AppendLine("            OR (P.PurposeCode IS NULL AND (H.PurposeCode = 'S' OR H.PurposeCode = 'RM')))")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("ParPO_forStock AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO_forStock AS PPS ON (SP.SupplierCode = PPS.SupplierCode AND SP.CreateDate = PPS.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PPS) VALUES (PPS.SupplierCode, PPS.CreateDate, PPS.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PPS = PPS.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO キャンセルデータをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePOCancel()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_POCurrentStatus AS PS")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        P.PONumber = PS.PONumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND (PS.StatusCode = 'PPC' OR PS.StatusCode = 'CPC')")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("ParPO_Cancel AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO_Cancel AS PPC ON (SP.SupplierCode = PPC.SupplierCode AND SP.CreateDate = PPC.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PPC) VALUES (PPC.SupplierCode, PPC.CreateDate, PPC.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PPC = PPC.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO (TCI-S 製造部) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeParPO2475()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH ParPO_2475 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_POCurrentStatus AS CS,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND P.PONumber = CS.PONumber")
        sqlStr.AppendLine("        AND CS.StatusCode <> 'PPC'")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND H.SupplierCode = 2475")
        sqlStr.AppendLine("        AND H.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO_2475 AS PP2475 ON (SP.SupplierCode = PP2475.SupplierCode AND SP.CreateDate = PP2475.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PP2475) VALUES (PP2475.SupplierCode, PP2475.CreateDate, PP2475.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PP2475 = PP2475.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 合格データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePOApproved()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealQM AS QM")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        P.PONumber = QM.PONumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        QM.QMResult = 'A'")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("PO_Approved AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING PO_Approved AS PA ON (SP.SupplierCode = PA.SupplierCode AND SP.CreateDate = PA.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PA) VALUES (PA.SupplierCode, PA.CreateDate, PA.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PA= PA.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 不合格データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePORejected()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery1 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.SupplierCode,")
        sqlStr.AppendLine("        H.MakerCode,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        RFQLine AS L")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        v_RealQM AS QM")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        P.PONumber = QM.PONumber")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        QM.QMResult = 'R'")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.SupplierCode = S.SupplierCode")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        B.CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery1 AS B")
        sqlStr.AppendLine("    INNER JOIN")
        sqlStr.AppendLine("        Supplier AS S")
        sqlStr.AppendLine("    ON")
        sqlStr.AppendLine("        B.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        B.SupplierCode <> 2475")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("PO_Rejected AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING PO_Rejected AS PR ON (SP.SupplierCode = PR.SupplierCode AND SP.CreateDate = PR.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PR) VALUES (PR.SupplierCode, PR.CreateDate, PR.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PR= PR.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' ユーザ変数にエラーメッセージを設定します。
    ''' </summary>
    Private Sub SetErrorMessage(ByVal ex As Exception)

        Dim sb_Msg As New StringBuilder

        sb_Msg.AppendLine("RFQ Analysis all data の出力においてシステムエラーが発生しました。")
        sb_Msg.AppendLine()
        sb_Msg.AppendLine("実行パス：")
        sb_Msg.AppendLine(System.Environment.CommandLine)
        sb_Msg.AppendLine()
        sb_Msg.AppendLine("エラーメッセージ：")

        If ex.InnerException Is Nothing Then
            sb_Msg.AppendLine(ex.Message)
            sb_Msg.AppendLine(ex.StackTrace)
        Else
            sb_Msg.AppendLine(ex.InnerException.Message)
            sb_Msg.AppendLine(ex.InnerException.StackTrace)
        End If

        Dts.Variables("ErrorMessage").Value = sb_Msg.ToString

    End Sub

End Class]]></ProjectItem>
              <ProjectItem
                Name="st_cbd20828325540598128df137d9f4b55.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_cbd20828325540598128df137d9f4b55.vbproj</RootNamespace>
    <AssemblyName>ST_cbd20828325540598128df137d9f4b55.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{6FFB2389-2BFA-4FDA-B36A-C31034136C4C}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_cbd20828325540598128df137d9f4b55.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_cbd20828325540598128df137d9f4b55.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2015")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("874dac69-8008-4a4f-8f3c-99e25815a1cb")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_cbd20828325540598128df137d9f4b55</msb:CodeName>
		<msb:DisplayName>st_cbd20828325540598128df137d9f4b55</msb:DisplayName>
		<msb:ProjectId>{7B5AC28F-8371-40E1-86F3-8DF2B0C7572B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_cbd20828325540598128df137d9f4b55.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_cbd20828325540598128df137d9f4b55.vbproj.dll">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
bzwAAAomBnJZAQBwbzwAAAomBnIZBgBwbzwAAAomBnJ/BgBwbzwAAAomBnIbAgBwbzwAAAomBnIt
AgBwbzwAAAomBnJbAgBwbzwAAAomBnK9BgBwbzwAAAomBnK7AgBwbzwAAAomBnLnBgBwbzwAAAom
BnJbAgBwbzwAAAomBnIrBwBwbzwAAAomBnK7AgBwbzwAAAomBnJXBwBwbzwAAAomBnIPAwBwbzwA
AAomBnIPCABwbzwAAAomBnKrBwBwbzwAAAomBnJJCABwbzwAAAomBnLzBQBwbzwAAAomBnKJCABw
bzwAAAomBnLpAABwbzwAAAomBnKnCABwbzwAAAomBnLRCABwbzwAAAomBnL9CABwbzwAAAomBnIt
CQBwbzwAAAomBnIbAgBwbzwAAAomBnJTCQBwbzwAAAomBnJbAgBwbzwAAAomBnKDCQBwbzwAAAom
BnK7AgBwbzwAAAomBnKvCQBwbzwAAAomBnL/CQBwbzwAAAomBnLpAABwbzwAAAomBnKnCABwbzwA
AAomBnLRCABwbzwAAAomBnL9CABwbzwAAAomBnItCQBwbzwAAAomBnIbAgBwbzwAAAomBnJTCQBw
bzwAAAomBnJbAgBwbzwAAAomBnKDCQBwbzwAAAomBnK7AgBwbzwAAAomBnITCgBwbzwAAAomBnIP
AwBwbzwAAAomBnJdCgBwbzwAAAomBnL/CQBwbzwAAAomBnLpAABwbzwAAAomBnKnCABwbzwAAAom
BnLRCABwbzwAAAomBnL9CABwbzwAAAomBnItCQBwbzwAAAomBnIbAgBwbzwAAAomBnKbCgBwbzwA
AAomBnJbAgBwbzwAAAomBnKDCQBwbzwAAAomBnK7AgBwbzwAAAomBnKvCQBwbzwAAAomBnL/CQBw
bzwAAAomBnLpAABwbzwAAAomBnKnCABwbzwAAAomBnLRCABwbzwAAAomBnL9CABwbzwAAAomBnIt
CQBwbzwAAAomBnIbAgBwbzwAAAomBnKbCgBwbzwAAAomBnJbAgBwbzwAAAomBnKDCQBwbzwAAAom
BnK7AgBwbzwAAAomBnITCgBwbzwAAAomBnIPAwBwbzwAAAomBnJdCgBwbzwAAAomBnL/CQBwbzwA
AAomBnLpAABwbzwAAAomBnKnCABwbzwAAAomBnLRCABwbzwAAAomBnL9CABwbzwAAAomBnItCQBw
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
6QAAcG88AAAKJgZy/wAAcG88AAAKJgZyKQEAcG88AAAKJgZyWQEAcG88AAAKJgZyGQYAcG88AAAK
JgZyfwYAcG88AAAKJgZyGwIAcG88AAAKJgZyLQIAcG88AAAKJgZyWwIAcG88AAAKJgZyvQYAcG88
AAAKJgZyuwIAcG88AAAKJgZy5wYAcG88AAAKJgZyWwIAcG88AAAKJgZyKwcAcG88AAAKJgZyuwIA
cG88AAAKJgZyVwcAcG88AAAKJgZyDwMAcG88AAAKJgZyGBEAcG88AAAKJgZyqwcAcG88AAAKJgZy
hBEAcG88AAAKJgZy8wUAcG88AAAKJgZy7wcAcG88AAAKJgZy6QAAcG88AAAKJgZy/wAAcG88AAAK
JgZyKQEAcG88AAAKJgZyWQEAcG88AAAKJgZyGQYAcG88AAAKJgZyfwYAcG88AAAKJgZyGwIAcG88
AAAKJgZyLQIAcG88AAAKJgZyWwIAcG88AAAKJgZyvQYAcG88AAAKJgZyuwIAcG88AAAKJgZy5wYA
cG88AAAKJgZyWwIAcG88AAAKJgZyKwcAcG88AAAKJgZyuwIAcG88AAAKJgZyVwcAcG88AAAKJgZy
DwMAcG88AAAKJgZy/BEAcG88AAAKJgZyqwcAcG88AAAKJgZyoRIAcG88AAAKJgZy8wUAcG88AAAK
JgZyiQgAcG88AAAKJgZy6QAAcG88AAAKJgZypwgAcG88AAAKJgZy0QgAcG88AAAKJgZy/QgAcG88
AAAKJgZyLQkAcG88AAAKJgZyGwIAcG88AAAKJgZyUwkAcG88AAAKJgZyWwIAcG88AAAKJgZygwkA
cG88AAAKJgZyuwIAcG88AAAKJgZyrwkAcG88AAAKJgZy/wkAcG88AAAKJgZy6QAAcG88AAAKJgZy
pwgAcG88AAAKJgZy0QgAcG88AAAKJgZy/QgAcG88AAAKJgZyLQkAcG88AAAKJgZyGwIAcG88AAAK
JgZyUwkAcG88AAAKJgZyWwIAcG88AAAKJgZygwkAcG88AAAKJgZyuwIAcG88AAAKJgZyEwoAcG88
AAAKJgZyDwMAcG88AAAKJgZyXQoAcG88AAAKJgZy/wkAcG88AAAKJgZy6QAAcG88AAAKJgZypwgA
cG88AAAKJgZy0QgAcG88AAAKJgZy/QgAcG88AAAKJgZyLQkAcG88AAAKJgZyGwIAcG88AAAKJgZy
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
bzwAAAomBnIbAgBwbzwAAAomBnKfCwBwbzwAAAomBnLDCwBwbzwAAAomBnIbCwBwbzwAAAomBnLd
CwBwbzwAAAomBnIHDABwbzwAAAomBnILDABwbzwAAAomBnI+KABwbzwAAAomBnIUDQBwbzwAAAom
BnIJKQBwbzwAAAomBnL1DQBwbzwAAAomBnK+KQBwbzwAAAomBnJVDgBwbzwAAAomAnsJAAAEczQA
AAoLB281AAAKB282AAAKDAgGbz0AAApvNwAACggCewoAAARvOAAACghvOQAACibeFAgsBghvOgAA
CtwHLAYHbzoAAArcKgAAAAEcAAACABMDITQDCgAAAAACAAYDOD4DCgAAAAAbMAIASQMAAAMAABFz
OwAACgoGcr8AAHBvPAAACiYGcukAAHBvPAAACiYGcikBAHBvPAAACiYGclkBAHBvPAAACiYGcgcX
AHBvPAAACiYGchsCAHBvPAAACiYGci0CAHBvPAAACiYGclsCAHBvPAAACiYGcr0GAHBvPAAACiYG
crsCAHBvPAAACiYGcucGAHBvPAAACiYGclsCAHBvPAAACiYGcisHAHBvPAAACiYGcrsCAHBvPAAA
CiYGclcHAHBvPAAACiYGclsCAHBvPAAACiYGcngnAHBvPAAACiYGcrsCAHBvPAAACiYGcqYnAHBv
PAAACiYGcg8DAHBvPAAACiYGcvgpAHBvPAAACiYGcvMFAHBvPAAACiYGcokIAHBvPAAACiYGcukA
AHBvPAAACiYGctEIAHBvPAAACiYGcqcXAHBvPAAACiYGchsCAHBvPAAACiYGclMJAHBvPAAACiYG
clsCAHBvPAAACiYGcoMJAHBvPAAACiYGcrsCAHBvPAAACiYGcq8JAHBvPAAACiYGcv8JAHBvPAAA
CiYGcukAAHBvPAAACiYGctEIAHBvPAAACiYGcqcXAHBvPAAACiYGchsCAHBvPAAACiYGclMJAHBv
PAAACiYGclsCAHBvPAAACiYGcoMJAHBvPAAACiYGcrsCAHBvPAAACiYGchMKAHBvPAAACiYGcg8D
AHBvPAAACiYGcl0KAHBvPAAACiYGcvMFAHBvPAAACiYGciwqAHBvPAAACiYGcukAAHBvPAAACiYG
chsLAHBvPAAACiYGckMLAHBvPAAACiYGcm8LAHBvPAAACiYGchsCAHBvPAAACiYGcp8LAHBvPAAA
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
tQEEANhRAAAAAAEAbwC9AQUAuiAAAAAABhguCAYABgDkUQAAAAADCCwBSgAGABhSAAAAAAYYLggG
AAYAAAABAO8EAAABAOkKAAABAD8HAAABADwBAAABADwBCQAuCAEAEQAuCAYAGQAuCAoAKQAuCBAA
MQAuCBAAOQAuCBAAQQAuCBAASQAuCBAAUQAuCBAAWQAuCBUAYQAuCBUAaQAuCBAAcQAuCBAAeQAu
CBAAgQAuCBoAkQAuCCAAqQAuCAYAsQAuCAYAuQAuCAYA0QAuCCYA6QAuCBAACQEuCAYAEQEuCAYA
mQAuCAYAoQAuCAYADAAuCAYAFAAuCAYAHAAuCAYAJAAuCAYADAAsAUoAFAAsAUoAHAAsAUoAJAAs
AUoAwQAuCAYA2QClAU8A2QAaC1cA8QAuCF0AWQHmBGUAAQEuCAYAYQHuB2oAYQE1CmoAGQEuCAYA
aQE3C28AGQEICngAcQHFCX4AeQF4BoQAgQHSBIsAwQAxBY8AiQHDB5MAkQEUCJgAcQE6CgEAKQEu
CBAAKQGNBgYAKQH1AKgAMQGZChAAMQFrCgEAMQEnC64AmQFqAgYAOQEuCAYAOQHnAb4AOQExBY8A
OQHnAcsAoQHXAdEAIQEiB9UAIQFRAY8AIQEOAY8AgQHcBNsAwQDeCeAAwQBFAa4AqQEdAe0ANACp
CgQBPADSBEoAPADcBBsBPAAuCAYACAA0ADwBCAA4AEEBKQCrAHQDLgALAO0BLgATAPYBLgAbABUC
LgAjAB4CLgArAE4CLgAzAE4CLgA7AB4CLgBDAFQCLgBLAE4CLgBTAGsCLgBbAE4CLgBjAHECLgBr
AJsCLgBzAKgCQACLAEEBQACDAPACQwB7APkCQwCDAPACSQCrAIUDYwB7APkCYwCDAPACaQCrAJkD
gACLAEEBgwCTAEEBgwCbAEEBgwB7APkCiQCrAKYDoACLAEEBqQCDABUCwACLAEEByQCDABUC4ACL
AEEB4wC7AEEB4wBTAE4C6QCzAEEBAwGDAPACAwGjABIDIwGDAPACIwFbAE4CwAODAPACwAOLAEEB
4AODAPAC4AOLAEEBAASDAPACAASLAEEBIASDAPACIASLAEEBQASLAEEBYASLAEEBgASLAEEBgASD
APACoASLAEEBwASLAEEBwASDAPACcgCfALIAxQDlAPgABAABAAUABQAGAAcACQAIAAAAAwjFAQAA
zAbKAQAA6QfPAQAAhgjUAQAAswfZAQAAHgLeAQAA7wTjAQAAMAHoAQIABAADAAIABQAFAAIABgAH
AAIABwAJAAIACQALAAIACgANAAEACwANAAIADgAPAAIAJQARAC4ANQA8AEMA6gD9AAwBEwEEgAAA
AQAAAAAAAAAAAAAAAAA6BQAABAAAAAAAAAAAAAAAIQG2AAAAAAAEAAAAAAAAAAAAAAAhAYEGAAAA
AAoAAAAAAAAAAAAAACoBvwAAAAAADQAAAAAAAAAAAAAAMwGhBQAAAAAEAAAAAAAAAAAAAAAhAZ4A
AAAAAA0AAAAAAAAAAAAAADMBTgAAAAAAAAAAAAEAAAB3CQAACAAEAAkABAAKAAcAAAAQABIAbQAA
ABAARQBtAAAAAABHAG0AjQDzAI0AFgEAAAAAAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmpl
Y3RQcm92aWRlcmAxAE1lcmdlUGFyUE8yNDc1ADxNb2R1bGU+AE1lcmdlUGFyUE8ATWljcm9zb2Z0
LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVfX0luc3Rh
bmNlX18AdmFsdWVfXwBTeXN0ZW0uRGF0YQBQcm9qZWN0RGF0YQBtc2NvcmxpYgBNaWNyb3NvZnQu
VmlzdWFsQmFzaWMATWVyZ2VQT1JlamVjdGVkAE1lcmdlUE9BcHByb3ZlZABDcmVhdGVDb21tYW5k
AFNxbENvbW1hbmQAZ2V0X1N0YWNrVHJhY2UAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNl
AGluc3RhbmNlAEdldEhhc2hDb2RlAGdldF9NZXNzYWdlAFNldEVycm9yTWVzc2FnZQBUcnVuY2F0
ZVRtcFRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAZ2V0X0NvbW1hbmRMaW5l
AEFwcGVuZExpbmUAR2V0VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXND
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvbkJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmli
dXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRh
cmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmli
dXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBt
X1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVtLlRocmVhZGlu
ZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGNvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAU1Rf
Y2JkMjA4MjgzMjU1NDA1OTgxMjhkZjEzN2Q5ZjRiNTUudmJwcm9qAE1lcmdlUGFyUE9Gb3JTdG9j
awBNZXJnZU5vUHJpY2VSRlFGb3JTdG9jawBNZXJnZVJGUUZvclN0b2NrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAE1lcmdlUE9DYW5jZWwA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2NiZDIwODI4MzI1NTQw
NTk4MTI4ZGYxMzdkOWY0YjU1LnZicHJvai5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AT3BlbgBT
eXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15
QXBwbGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24AU3FsQ29ubmVjdGlvbgBnZXRfSW5uZXJFeGNlcHRpb24AQ3VsdHVyZUlu
Zm8AbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2Jq
ZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAU3RyaW5nQnVpbGRlcgBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAFRvSW50ZWdlcgBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBnZXRf
VXNlcgBFbnRlcgBnZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAFNldFByb2plY3RFcnJv
cgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1p
Y3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLklu
dGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfY2JkMjA4Mjgz
MjU1NDA1OTgxMjhkZjEzN2Q5ZjRiNTUudmJwcm9qLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBT
VF9jYmQyMDgyODMyNTU0MDU5ODEyOGRmMTM3ZDlmNGI1NS52YnByb2ouUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfVmFyaWFibGVzAE15U2V0dGluZ3MARXF1YWxzAENvbnZl
cnNpb25zAFJ1bnRpbWVIZWxwZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAG1fU3lu
Y09iamVjdABNeVByb2plY3QARXhpdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGll
bnQARW52aXJvbm1lbnQAc2V0X0NvbW1hbmRUaW1lb3V0AGNvbW1hbmRUaW1lb3V0AFN5c3RlbS5U
ZXh0AHNldF9Db21tYW5kVGV4dABtX0NvbnRleHQATWVyZ2VQYXJQT0Zvck5ldwBNZXJnZU5vUHJp
Y2VSRlFGb3JOZXcATWVyZ2VSRlFGb3JOZXcAZXgAU1RfY2JkMjA4MjgzMjU1NDA1OTgxMjhkZjEz
N2Q5ZjRiNTUudmJwcm9qLk15AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkARW1wdHkAAAAA
ADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAIUMAbwBu
AG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAAB1DAG8AbQBtAGEAbgBkAFQAaQBtAGUAbwB1AHQA
AEtUAFIAVQBOAEMAQQBUAEUAIABUAEEAQgBMAEUAIABUAG0AcABTAHUAcABwAGwAaQBlAHIAUABl
AHIAZgBvAHIAbQBhAG4AYwBlAAApVwBJAFQASAAgAEIAYQBzAGUAUQB1AGUAcgB5ADEAIABBAFMA
IAAoAAAVIAAgACAAIABTAEUATABFAEMAVAAAKSAAIAAgACAAIAAgACAAIABIAC4AUgBGAFEATgB1
AG0AYgBlAHIALAAALyAAIAAgACAAIAAgACAAIABIAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUA
LAAAKSAAIAAgACAAIAAgACAAIABIAC4ATQBhAGsAZQByAEMAbwBkAGUALAAAZSAAIAAgACAAIAAg
ACAAIABDAE8ATgBWAEUAUgBUACgAZABhAHQAZQAsACAASAAuAEMAcgBlAGEAdABlAEQAYQB0AGUA
KQAgAEEAUwAgAEMAcgBlAGEAdABlAEQAYQB0AGUALAAAMSAAIAAgACAAIAAgACAAIABOAFUATABM
ACAAQQBTACAAUABPAE4AdQBtAGIAZQByAAARIAAgACAAIABGAFIATwBNAAAtIAAgACAAIAAgACAA
IAAgAFIARgBRAEgAZQBhAGQAZQByACAAQQBTACAASAAAHSAAIAAgACAASQBOAE4ARQBSACAASgBP
AEkATgAAQSAAIAAgACAAIAAgACAAIAB2AF8AUgBGAFEAQwB1AHIAcgBlAG4AdABTAHQAYQB0AHUA
cwAgAEEAUwAgAEMAUwAADSAAIAAgACAATwBOAABFIAAgACAAIAAgACAAIAAgAEgALgBSAEYAUQBO
AHUAbQBiAGUAcgAgAD0AIABDAFMALgBSAEYAUQBOAHUAbQBiAGUAcgAAEyAAIAAgACAAVwBIAEUA
UgBFAAA3IAAgACAAIAAgACAAIAAgAEgALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA9ACAAJwBO
ACcAAUEgACAAIAAgACAAIAAgACAAQQBOAEQAIAAoAEMAUwAuAFMAdABhAHQAdQBzAEMAbwBkAGUA
IAA9ACAAJwBRACcAAYEVIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBSACAAKABDAFMALgBTAHQA
YQB0AHUAcwBDAG8AZABlACAAPQAgACcAQwAnACAAQQBOAEQAIABFAFgASQBTAFQAUwAgACgAUwBF
AEwARQBDAFQAIAAxACAARgBSAE8ATQAgAFIARgBRAEgAaQBzAHQAbwByAHkAIABBAFMAIABDACAA
VwBIAEUAUgBFACAAQwAuAFIARgBRAE4AdQBtAGIAZQByACAAPQAgAEgALgBSAEYAUQBOAHUAbQBi
AGUAcgAgAEEATgBEACAAQwAuAFIARgBRAFMAdABhAHQAdQBzAEMAbwBkAGUAIAA9ACAAJwBRACcA
KQApACkAATEgACAAIAAgACAAIAAgACAAQQBOAEQAIABOAE8AVAAgAEUAWABJAFMAVABTACAAKAAA
gPcgACAAIAAgACAAIAAgACAAIAAgACAAIABTAEUATABFAEMAVAAgADEAIABGAFIATwBNACAAUgBG
AFEATABpAG4AZQAgAEEAUwAgAEwALAAgAHYAXwBSAGUAYQBsAFAATwAgAEEAUwAgAFAAIABXAEgA
RQBSAEUAIABQAC4AUgBGAFEATABpAG4AZQBOAHUAbQBiAGUAcgAgAD0AIABMAC4AUgBGAFEATABp
AG4AZQBOAHUAbQBiAGUAcgAgAEEATgBEACAATAAuAFIARgBRAE4AdQBtAGIAZQByACAAPQAgAEgA
LgBSAEYAUQBOAHUAbQBiAGUAcgAAEyAAIAAgACAAIAAgACAAIAApAAAFKQAsAAAfQgBhAHMAZQBR
AHUAZQByAHkAMgAgAEEAUwAgACgAAGUgACAAIAAgACAAIAAgACAAQwBPAE4AVgBFAFIAVAAoAGQA
YQB0AGUALAAgAFAALgBDAHIAZQBhAHQAZQBEAGEAdABlACkAIABBAFMAIABDAHIAZQBhAHQAZQBE
AGEAdABlACwAAD0gACAAIAAgACAAIAAgACAAUAAuAFAATwBOAHUAbQBiAGUAcgAgAEEAUwAgAFAA
TwBOAHUAbQBiAGUAcgAAKSAAIAAgACAAIAAgACAAIABSAEYAUQBMAGkAbgBlACAAQQBTACAATAAA
QyAAIAAgACAAIAAgACAAIABIAC4AUgBGAFEATgB1AG0AYgBlAHIAIAA9ACAATAAuAFIARgBRAE4A
dQBtAGIAZQByAAArIAAgACAAIAAgACAAIAAgAHYAXwBSAGUAYQBsAFAATwAgAEEAUwAgAFAAAFMg
ACAAIAAgACAAIAAgACAATAAuAFIARgBRAEwAaQBuAGUATgB1AG0AYgBlAHIAIAA9ACAAUAAuAFIA
RgBRAEwAaQBuAGUATgB1AG0AYgBlAHIAAEMgACAAIAAgACAAIAAgACAAQQBOAEQAIABQAC4AUABh
AHIAUABPAE4AdQBtAGIAZQByACAASQBTACAATgBVAEwATAAAH0IAYQBzAGUAUQB1AGUAcgB5ADMA
IABBAFMAIAAoAAA5IAAgACAAIAAgACAAIAAgAEgALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA8
AD4AIAAnAE4AJwABPyAAIAAgACAAIAAgACAAIABBAE4ARAAgAFAALgBQAHUAcgBwAG8AcwBlAEMA
bwBkAGUAIAA9ACAAJwBOACcAAR1CAGEAcwBlAFEAdQBlAHIAeQAgAEEAUwAgACgAACkgACAAIAAg
ACAAIAAgACAAQgAuAFIARgBRAE4AdQBtAGIAZQByACwAACsgACAAIAAgACAAIAAgACAAQgAuAEMA
cgBlAGEAdABlAEQAYQB0AGUALAAALyAAIAAgACAAIAAgACAAIABTAC4AUwB1AHAAcABsAGkAZQBy
AEMAbwBkAGUALAAAJSAAIAAgACAAIAAgACAAIABCAC4AUABPAE4AdQBtAGIAZQByAAAvIAAgACAA
IAAgACAAIAAgAEIAYQBzAGUAUQB1AGUAcgB5ADEAIABBAFMAIABCAAArIAAgACAAIAAgACAAIAAg
AFMAdQBwAHAAbABpAGUAcgAgAEEAUwAgAFMAAE8gACAAIAAgACAAIAAgACAAQgAuAFMAdQBwAHAA
bABpAGUAcgBDAG8AZABlACAAPQAgAFMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAAEyAAIAAg
ACAAVQBOAEkATwBOAABJIAAgACAAIAAgACAAIAAgAEIALgBNAGEAawBlAHIAQwBvAGQAZQAgAD0A
IABTAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAAD0gACAAIAAgACAAIAAgACAAQgAuAFMAdQBw
AHAAbABpAGUAcgBDAG8AZABlACAAPAA+ACAAMgA0ADcANQAALyAAIAAgACAAIAAgACAAIABCAGEA
cwBlAFEAdQBlAHIAeQAyACAAQQBTACAAQgAALyAAIAAgACAAIAAgACAAIABCAGEAcwBlAFEAdQBl
AHIAeQAzACAAQQBTACAAQgAAH1IARgBRAF8AZgBvAHIATgBlAHcAIABBAFMAIAAoAAAnIAAgACAA
IAAgACAAIAAgAEMAcgBlAGEAdABlAEQAYQB0AGUALAAAKyAAIAAgACAAIAAgACAAIABTAHUAcABw
AGwAaQBlAHIAQwBvAGQAZQAsAAAvIAAgACAAIAAgACAAIAAgAEMATwBVAE4AVAAoACoAKQAgAEEA
UwAgAEMAbgB0AAAjIAAgACAAIAAgACAAIAAgAEIAYQBzAGUAUQB1AGUAcgB5AAAZIAAgACAAIABH
AFIATwBVAFAAIABCAFkAACkgACAAIAAgACAAIAAgACAAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUA
AAMpAAA/TQBFAFIARwBFACAAVABtAHAAUwB1AHAAcABsAGkAZQByAFAAZQByAGYAbwByAG0AYQBu
AGMAZQAgAFMAUAAAgMcgACAAIAAgAFUAUwBJAE4ARwAgAFIARgBRAF8AZgBvAHIATgBlAHcAIABB
AFMAIABRAE4AIABPAE4AIAAoAFMAUAAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAPQAgAFEA
TgAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAQQBOAEQAIABTAFAALgBDAHIAZQBhAHQAZQBE
AGEAdABlACAAPQAgAFEATgAuAEMAcgBlAGEAdABlAEQAYQB0AGUAKQAAK1cASABFAE4AIABOAE8A
VAAgAE0AQQBUAEMASABFAEQAIABUAEgARQBOAACAsyAAIAAgACAASQBOAFMARQBSAFQAIAAoAFMA
dQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABDAHIAZQBhAHQAZQBEAGEAdABlACwAIABRAE4AKQAg
AFYAQQBMAFUARQBTACAAKABRAE4ALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAUQBOAC4A
QwByAGUAYQB0AGUARABhAHQAZQAsACAAUQBOAC4AQwBuAHQAKQAAI1cASABFAE4AIABNAEEAVABD
AEgARQBEACAAVABIAEUATgAAOyAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFEA
TgAgAD0AIABRAE4ALgBDAG4AdAAAAzsAAIC1IAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwA
RQBDAFQAIAAxACAARgBSAE8ATQAgAFIARgBRAEwAaQBuAGUAIABBAFMAIABMACAAVwBIAEUAUgBF
ACAATAAuAFIARgBRAE4AdQBtAGIAZQByACAAPQAgAEgALgBSAEYAUQBOAHUAbQBiAGUAcgAgAEEA
TgBEACAATAAuAFUAbgBpAHQAUAByAGkAYwBlACAAPgAgADAAAC1OAG8AUAByAGkAYwBlAFIARgBR
AF8AZgBvAHIATgBlAHcAIABBAFMAIAAoAACA2yAAIAAgACAAVQBTAEkATgBHACAATgBvAFAAcgBp
AGMAZQBSAEYAUQBfAGYAbwByAE4AZQB3ACAAQQBTACAATgBRAE4AIABPAE4AIAAoAFMAUAAuAFMA
dQBwAHAAbABpAGUAcgBDAG8AZABlACAAPQAgAE4AUQBOAC4AUwB1AHAAcABsAGkAZQByAEMAbwBk
AGUAIABBAE4ARAAgAFMAUAAuAEMAcgBlAGEAdABlAEQAYQB0AGUAIAA9ACAATgBRAE4ALgBDAHIA
ZQBhAHQAZQBEAGEAdABlACkAAIC7IAAgACAAIABJAE4AUwBFAFIAVAAgACgAUwB1AHAAcABsAGkA
ZQByAEMAbwBkAGUALAAgAEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAE4AUQBOACkAIABWAEEATABV
AEUAUwAgACgATgBRAE4ALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAATgBRAE4ALgBDAHIA
ZQBhAHQAZQBEAGEAdABlACwAIABOAFEATgAuAEMAbgB0ACkAAD8gACAAIAAgAFUAUABEAEEAVABF
ACAAUwBFAFQAIABTAFAALgBOAFEATgAgAD0AIABOAFEATgAuAEMAbgB0AABrIAAgACAAIAAgACAA
IAAgACgASAAuAFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgAD0AIAAnAFMAJwAgAE8AUgAgAEgALgBQ
AHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA9ACAAJwBSAE0AJwApAAF3IAAgACAAIAAgACAAIAAgAEEA
TgBEACAAKABQAC4AUAB1AHIAcABvAHMAZQBDAG8AZABlACAAPAA+ACAAJwBOACcAIABPAFIAIABQ
AC4AUAB1AHIAcABvAHMAZQBDAG8AZABlACAASQBTACAATgBVAEwATAApAAGAoyAAIAAgACAAIAAg
ACAAIAAoAEgALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA8AD4AIAAnAE4AJwAgAEEATgBEACAA
SAAuAFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgADwAPgAgACcAUwAnACAAQQBOAEQAIABIAC4AUAB1
AHIAcABvAHMAZQBDAG8AZABlACAAPAA+ACAAJwBSAE0AJwApAAFzIAAgACAAIAAgACAAIAAgAEEA
TgBEACAAKABQAC4AUAB1AHIAcABvAHMAZQBDAG8AZABlACAAPQAgACcAUwAnACAATwBSACAAUAAu
AFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgAD0AIAAnAFIATQAnACkAASNSAEYAUQBfAGYAbwByAFMA
dABvAGMAawAgAEEAUwAgACgAAIDLIAAgACAAIABVAFMASQBOAEcAIABSAEYAUQBfAGYAbwByAFMA
dABvAGMAawAgAEEAUwAgAFEAUwAgAE8ATgAgACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBk
AGUAIAA9ACAAUQBTAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABBAE4ARAAgAFMAUAAuAEMA
cgBlAGEAdABlAEQAYQB0AGUAIAA9ACAAUQBTAC4AQwByAGUAYQB0AGUARABhAHQAZQApAACAsyAA
IAAgACAASQBOAFMARQBSAFQAIAAoAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABDAHIAZQBh
AHQAZQBEAGEAdABlACwAIABRAFMAKQAgAFYAQQBMAFUARQBTACAAKABRAFMALgBTAHUAcABwAGwA
aQBlAHIAQwBvAGQAZQAsACAAUQBTAC4AQwByAGUAYQB0AGUARABhAHQAZQAsACAAUQBTAC4AQwBu
AHQAKQAAOyAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFEAUwAgAD0AIABRAFMA
LgBDAG4AdAAAMU4AbwBQAHIAaQBjAGUAUgBGAFEAXwBmAG8AcgBTAHQAbwBjAGsAIABBAFMAIAAo
AACA3yAAIAAgACAAVQBTAEkATgBHACAATgBvAFAAcgBpAGMAZQBSAEYAUQBfAGYAbwByAFMAdABv
AGMAawAgAEEAUwAgAE4AUQBTACAATwBOACAAKABTAFAALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQA
ZQAgAD0AIABOAFEAUwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAQQBOAEQAIABTAFAALgBD
AHIAZQBhAHQAZQBEAGEAdABlACAAPQAgAE4AUQBTAC4AQwByAGUAYQB0AGUARABhAHQAZQApAACA
uyAAIAAgACAASQBOAFMARQBSAFQAIAAoAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABDAHIA
ZQBhAHQAZQBEAGEAdABlACwAIABOAFEAUwApACAAVgBBAEwAVQBFAFMAIAAoAE4AUQBTAC4AUwB1
AHAAcABsAGkAZQByAEMAbwBkAGUALAAgAE4AUQBTAC4AQwByAGUAYQB0AGUARABhAHQAZQAsACAA
TgBRAFMALgBDAG4AdAApAAA/IAAgACAAIABVAFAARABBAFQARQAgAFMARQBUACAAUwBQAC4ATgBR
AFMAIAA9ACAATgBRAFMALgBDAG4AdAAAYyAAIAAgACAAIAAgACAAIABDAE8ATgBWAEUAUgBUACgA
ZABhAHQAZQAsACAAUAAuAEMAcgBlAGEAdABlAEQAYQB0AGUAKQAgAEEAUwAgAEMAcgBlAGEAdABl
AEQAYQB0AGUAADsgACAAIAAgACAAIAAgACAAUAAuAFAAYQByAFAATwBOAHUAbQBiAGUAcgAgAEkA
UwAgAE4AVQBMAEwAAC0gACAAIAAgACAAIAAgACAAUwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABl
AAAVUABhAHIAUABPACAAQQBTACAAKAAAgL0gACAAIAAgAFUAUwBJAE4ARwAgAFAAYQByAFAATwAg
AEEAUwAgAFAAUAAgAE8ATgAgACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAA
UABQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABBAE4ARAAgAFMAUAAuAEMAcgBlAGEAdABl
AEQAYQB0AGUAIAA9ACAAUABQAC4AQwByAGUAYQB0AGUARABhAHQAZQApAACAsyAAIAAgACAASQBO
AFMARQBSAFQAIAAoAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABDAHIAZQBhAHQAZQBEAGEA
dABlACwAIABQAFAAKQAgAFYAQQBMAFUARQBTACAAKABQAFAALgBTAHUAcABwAGwAaQBlAHIAQwBv
AGQAZQAsACAAUABQAC4AQwByAGUAYQB0AGUARABhAHQAZQAsACAAUABQAC4AQwBuAHQAKQAAOyAA
IAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFAAUAAgAD0AIABQAFAALgBDAG4AdAAA
QSAAIAAgACAAIAAgACAAIABBAE4ARAAgACgAUAAuAFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgAD0A
IAAnAE4AJwABfyAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgAgACgAUAAuAFAAdQByAHAAbwBz
AGUAQwBvAGQAZQAgAEkAUwAgAE4AVQBMAEwAIABBAE4ARAAgAEgALgBQAHUAcgBwAG8AcwBlAEMA
bwBkAGUAIAA9ACAAJwBOACcAKQApAAEjUABhAHIAUABPAF8AZgBvAHIATgBlAHcAIABBAFMAIAAo
AACA0SAAIAAgACAAVQBTAEkATgBHACAAUABhAHIAUABPAF8AZgBvAHIATgBlAHcAIABBAFMAIABQ
AFAATgAgAE8ATgAgACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAAUABQAE4A
LgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEATgBEACAAUwBQAC4AQwByAGUAYQB0AGUARABh
AHQAZQAgAD0AIABQAFAATgAuAEMAcgBlAGEAdABlAEQAYQB0AGUAKQAAgLsgACAAIAAgAEkATgBT
AEUAUgBUACAAKABTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAQwByAGUAYQB0AGUARABhAHQA
ZQAsACAAUABQAE4AKQAgAFYAQQBMAFUARQBTACAAKABQAFAATgAuAFMAdQBwAHAAbABpAGUAcgBD
AG8AZABlACwAIABQAFAATgAuAEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAFAAUABOAC4AQwBuAHQA
KQAAPyAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFAAUABOACAAPQAgAFAAUABO
AC4AQwBuAHQAAHUgACAAIAAgACAAIAAgACAAQQBOAEQAIAAoACgAUAAuAFAAdQByAHAAbwBzAGUA
QwBvAGQAZQAgAD0AIAAnAFMAJwAgAE8AUgAgAFAALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA9
ACAAJwBSAE0AJwApAAGAsyAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgAgACgAUAAuAFAAdQBy
AHAAbwBzAGUAQwBvAGQAZQAgAEkAUwAgAE4AVQBMAEwAIABBAE4ARAAgACgASAAuAFAAdQByAHAA
bwBzAGUAQwBvAGQAZQAgAD0AIAAnAFMAJwAgAE8AUgAgAEgALgBQAHUAcgBwAG8AcwBlAEMAbwBk
AGUAIAA9ACAAJwBSAE0AJwApACkAKQABJ1AAYQByAFAATwBfAGYAbwByAFMAdABvAGMAawAgAEEA
UwAgACgAAIDVIAAgACAAIABVAFMASQBOAEcAIABQAGEAcgBQAE8AXwBmAG8AcgBTAHQAbwBjAGsA
IABBAFMAIABQAFAAUwAgAE8ATgAgACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9
ACAAUABQAFMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEATgBEACAAUwBQAC4AQwByAGUA
YQB0AGUARABhAHQAZQAgAD0AIABQAFAAUwAuAEMAcgBlAGEAdABlAEQAYQB0AGUAKQAAgLsgACAA
IAAgAEkATgBTAEUAUgBUACAAKABTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAQwByAGUAYQB0
AGUARABhAHQAZQAsACAAUABQAFMAKQAgAFYAQQBMAFUARQBTACAAKABQAFAAUwAuAFMAdQBwAHAA
bABpAGUAcgBDAG8AZABlACwAIABQAFAAUwAuAEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAFAAUABT
AC4AQwBuAHQAKQAAPyAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFAAUABTACAA
PQAgAFAAUABTAC4AQwBuAHQAAD8gACAAIAAgACAAIAAgACAAdgBfAFAATwBDAHUAcgByAGUAbgB0
AFMAdABhAHQAdQBzACAAQQBTACAAUABTAABBIAAgACAAIAAgACAAIAAgAFAALgBQAE8ATgB1AG0A
YgBlAHIAIAA9ACAAUABTAC4AUABPAE4AdQBtAGIAZQByAAB5IAAgACAAIAAgACAAIAAgAEEATgBE
ACAAKABQAFMALgBTAHQAYQB0AHUAcwBDAG8AZABlACAAPQAgACcAUABQAEMAJwAgAE8AUgAgAFAA
UwAuAFMAdABhAHQAdQBzAEMAbwBkAGUAIAA9ACAAJwBDAFAAQwAnACkAASNQAGEAcgBQAE8AXwBD
AGEAbgBjAGUAbAAgAEEAUwAgACgAAIDRIAAgACAAIABVAFMASQBOAEcAIABQAGEAcgBQAE8AXwBD
AGEAbgBjAGUAbAAgAEEAUwAgAFAAUABDACAATwBOACAAKABTAFAALgBTAHUAcABwAGwAaQBlAHIA
QwBvAGQAZQAgAD0AIABQAFAAQwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAQQBOAEQAIABT
AFAALgBDAHIAZQBhAHQAZQBEAGEAdABlACAAPQAgAFAAUABDAC4AQwByAGUAYQB0AGUARABhAHQA
ZQApAACAuyAAIAAgACAASQBOAFMARQBSAFQAIAAoAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwA
IABDAHIAZQBhAHQAZQBEAGEAdABlACwAIABQAFAAQwApACAAVgBBAEwAVQBFAFMAIAAoAFAAUABD
AC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUALAAgAFAAUABDAC4AQwByAGUAYQB0AGUARABhAHQA
ZQAsACAAUABQAEMALgBDAG4AdAApAAA/IAAgACAAIABVAFAARABBAFQARQAgAFMARQBUACAAUwBQ
AC4AUABQAEMAIAA9ACAAUABQAEMALgBDAG4AdAAAKVcASQBUAEgAIABQAGEAcgBQAE8AXwAyADQA
NwA1ACAAQQBTACAAKAAALSAAIAAgACAAIAAgACAAIABTAHUAcABwAGwAaQBlAHIAIABBAFMAIABT
ACwAAC8gACAAIAAgACAAIAAgACAAUgBGAFEASABlAGEAZABlAHIAIABBAFMAIABIACwAACsgACAA
IAAgACAAIAAgACAAUgBGAFEATABpAG4AZQAgAEEAUwAgAEwALAAAQSAAIAAgACAAIAAgACAAIAB2
AF8AUABPAEMAdQByAHIAZQBuAHQAUwB0AGEAdAB1AHMAIABBAFMAIABDAFMALAAASSAAIAAgACAA
IAAgACAAIABBAE4ARAAgAFAALgBQAE8ATgB1AG0AYgBlAHIAIAA9ACAAQwBTAC4AUABPAE4AdQBt
AGIAZQByAABFIAAgACAAIAAgACAAIAAgAEEATgBEACAAQwBTAC4AUwB0AGEAdAB1AHMAQwBvAGQA
ZQAgADwAPgAgACcAUABQAEMAJwABWyAAIAAgACAAIAAgACAAIABBAE4ARAAgAFAALgBSAEYAUQBM
AGkAbgBlAE4AdQBtAGIAZQByACAAPQAgAEwALgBSAEYAUQBMAGkAbgBlAE4AdQBtAGIAZQByAABL
IAAgACAAIAAgACAAIAAgAEEATgBEACAATAAuAFIARgBRAE4AdQBtAGIAZQByACAAPQAgAEgALgBS
AEYAUQBOAHUAbQBiAGUAcgAAQyAAIAAgACAAIAAgACAAIABBAE4ARAAgAEgALgBTAHUAcABwAGwA
aQBlAHIAQwBvAGQAZQAgAD0AIAAyADQANwA1AABRIAAgACAAIAAgACAAIAAgAEEATgBEACAASAAu
AE0AYQBrAGUAcgBDAG8AZABlACAAPQAgAFMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAASSAA
IAAgACAAIAAgACAAIABDAE8ATgBWAEUAUgBUACgAZABhAHQAZQAsACAAUAAuAEMAcgBlAGEAdABl
AEQAYQB0AGUAKQAsAACA3yAAIAAgACAAVQBTAEkATgBHACAAUABhAHIAUABPAF8AMgA0ADcANQAg
AEEAUwAgAFAAUAAyADQANwA1ACAATwBOACAAKABTAFAALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQA
ZQAgAD0AIABQAFAAMgA0ADcANQAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAQQBOAEQAIABT
AFAALgBDAHIAZQBhAHQAZQBEAGEAdABlACAAPQAgAFAAUAAyADQANwA1AC4AQwByAGUAYQB0AGUA
RABhAHQAZQApAACA0yAAIAAgACAASQBOAFMARQBSAFQAIAAoAFMAdQBwAHAAbABpAGUAcgBDAG8A
ZABlACwAIABDAHIAZQBhAHQAZQBEAGEAdABlACwAIABQAFAAMgA0ADcANQApACAAVgBBAEwAVQBF
AFMAIAAoAFAAUAAyADQANwA1AC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUALAAgAFAAUAAyADQA
NwA1AC4AQwByAGUAYQB0AGUARABhAHQAZQAsACAAUABQADIANAA3ADUALgBDAG4AdAApAABLIAAg
ACAAIABVAFAARABBAFQARQAgAFMARQBUACAAUwBQAC4AUABQADIANAA3ADUAIAA9ACAAUABQADIA
NAA3ADUALgBDAG4AdAAALSAAIAAgACAAIAAgACAAIAB2AF8AUgBlAGEAbABRAE0AIABBAFMAIABR
AE0AAEEgACAAIAAgACAAIAAgACAAUAAuAFAATwBOAHUAbQBiAGUAcgAgAD0AIABRAE0ALgBQAE8A
TgB1AG0AYgBlAHIAADMgACAAIAAgACAAIAAgACAAUQBNAC4AUQBNAFIAZQBzAHUAbAB0ACAAPQAg
ACcAQQAnAAEhUABPAF8AQQBwAHAAcgBvAHYAZQBkACAAQQBTACAAKAAAgMkgACAAIAAgAFUAUwBJ
AE4ARwAgAFAATwBfAEEAcABwAHIAbwB2AGUAZAAgAEEAUwAgAFAAQQAgAE8ATgAgACgAUwBQAC4A
UwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAAUABBAC4AUwB1AHAAcABsAGkAZQByAEMAbwBk
AGUAIABBAE4ARAAgAFMAUAAuAEMAcgBlAGEAdABlAEQAYQB0AGUAIAA9ACAAUABBAC4AQwByAGUA
YQB0AGUARABhAHQAZQApAACAsyAAIAAgACAASQBOAFMARQBSAFQAIAAoAFMAdQBwAHAAbABpAGUA
cgBDAG8AZABlACwAIABDAHIAZQBhAHQAZQBEAGEAdABlACwAIABQAEEAKQAgAFYAQQBMAFUARQBT
ACAAKABQAEEALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAUABBAC4AQwByAGUAYQB0AGUA
RABhAHQAZQAsACAAUABBAC4AQwBuAHQAKQAAOSAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAg
AFMAUAAuAFAAQQA9ACAAUABBAC4AQwBuAHQAADMgACAAIAAgACAAIAAgACAAUQBNAC4AUQBNAFIA
ZQBzAHUAbAB0ACAAPQAgACcAUgAnAAEhUABPAF8AUgBlAGoAZQBjAHQAZQBkACAAQQBTACAAKAAA
gMkgACAAIAAgAFUAUwBJAE4ARwAgAFAATwBfAFIAZQBqAGUAYwB0AGUAZAAgAEEAUwAgAFAAUgAg
AE8ATgAgACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAAUABSAC4AUwB1AHAA
cABsAGkAZQByAEMAbwBkAGUAIABBAE4ARAAgAFMAUAAuAEMAcgBlAGEAdABlAEQAYQB0AGUAIAA9
ACAAUABSAC4AQwByAGUAYQB0AGUARABhAHQAZQApAACAsyAAIAAgACAASQBOAFMARQBSAFQAIAAo
AFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABDAHIAZQBhAHQAZQBEAGEAdABlACwAIABQAFIA
KQAgAFYAQQBMAFUARQBTACAAKABQAFIALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAUABS
AC4AQwByAGUAYQB0AGUARABhAHQAZQAsACAAUABSAC4AQwBuAHQAKQAAOSAAIAAgACAAVQBQAEQA
QQBUAEUAIABTAEUAVAAgAFMAUAAuAFAAUgA9ACAAUABSAC4AQwBuAHQAAFlSAEYAUQAgAEEAbgBh
AGwAeQBzAGkAcwAgAGEAbABsACAAZABhAHQAYQAgAG4w+lGbUmswSjBEMGYwtzC5MMYw4DCoMOkw
/DBMMHp2H3VXMH4wVzBfMAIwAQufW0yI0TC5MBr/AROoMOkw/DDhMMMwuzD8MLgwGv8BGUUAcgBy
AG8AcgBNAGUAcwBzAGEAZwBlAAC+Deab3N2YTpwTHzcVtI/vAAQgAQEIAyAAAQUgAQEREQQgAQEO
BCABAQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYVEiQBEgwGFRIkARIIBhUSJAESZQYVEiQBEiAEIAAT
AAcAARJtEYClBSAAEoCpByACAQ4SgKkEAAEcHAQAAQEcAgYOBQcBEoCRBSAAEoC5BSAAEoC9BiAB
EoDBHAMgABwDIAAOBAABCA4GAAEBEoCRCAcCEoCVEoCZBSAAEoCZAyAACAsHAxKAnRKAlRKAmQYg
ARKAnQ4FBwESgJ0FIAASgJ0DAAAOBSAAEoCRBCABARwEIAECHAQHAR4AAh4ABRABAB4ABAoBHgAE
BwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/EdUK
OgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAESDAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMGEnkD
BhJ9AwYSGAIGHAIGCAMGESgDAAABBAAAEgwEAAASCAQAABJlBAAAEiAEAAASeQQAABJ9BQABARJ9
BAAAEhgGIAEBEoCRBCAAEm0HEAEBHgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAAS
eQQIABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAvAQAqU1RfY2JkMjA4MjgzMjU1NDA1OTgxMjhkZjEzN2Q5ZjRiNTUudmJwcm9qAAAF
AQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTUAAAUBAAEAACkBACQ4NzRkYWM2OS04MDA4LTRhNGYt
OGYzYy05OWUyNTgxNWExY2IAAAwBAAcxLjAuMC4wAABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQIAQABAAAAAAAY
AQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xz
LlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3Rh
bmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIA
ABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAUJgAAAAAAAAAAAAAapgAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAFyYAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAA
AQAAAAAASAAAAFigAAAsBAAAAAAAAAAAAAAsBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBO
AEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAA
AAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0
AGkAbwBuAAAAAAAAALAEjAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAaAMAAAEA
MAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBt
AHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAH4AKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwBjAGIAZAAyADAAOAAyADgAMwAyADUANQA0ADAANQA5ADgAMQAyADgAZABm
ADEAMwA3AGQAOQBmADQAYgA1ADUALgB2AGIAcAByAG8AagAAAAAAMAAIAAEARgBpAGwAZQBWAGUA
cgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAfgAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwBjAGIAZAAyADAAOAAyADgAMwAyADUANQA0ADAANQA5ADgAMQAyADgAZABmADEA
MwA3AGQAOQBmADQAYgA1ADUALgB2AGIAcAByAG8AagAuAGQAbABsAAAAAABIABIAAQBMAGUAZwBh
AGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUA
AAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAIYALwABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBjAGIAZAAyADAAOAAyADgAMwAyADUA
NQA0ADAANQA5ADgAMQAyADgAZABmADEAMwA3AGQAOQBmADQAYgA1ADUALgB2AGIAcAByAG8AagAu
AGQAbABsAAAAAAB2ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGMAYgBkADIA
MAA4ADIAOAAzADIANQA1ADQAMAA1ADkAOAAxADIAOABkAGYAMQAzADcAZAA5AGYANABiADUANQAu
AHYAYgBwAHIAbwBqAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAMAAAA
fDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\シーケンス コンテナー.PrecedenceConstraints[制約]"
          DTS:CreationName=""
          DTS:DTSID="{D29D1B7A-6E2D-4CC2-93F3-13FF0C138D80}"
          DTS:From="Package\シーケンス コンテナー\仕入先指標データ作成"
          DTS:LogicalAnd="True"
          DTS:ObjectName="制約"
          DTS:To="Package\シーケンス コンテナー\仕入先ランクデータ作成" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\シーケンス コンテナー.PrecedenceConstraints[制約 1]"
          DTS:CreationName=""
          DTS:DTSID="{D27811C5-4832-4195-83AB-40D26155ADE9}"
          DTS:From="Package\シーケンス コンテナー\仕入先ランクデータ作成"
          DTS:LogicalAnd="True"
          DTS:ObjectName="制約 1"
          DTS:To="Package\シーケンス コンテナー\エクセルファイル出力" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\メール送信タスク"
      DTS:CreationName="Microsoft.SendMailTask"
      DTS:Description="メール送信タスク"
      DTS:DTSID="{B941B8FC-AD61-43B9-95B3-2C85676A9133}"
      DTS:ExecutableType="Microsoft.SendMailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="メール送信タスク"
      DTS:TaskContact="Send Mail Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:PropertyExpression
        DTS:Name="ToLine">@[User::MailTo]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{3715EA69-093A-49DB-90CE-10DF00860FC8}"
          SendMailTask:From="devteam_app@tcichemicals.com"
          SendMailTask:To="masumi.koyama@tcichemicals.com"
          SendMailTask:Subject="[Purchase] RFQ Analysis all data 出力エラー"
          SendMailTask:Priority="High"
          SendMailTask:MessageSourceType="Variable"
          SendMailTask:MessageSource="User::ErrorMessage" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[制約]"
      DTS:CreationName=""
      DTS:DTSID="{14DD0A9F-E13B-443A-AFAB-B56E1FFE2FEC}"
      DTS:From="Package\シーケンス コンテナー"
      DTS:LogicalAnd="True"
      DTS:ObjectName="制約"
      DTS:To="Package\メール送信タスク"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--この CDATA セクションにはパッケージのレイアウト情報が含まれています。(x,y) 座標、幅、高さなどの情報が含まれます。-->
<!--このセクションを手動で編集して間違った場合は、セクションを削除できます。-->
<!--パッケージは正常に読み込むことができますが、以前のレイアウト情報は失われ、デザイン画面上の要素が自動的に再配置されます。-->
<Objects
  Version="8">
  <!--次の各ノードには、実行時の動作に影響しないプロパティが含まれます。-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,44"
          Id="Package\シーケンス コンテナー\エクセルファイル出力"
          TopLeft="59.8867924528302,253.528301886792" />
        <NodeLayout
          Size="136,44"
          Id="Package\シーケンス コンテナー\仕入先ランクデータ作成"
          TopLeft="83.8867924528302,139.716981132075" />
        <NodeLayout
          Size="136,44"
          Id="Package\シーケンス コンテナー\仕入先指標データ作成"
          TopLeft="35.7358490566038,38.6603773584906" />
        <EdgeLayout
          Id="Package\シーケンス コンテナー.PrecedenceConstraints[制約]"
          TopLeft="103.622641509434,82.5849056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.1509433962264,57.1320754716981"
              Start="0,0"
              End="48.1509433962264,49.6320754716981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5660377358491" />
                  <mssgle:LineSegment
                    End="48.1509433962264,28.5660377358491" />
                  <mssgle:LineSegment
                    End="48.1509433962264,49.6320754716981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\シーケンス コンテナー.PrecedenceConstraints[制約 1]"
          TopLeft="151.77358490566,183.641509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24,69.8867924528302"
              Start="0,0"
              End="-24,62.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.9433962264151" />
                  <mssgle:LineSegment
                    End="-24,34.9433962264151" />
                  <mssgle:LineSegment
                    End="-24,62.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="268,378"
          Size="268,422"
          Id="Package\シーケンス コンテナー"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\メール送信タスク"
          TopLeft="445.688679245283,229.952830188679" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[制約]"
          TopLeft="273.084905660377,216.669811320755">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="172.603773584906,35.2452830188679"
              Start="0,0"
              End="165.103773584906,35.2452830188679">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="86.3018867924528,0" />
                  <mssgle:LineSegment
                    End="86.3018867924528,35.2452830188679" />
                  <mssgle:LineSegment
                    End="165.103773584906,35.2452830188679" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="75.7193672612028,-21.0087890625,21.1650390625,11.0087890625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>