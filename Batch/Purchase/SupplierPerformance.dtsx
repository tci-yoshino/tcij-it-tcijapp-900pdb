<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/12/2015 2:02:33 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TCIJ-N13051"
  DTS:CreatorName="TCIX\Masumi.Koyama"
  DTS:DTSID="{D4C3B75A-B13C-42EE-B6A6-48312244AE4D}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="1041"
  DTS:ObjectName="SupplierPerformance"
  DTS:PackageType="5"
  DTS:VersionBuild="89"
  DTS:VersionGUID="{4FAB30B4-2004-4B2A-99BB-9A986DF14527}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="C:\tcijapp\Purchase\Batch\Purchase\SupplierPerformance.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{D5230F8D-1EC8-41C6-90F7-A1284BB14096}"
      DTS:ObjectName="構成 1" />
    <DTS:Configuration
      DTS:ConfigurationString="C:\tcijapp\Purchase\Batch\Purchase\Purchase.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{C41B50F8-28C1-41AD-80EB-202FA179CB88}"
      DTS:ObjectName="構成 2" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B7E5CD0-2085-4F61-8722-43CA94239B94}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CommandTimeout">
      <DTS:VariableValue
        DTS:DataType="3">600</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0AC0FCFD-2396-4209-A45F-D1F56ADB6A6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source="(local)"; Initial Catalog=Purchase; User ID=Purchase; Password=n061t@kun;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4D653EDF-0CA3-41A5-88EB-661EF562CD9B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F552666D-AE2D-4997-96F1-7D5D583B790A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogDir">
      <DTS:VariableValue
        DTS:DataType="8">C:\tcijapp\Purchase\Batch\Log\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8008953B-AD08-4526-B590-A5BDE4B4FCB3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailFrom">
      <DTS:VariableValue
        DTS:DataType="8">app@tcichemicals.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{61767ED7-8C43-4586-B09F-51D71ADB2CA7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailTo">
      <DTS:VariableValue
        DTS:DataType="8">app@tcichemicals.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B710232-DA80-4BE1-9D0F-29A0769FED9F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputFilePath">
      <DTS:VariableValue
        DTS:DataType="8">\\TFL5\GlobalProject\Supplier_Evaluation\Data\RFQ Analysis all data (New).xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D40D3C66-1669-4185-98D7-133F6B876622}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPEndPoint">
      <DTS:VariableValue
        DTS:DataType="8">tcichemicals.smtps.jp</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{52CE08DD-CB25-4773-B8B8-894F5AA3429F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPPassword">
      <DTS:VariableValue
        DTS:DataType="8">nyWsT4NTF!tV</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FBA50234-6D66-4CA6-BAD9-ECB2A947977F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPPort">
      <DTS:VariableValue
        DTS:DataType="3">10025</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D7A1B888-C974-4175-B433-0F4579436270}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPUserName">
      <DTS:VariableValue
        DTS:DataType="8">cmc_tcijapp@tcichemicals.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{638B032E-7293-4A61-85A0-3159B4EF8CA1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TemplateFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\tcijapp\Purchase\Batch\template\RFQ Analysis all data.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">3,7,OnError,12,OnTaskFailed,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\エラーメール送信"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="スクリプト タスク"
      DTS:DTSID="{4E07A85A-4448-4B83-8F99-05EC062FAF71}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="エラーメール送信"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d8400f28c84a46409253dfb3e23e2b82"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadOnlyVariables="User::SMTPEndPoint, User::SMTPPort, User::SMTPUserName, User::SMTPPassword, User::MailFrom, User::MailTo, User::ErrorMessage">
          <ProjectItem
            Name="ST_d8400f28c84a46409253dfb3e23e2b82.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{224FCCF2-57D2-439E-9819-E564E814E951}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_d8400f28c84a46409253dfb3e23e2b82</RootNamespace>
    <AssemblyName>ST_d8400f28c84a46409253dfb3e23e2b82</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="MailKit">
      <HintPath>C:\Windows\Microsoft.NET\Framework\v4.0.30319\MailKit.dll</HintPath>
    </Reference>
    <Reference Include="MimeKit">
      <HintPath>C:\Windows\Microsoft.NET\Framework\v4.0.30319\MimeKit.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Buffers">
      <HintPath>C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Buffers.dll</HintPath>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Imports"
Imports MailKit
Imports MimeKit
Imports System.Text.RegularExpressions
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Private Const MAIL_SUBJECT As String = "[Purchase] RFQ Analysis All Data 出力エラー"

    Private smtpEndPoint As String = String.Empty
    Private smtpPort As Integer = 0
    Private smtpUserName As String = String.Empty
    Private smtpPassword As String = String.Empty
    Private mailFrom As String = String.Empty
    Private errorMessage As String = String.Empty

    ''' <summary>
    ''' メイン処理を行います。
    ''' </summary>
    Public Sub Main()

        Dts.TaskResult = ScriptResults.Success

        smtpEndPoint = Dts.Variables("SMTPEndPoint").Value.ToString
        smtpPort = Convert.ToInt32(Dts.Variables("SMTPPort").Value)
        smtpUserName = Dts.Variables("SMTPUserName").Value.ToString
        smtpPassword = Dts.Variables("SMTPPassword").Value.ToString
        mailFrom = Dts.Variables("MailFrom").Value.ToString
        errorMessage = Dts.Variables("ErrorMessage").Value.ToString

        Dim mailTo() As String = Regex.Split(Dts.Variables("MailTo").Value.ToString, ",|;")

        Try
            'メールを送信する
            SendMailSync(mailTo)

        Catch ex As Exception
            Dts.TaskResult = ScriptResults.Failure

        End Try

    End Sub

    ''' <summary>
    ''' メールを送信します。(同期バージョン)
    ''' </summary>
    Private Sub SendMailSync(ByVal mailTo() As String)

        Dim addressList As New InternetAddressList
        For Each address As String In mailTo
            addressList.Add(New MailboxAddress(address, address))
        Next

        Dim mailMsg As New MimeMessage
        mailMsg.From.Add(New MailboxAddress(mailFrom, mailFrom))
        mailMsg.To.AddRange(addressList)
        mailMsg.Subject = MAIL_SUBJECT
        mailMsg.Priority = MessagePriority.Urgent

        Dim bodyText As New TextPart(Text.TextFormat.Plain) With {
            .Text = errorMessage
        }
        mailMsg.Body = bodyText

        Using client As Net.Smtp.SmtpClient = New Net.Smtp.SmtpClient()
            client.Connect(smtpEndPoint, smtpPort)
            client.Authenticate(smtpUserName, smtpPassword)
            client.Send(mailMsg)
            client.Disconnect(True)
        End Using

    End Sub

    ''' <summary>
    ''' メールを送信します。(非同期バージョン・サーバ環境で動作しないため未使用)
    ''' </summary>
    Async Sub SendMailAsync(ByVal mailTo() As String)

        Dim addressList As New InternetAddressList
        For Each address As String In mailTo
            addressList.Add(New MailboxAddress(address, address))
        Next

        Dim mailMsg As New MimeMessage
        mailMsg.From.Add(New MailboxAddress(mailFrom, mailFrom))
        mailMsg.To.AddRange(addressList)
        mailMsg.Subject = MAIL_SUBJECT
        mailMsg.Priority = MessagePriority.Urgent

        Dim bodyText As New TextPart(Text.TextFormat.Plain) With {
            .Text = errorMessage
        }
        mailMsg.Body = bodyText

        Using client As Net.Smtp.SmtpClient = New Net.Smtp.SmtpClient()
            Await client.ConnectAsync(smtpEndPoint, smtpPort,)
            Await client.AuthenticateAsync(smtpUserName, smtpPassword)
            Await client.SendAsync(mailMsg)
            Await client.DisconnectAsync(True)
        End Using

    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_d8400f28c84a46409253dfb3e23e2b82")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_d8400f28c84a46409253dfb3e23e2b82")> 
<Assembly: AssemblyCopyright("Copyright @  2021")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("a7779177-77af-4a35-9eac-c5658d5851a2")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_d8400f28c84a46409253dfb3e23e2b82</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_d8400f28c84a46409253dfb3e23e2b82</msb:DisplayName>
		<msb:ProjectId>{B9485E2F-1790-44E2-8C97-EC7F549E0627}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d8400f28c84a46409253dfb3e23e2b82.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_d8400f28c84a46409253dfb3e23e2b82.dll">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
AAAAAAcAAAAdAwAAJAMAACQAAAAkAAABNgJ8FQAABAMoXwAACioAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAAFQKAAAjfgAAwAoAAGgNAAAjU3RyaW5ncwAAAAAoGAAAJAEAACNV
UwBMGQAAEAAAACNHVUlEAAAAXBkAAFQFAAAjQmxvYgAAAAAAAAACAAABVx+iCwkPAAAA+gEzABYA
AAEAAABIAAAACwAAABoAAAAdAAAABwAAAAEAAABfAAAAAwAAADoAAAAGAAAABAAAAAgAAAAJAAAA
AgAAAAgAAAABAAAABwAAAAEAAAAEAAAAAwAAAAQAAAAAAE4HAQAAAAAABgCSBWUKBgA3BmUKBgBO
BKYJDwALCwAABgCPBB8IBgB1BR8IBgAeBh8IBgCyBR8IBgDLBR8IBgDxBB8IBgDmBX8HBgB7BB8K
BgD3Ax8KBgA9BR8IBgAMBZEGCgAaBAcJCgDHAzgHCgBiBDgHDgB8A/UJDgBUCbkJBgAlBaYJDgCm
BD4KDgC+BDYBBgDzC38HDgAjCfUJDgBaBTYBBgAvA38HDgBMAPwGCgAFBK8HBgD3CIUKBgBWCAoI
CgCMA/UHBgAxBKYJEgD8BdMGEgBgA9MGBgA0CH8HFgCnDCMMFgA3AiMMFgB5DCMMGgBhDGIIBgCd
B4AGBgDWBGUKBgCYB38HBgDcA2UKBgAiA38HBgC/AmUKBgAoCWUKBgDcCGUKBgBuAn8HBgAeDR8I
BgCEC2UKBgCeCYAGBgCtBn8HEgAmB9MGHgAeC58CHgBZAp8CBgCIDH8HCgDkDFELDgAGAT4KFgCr
CyMMFgCbCyMMBgA+ABsBFgA0DSMMFgDiC8QMFgBVDSMMGgBwC0QNGgD3ASsMGgCZDCsMGgC6CysM
BgBiAn8HBgCHCX8HBgD3BjMLAAAAAKIAAAAAAAEAAQAAAAAA5wfqDE0AAQABAAAAAABSCeoMUQAB
AAIAAAEQAAYM6gxhAAEAAwAAAAAAxwqWCmEABQAIAAABEAAoC34AgQAHAAwAAQAAAMwHfgCNAAkA
DwAFAQAA5wkAAGEAEAATAAUBAABbAAAAYQAQABoAAgEAANQLAACtABEAHAADAQAAdQEAALUAFAAc
ADEAnAh+AjEAcwiGAjEAhwiOAjEAtQiWAhEAXQmeAhEAVAOiAhEAVQamAhEA7QuqAlGAygB8AAEA
bAx8AAEAkAytAgEAkgJ8AAEA4wF8AAEAjwd8AAEAQwJ8ACEA2gxnAQYG/gCtAlaAkwuwAlaANAOw
AgYAwAOtAgYA0wi0AgMARQi5AgMA8AG9AgMAAQDBAgMAIQDGAgMAHQDLAlAgAAAAAAYYkQkGAAEA
WCAAAAAABhiRCQYAAQBgIAAAAAARGJcJtQABAIogAAAAABMIRQnQAgEAliAAAAAAEwjXB9UCAQCi
IAAAAAATCB8J2gIBAK4gAAAAABMI1wnfAgEAuiAAAAAAAxiRCQYAAQDCIAAAAAAWCPMI5AIBAO4g
AAAAABYIPAPpAgEA9SAAAAAAFghIA+4CAQD9IAAAAAARGJcJtQACAA4hAAAAAAYYkQkGAAIAGCEA
AAAAFghdBvQCAgB0IQAAAAAGGJEJBgACAMghAAAAAAYA0gcGAAIAJCMAAAAAAQBMAfkCAgBAJAAA
AAAGAIgB+QIDAIckAAAAAMYCSgs/AQQAlSQAAAAAxgIrAkQBBQCdJAAAAACDACwD/wIFAKkkAAAA
AMYCqwaeAAUAtCQAAAAAEQDrAAQDBQDUJAAAAAABANcAMgEGALogAAAAAAYYkQkGAAcA4CQAAAAA
AwgSAlcABwAUJQAAAAAGGJEJBgAHACglAAAAAGMDuwwGAAcAyCgAAAAAYQPSAjQABwAAAAEAegYA
AAEATwgAAAEATwgAAAEAYAgAAAEAIgIAAAEAIgIAAAEAFQMLALkACQCRCQEAEQCRCQYAGQCRCQoA
KQCRCRAAMQCRCRAAOQCRCRAAQQCRCRAASQCRCRAAUQCRCRAAWQCRCRUAYQCRCRUAaQCRCRAAcQCR
CRAAeQCRCRAAgQCRCRoAkQCRCSAAqQCRCQYAsQCRCQYAuQCRCQYA0QCRCSYA6QCRCRAACQGRCQYA
EQGRCQYAUQGRCS4AYQGRCQYAcQG7DAYAcQEFAzQAmQCRCQYAoQCRCQYADACRCQYAFACRCQYAHACR
CQYAJACRCQYADAASAlcAFAASAlcAHAASAlcAJAASAlcAwQCRCQYA2QCAAlwA2QAaDWQA8QCRCWoA
mQFxBnIAAQGRCQYAoQE/CXcAoQE5DHcAGQGRCQYAqQFgDXwAGQHMC4cAsQE+DAEAsQEaC40AuQF2
B5MAwQFdBpoAwQCrBp4AyQF2AKIA0QEzDKcA2QF3Ca4A2QFlCbUAKQGRCQYA4QGRCRoAKQGzAc8A
MQGRCQYAMQGGB9YAMQE+CNYAKQFQAtwAMQH6CxAAMQEnDegAOQGRCe8AOQHRDBAAMQERDfYAQQGR
CQYAQQEQDP0AGQKsAwkBIQLeARIBQQEYDB8BMQKkAwYAgQG5AywBgQGCDDIBwQBKCz8BwQArAkQB
OQIDAlABNADaDGcBPABdBlcAPABnBn4BPACRCQYAQQGWAaQBQQI0CbIBeQHOAbgBgQG3AbwBeQFN
DAYAGQJjAc8BIQJZAdoBQQGjAekBgQExCPMBgQFXDAYAgQEFAzQADgAkACcCCABIAHQCCABMAHkC
KQCrAAsFLgALADQDLgATAD0DLgAbAFwDLgAjAGUDLgArAI4DLgAzAI4DLgA7AGUDLgBDAJQDLgBL
AI4DLgBTAKsDLgBbAI4DLgBjALEDLgBrANsDLgBzAOgDQACLAHkCQACDADIEQwB7AJAEQwCDADIE
SQCrABwFYwB7AJAEYwCDADIEaQCrADAFgACLAHkCgwCTAHkCgwCbAHkCgwB7AJAEiQCrAD0FoACL
AHkCqQCDAFwDwACLAHkCyQCDAFwD4ACLAHkC4wC7AHkC4wBTAI4D6QCzAHkCAwGDADIEAwGjAKkE
IwGDADIEIwFbAI4DYwHLAHkCQALDADsEYAKDADIEYAKLAHkCgAKDADIEgAKLAHkCoAKDADIEoAKL
AHkCwAKDADIEwAKLAHkC4AKLAHkCAAOLAHkCIAOLAHkCIAODADIEQAOLAHkCYAOLAHkCYAODADIE
gAPLAHkCfwC5ACcBSAFbAYQBBAABAAUABQAGAAcACQAIAAAAVAkMAwAA6QcRAwAAIwkWAwAA6Qkb
AwAA9wggAwAAWAMlAwAAegYqAwAAFgIvAwIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQALAAIA
CgANAAEACwANAAIADgAPAAIAGgARAAsAOAA1AAsAOgA3ADsAQgBJAFAATQFgAW8BdgEEgAAAAQAA
AAAAAAAAAAAAAAB+AAAABAAAAAAAAAAAAAAA+gESAQAAAAAEAAAAAAAAAAAAAAD6AX8HAAAAAAoA
AAAAAAAAAAAAAAMCNgEAAAAADQAAAAAAAAAAAAAADAK0BgAAAAACAAoAAAAAAAAAAAAVAiMMAAAA
AAIACgAAAAAAAAAAAB4CKwwAAAAADQAAAAAAAAAAAAAADAKrAAAAAAAAAAAAAQAAANMKAAAIAAQA
CQAEAAoABwALAAcAAAAQABIA1QAAABAALwDVAAAAAAAxANUAmwA6AaEAVgGhAHkBsQDHAQAAAAAA
JFZCJFJlc3VtYWJsZUxvY2FsX2NsaWVudCQwACRBMAAkVkIkUmVzdW1hYmxlTG9jYWxfbWFpbE1z
ZyQxAElFbnVtZXJhYmxlYDEAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVy
YDEAVG9JbnQzMgBTVF9kODQwMGYyOGM4NGE0NjQwOTI1M2RmYjNlMjNlMmI4MgA8TW9kdWxlPgBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATUFJTF9TVUJKRUNUAERpc3Bvc2VfX0luc3Rh
bmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAHZhbHVlX18AUHJvamVjdERhdGEAbXNjb3JsaWIAU3lz
dGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMATWljcm9zb2Z0LlZpc3VhbEJhc2ljAFNlbmRNYWlsU3lu
YwBTZW5kQXN5bmMAQXV0aGVudGljYXRlQXN5bmMAVkIkU3RhdGVNYWNoaW5lXzEwX1NlbmRNYWls
QXN5bmMAQ29ubmVjdEFzeW5jAERpc2Nvbm5lY3RBc3luYwBBZGQAQXdhaXRVbnNhZmVPbkNvbXBs
ZXRlZABnZXRfSXNDb21wbGV0ZWQAU2VuZABzbXRwUGFzc3dvcmQAJFZCJE1lAE1haWxTZXJ2aWNl
AENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBNaW1l
TWVzc2FnZQBlcnJvck1lc3NhZ2UAQWRkUmFuZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc210cFVzZXJOYW1lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUASUFzeW5jU3RhdGVNYWNoaW5lAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMuSUFzeW5jU3RhdGVNYWNoaW5lLlNldFN0YXRlTWFjaGluZQBzdGF0ZU1hY2hp
bmUAVmFsdWVUeXBlAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVz
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAQXV0aGVudGljYXRlAENyZWF0ZQAkU3RhdGUARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUAR3VpZEF0dHJpYnV0
ZQBIZWxwS2V5d29yZEF0dHJpYnV0ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0YW5kYXJk
TW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAEFzeW5jU3RhdGVNYWNoaW5l
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRl
AE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3Jp
cHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9i
amVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0
cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRl
cm5hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZDg0MDBmMjhj
ODRhNDY0MDkyNTNkZmIzZTIzZTJiODIuZGxsAGdldF9JdGVtAFN5c3RlbQBnZXRfRnJvbQBtYWls
RnJvbQBFbnVtAENhbmNlbGxhdGlvblRva2VuAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24A
U2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTZXRFeGNlcHRpb24A
Z2V0X1RvACRWQiRMb2NhbF9tYWlsVG8AQ3VsdHVyZUluZm8ATWFpbEtpdC5OZXQuU210cABtX0Fw
cE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92
aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgAkQnVpbGRlcgBBc3luY1ZvaWRNZXRo
b2RCdWlsZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0
X1VzZXIAVGFza0F3YWl0ZXIAR2V0QXdhaXRlcgBFbnRlcgBnZXRfQ29tcHV0ZXIATXlDb21wdXRl
cgBfcmVzTWdyAENsZWFyUHJvamVjdEVycm9yAFNldFByb2plY3RFcnJvcgBBY3RpdmF0b3IALmN0
b3IALmNjdG9yAE1vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxCYXNp
Yy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZDg0MDBmMjhjODRhNDY0MDkyNTNkZmIz
ZTIzZTJiODIuTXkuUmVzb3VyY2VzAE15UmVzb3VyY2VzAFNUX2Q4NDAwZjI4Yzg0YTQ2NDA5MjUz
ZGZiM2UyM2UyYjgyLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X1Zhcmlh
YmxlcwBNeVNldHRpbmdzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MARXF1YWxzAFN5c3RlbS5UZXh0
LlJlZ3VsYXJFeHByZXNzaW9ucwBTZWN1cmVTb2NrZXRPcHRpb25zAFJ1bnRpbWVIZWxwZXJzAFN1
Y2Nlc3MASW50ZXJuZXRBZGRyZXNzAE1haWxib3hBZGRyZXNzAElUcmFuc2ZlclByb2dyZXNzAGdl
dF9EdHMAU2NyaXB0UmVzdWx0cwBUZXh0Rm9ybWF0AG1fU3luY09iamVjdABzZXRfU3ViamVjdABN
eVByb2plY3QAQ29ubmVjdABEaXNjb25uZWN0AE1pbWVLaXQATWFpbEtpdABTcGxpdABFeGl0AHNl
dF9UYXNrUmVzdWx0AEdldFJlc3VsdABTZXRSZXN1bHQAU210cENsaWVudABzbXRwRW5kUG9pbnQA
VGV4dFBhcnQAU3RhcnQAQ29udmVydABzbXRwUG9ydABNYWlsVHJhbnNwb3J0AEludGVybmV0QWRk
cmVzc0xpc3QATW92ZU5leHQATWltZUtpdC5UZXh0AHNldF9UZXh0AG1fQ29udGV4dABSZWdleABT
VF9kODQwMGYyOGM4NGE0NjQwOTI1M2RmYjNlMjNlMmI4Mi5NeQBzZXRfQm9keQBnZXRfQXNzZW1i
bHkAc2V0X1ByaW9yaXR5AE1lc3NhZ2VQcmlvcml0eQBNYWlsS2l0LlNlY3VyaXR5AE1pbWVFbnRp
dHkARW1wdHkAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMA
ZQBzAAAZUwBNAFQAUABFAG4AZABQAG8AaQBuAHQAABFTAE0AVABQAFAAbwByAHQAABlTAE0AVABQ
AFUAcwBlAHIATgBhAG0AZQAAGVMATQBUAFAAUABhAHMAcwB3AG8AcgBkAAARTQBhAGkAbABGAHIA
bwBtAAAZRQByAHIAbwByAE0AZQBzAHMAYQBnAGUAAA1NAGEAaQBsAFQAbwAABywAfAA7AABNWwBQ
AHUAcgBjAGgAYQBzAGUAXQAgAFIARgBRACAAQQBuAGEAbAB5AHMAaQBzACAAQQBsAGwAIABEAGEA
dABhACAA+lGbUqgw6TD8MAEAhCFA/DsBA0inuJEnRXa3TgAEIAEBCAMgAAEFIAEBEREEIAEBDgQg
AQECBSACAQ4OBSABARFFByAEAQ4ODg4FIAEBEm0GIAEBEoC5BhUSJAESDAYVEiQBEggGFRIkARJl
BhUSJAESIAQgABMABwABEm0RgMUFIAASgMkHIAIBDhKAyQQAARwcBAABARwCBg4HBwIdDhKAkQUg
ABKA2QUgABKA3QYgARKA4RwDIAAcAyAADgQAAQgcBgACHQ4ODgYAAQESgJEDAAABFQcIEoCVEoCZ
EoCdHQ4IDhKAoRGApQYgAQESgPUFIAASgJULIAEBFRKA+QESgPUGIAEBEYD9BiABARGBAQYgAQES
gQULIAQBDggRgQkRgKUIIAMBDg4RgKUMIAMBEoCZEYClEoEVByACAQIRgKUEBwERLAUAABGAwQcw
AQEBEB4ABAoBESwEIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIkARMABwYVEnEB
EwAGFRJxARMAAhMABAoBEwAFIAEBEwAfBwwIEoCVEoCdHQ4IDhGAvRGApRGAvRGAvRGAvRKAkQ0g
BBKBIQ4IEYEJEYClBSAAEYC9AyAAAgowAgIBEB4AEB4BBwoCEYC9ESwKIAMSgSEODhGApQ4gAxKB
IRKAmRGApRKBFQkgAhKBIQIRgKUGIAEBEoCRCLd6XFYZNOCJCLA/X38R1Qo6CImEXc2AgMyRCL7e
HIpGxmgUCE4GT+fESo8bTFsAUAB1AHIAYwBoAGEAcwBlAF0AIABSAEYAUQAgAEEAbgBhAGwAeQBz
AGkAcwAgAEEAbABsACAARABhAHQAYQAgAPpRm1KoMOkw/DAEAAAAAAQBAAAABwYVEiQBEgwHBhUS
JAESCAcGFRIkARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgCBhwCBggDBhEoBAYRgMEDBh0OAwYSHAQG
EoChBAYSgJkEBhGAvQQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQESfQQAABIYBSAB
AR0OBCAAEm0HEAEBHgAeAAQIABIMBAgAEggECAASZQQIABIgBAgAEnkECAASfQQIABIYBCgAEwAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2Q4
NDAwZjI4Yzg0YTQ2NDA5MjUzZGZiM2UyM2UyYjgyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MjEAAAUBAAEAACkBACRhNzc3OTE3Ny03N2FmLTRhMzUtOWVhYy1jNTY1OGQ1ODUxYTIAAAwBAAcx
LjAuMC4wAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3Bs
YXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQgBAAEAAAAAAFQBAE9TVF9kODQwMGYyOGM4NGE0NjQw
OTI1M2RmYjNlMjNlMmI4Mi5TY3JpcHRNYWluK1ZCJFN0YXRlTWFjaGluZV8xMF9TZW5kTWFpbEFz
eW5jAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJv
dG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2Vf
X0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015
LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVz
b3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNl
cy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAGhIAAAAAAAAAAAAAIJI
AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0SAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA7AMA
AAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAA
ABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUA
AAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AZAA4
ADQAMAAwAGYAMgA4AGMAOAA0AGEANAA2ADQAMAA5ADIANQAzAGQAZgBiADMAZQAyADMAZQAyAGIA
OAAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAo
AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBkADgANAAwADAAZgAyADgAYwA4ADQA
YQA0ADYANAAwADkAMgA1ADMAZABmAGIAMwBlADIAMwBlADIAYgA4ADIALgBkAGwAbAAAAEgAEgAB
AEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAA
MgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGQAOAA0ADAAMABmADIA
OABjADgANABhADQANgA0ADAAOQAyADUAMwBkAGYAYgAzAGUAMgAzAGUAMgBiADgAMgAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBkADgANAAwADAAZgAyADgA
YwA4ADQAYQA0ADYANAAwADkAMgA1ADMAZABmAGIAMwBlADIAMwBlADIAYgA4ADIAAAA0AAgAAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMA
ZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAJQ4AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\シーケンス コンテナー"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="シーケンス コンテナー"
      DTS:DTSID="{3E88161D-8F22-42BA-8A2A-A6A68FB5B89C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="シーケンス コンテナー">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\シーケンス コンテナー\エクセルファイル出力"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="スクリプト タスク"
          DTS:DTSID="{503B42B0-574E-4F3A-BEA0-8F9FE6ED6665}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="エクセルファイル出力"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a2784740098a45c89c672d61dfb86d3d"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::ConnectionString, User::CommandTimeout, User::TemplateFilePath, User::OutputFilePath"
              ReadWriteVariables="User::ErrorMessage">
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Data
Imports System.Collections.Generic
Imports System.IO
Imports System.Reflection
Imports System.Text
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
	
    Dim connectionString As String = String.Empty
    Dim commandTimeout As Integer = 0
    Dim templateFilePath As String = String.Empty
    Dim outputFilePath As String = String.Empty

    ''' <summary>
    ''' メイン処理を行います。
    ''' </summary>
	Public Sub Main()

        connectionString = Dts.Variables("ConnectionString").Value.ToString
        commandTimeout = CInt(Dts.Variables("CommandTimeout").Value.ToString)
        templateFilePath = Dts.Variables("TemplateFilePath").Value.ToString
        outputFilePath = Dts.Variables("OutputFilePath").Value.ToString

        Dim sqlStr As New StringBuilder
        Dim sqlList As List(Of String) = New List(Of String)
        Dim sheetList As List(Of String) = New List(Of String)

        Try
            'ファイルが既に存在する場合は削除する
            If File.Exists(outputFilePath) Then
                File.Delete(outputFilePath)
            End If

            sqlStr = New StringBuilder
            sqlStr.AppendLine("WITH Y1 AS (")
            sqlStr.AppendLine("    SELECT")
            sqlStr.AppendLine("        S.SupplierCode,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.QN, 0)) AS QN_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.NQN, 0)) AS NQN_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.QS, 0)) AS QS_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.NQS, 0)) AS NQS_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PP, 0)) AS PP_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PPN, 0)) AS PPN_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PPS, 0)) AS PPS_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PPC, 0)) AS PPC_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PP2475, 0)) AS PP2475_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PPC, 0)) - SUM(ISNULL(Y1.PP2475, 0)) AS RC_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PA, 0)) AS PA_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PAR, 0)) AS PAR_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PAC, 0)) AS PAC_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PR, 0)) AS PR_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PRR, 0)) AS PRR_Y1,")
            sqlStr.AppendLine("        SUM(ISNULL(Y1.PRC, 0)) AS PRC_Y1")
            sqlStr.AppendLine("    FROM")
            sqlStr.AppendLine("        Supplier AS S")
            sqlStr.AppendLine("            LEFT OUTER JOIN TmpSupplierPerformance AS Y1 ON Y1.SupplierCode = S.SupplierCode AND Y1.CreateDate BETWEEN DATEADD(YEAR, -1, CONVERT(date, GETDATE())) AND DATEADD(DAY, -1, CONVERT(date, GETDATE()))")
            sqlStr.AppendLine("    GROUP BY")
            sqlStr.AppendLine("        S.SupplierCode")
            sqlStr.AppendLine("),")
            sqlStr.AppendLine("Y5 AS (")
            sqlStr.AppendLine("    SELECT")
            sqlStr.AppendLine("        S.SupplierCode,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.QN, 0)) AS QN_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.NQN, 0)) AS NQN_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.QS, 0)) AS QS_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.NQS, 0)) AS NQS_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PP, 0)) AS PP_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PPN, 0)) AS PPN_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PPS, 0)) AS PPS_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PPC, 0)) AS PPC_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PP2475, 0)) AS PP2475_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PPC, 0)) - SUM(ISNULL(Y5.PP2475, 0)) AS RC_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PA, 0)) AS PA_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PAR, 0)) AS PAR_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PAC, 0)) AS PAC_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PR, 0)) AS PR_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PRR, 0)) AS PRR_Y5,")
            sqlStr.AppendLine("        SUM(ISNULL(Y5.PRC, 0)) AS PRC_Y5")
            sqlStr.AppendLine("    FROM")
            sqlStr.AppendLine("        Supplier AS S")
            sqlStr.AppendLine("            LEFT OUTER JOIN TmpSupplierPerformance AS Y5 ON Y5.SupplierCode = S.SupplierCode AND Y5.CreateDate BETWEEN DATEADD(YEAR, -5, CONVERT(date, GETDATE())) AND DATEADD(DAY, -1, CONVERT(date, GETDATE()))")
            sqlStr.AppendLine("    GROUP BY")
            sqlStr.AppendLine("        S.SupplierCode")
            sqlStr.AppendLine("),")
            sqlStr.AppendLine("M3 AS (")
            sqlStr.AppendLine("    SELECT")
            sqlStr.AppendLine("        S.SupplierCode,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.QN, 0)) AS QN_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.NQN, 0)) AS NQN_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.QS, 0)) AS QS_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.NQS, 0)) AS NQS_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PP, 0)) AS PP_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PPN, 0)) AS PPN_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PPS, 0)) AS PPS_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PPC, 0)) AS PPC_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PP2475, 0)) AS PP2475_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PPC, 0)) - SUM(ISNULL(M3.PP2475, 0)) AS RC_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PA, 0)) AS PA_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PAR, 0)) AS PAR_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PAC, 0)) AS PAC_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PR, 0)) AS PR_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PRR, 0)) AS PRR_M3,")
            sqlStr.AppendLine("        SUM(ISNULL(M3.PRC, 0)) AS PRC_M3")
            sqlStr.AppendLine("    FROM")
            sqlStr.AppendLine("        Supplier AS S")
            sqlStr.AppendLine("            LEFT OUTER JOIN TmpSupplierPerformance AS M3 ON M3.SupplierCode = S.SupplierCode AND M3.CreateDate BETWEEN DATEADD(MONTH, -3, CONVERT(date, GETDATE())) AND DATEADD(DAY, -1, CONVERT(date, GETDATE()))")
            sqlStr.AppendLine("    GROUP BY")
            sqlStr.AppendLine("        S.SupplierCode")
            sqlStr.AppendLine(")")
            sqlStr.AppendLine("SELECT")
            sqlStr.AppendLine("    S.SupplierCode AS [Suplier Code],")
            sqlStr.AppendLine("    S.R3SupplierCode AS [TCI-J Supplier Code],")
            sqlStr.AppendLine("    LTRIM(RTRIM(ISNULL(S.Name3, '') + ' ' + ISNULL(S.Name4, ''))) AS [Supplier Name],")
            sqlStr.AppendLine("    C.Name AS [Country],")
            sqlStr.AppendLine("    CASE WHEN PA_Y5 + PR_Y5 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PA_Y5 / (PA_Y5 + PR_Y5), 2)) END AS [Pass rate (%) - Quality],")
            sqlStr.AppendLine("    CASE WHEN QN_Y5 + QS_Y5 - (NQN_Y5 + NQS_Y5) = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND((PPN_Y5 + PPS_Y5) / (QN_Y5 + QS_Y5 - (NQN_Y5 + NQS_Y5)), 2)) END AS [Buying rate (%) - Competitiveness],")
            sqlStr.AppendLine("    CASE WHEN QS_Y5 - NQS_Y5 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPS_Y5 / (QS_Y5 - NQS_Y5), 2)) END AS [Buying rate (%) (for Stock, for Raw Material)],")
            sqlStr.AppendLine("    CASE WHEN QN_Y5 - NQN_Y5 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPN_Y5 / (QN_Y5 - NQN_Y5), 2)) END AS [Buying rate (%) (for New)],")
            sqlStr.AppendLine("    CASE WHEN PP_Y5 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(RC_Y5 / PP_Y5, 2)) END AS [Cancel rate (%) - Cancel],")
            sqlStr.AppendLine("    CONVERT(int, QN_Y5 + QS_Y5) AS [RFQ],")
            sqlStr.AppendLine("    CONVERT(int, (QN_Y5 + QS_Y5) - (NQN_Y5 + NQS_Y5)) AS [RFQ (Price exist)],")
            sqlStr.AppendLine("    CONVERT(int, PPN_Y5 + PPS_Y5) AS [Par-PO],")
            sqlStr.AppendLine("    CASE WHEN PA_Y1 + PR_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PA_Y1 / (PA_Y1 + PR_Y1), 2)) END AS [Pass rate (%) - Quality (current)],")
            sqlStr.AppendLine("    CASE WHEN QN_Y1 + QS_Y1 - (NQN_Y1 + NQS_Y1) = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND((PPN_Y1 + PPS_Y1) / (QN_Y1 + QS_Y1 - (NQN_Y1 + NQS_Y1)), 2)) END AS [Buying rate (%) - Competitiveness (current)],")
            sqlStr.AppendLine("    CASE WHEN QS_Y1 - NQS_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPS_Y1 / (QS_Y1 - NQS_Y1), 2)) END AS [Buying rate (%) (for Stock, for Raw Material) (current)],")
            sqlStr.AppendLine("    CASE WHEN QN_Y1 - NQN_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPN_Y1 / (QN_Y1 - NQN_Y1), 2)) END AS [Buying rate (%) (for New) (current)],")
            sqlStr.AppendLine("    CASE WHEN PP_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(RC_Y1 / PP_Y1, 2)) END AS [Cancel rate (%) - Cancel (current)],")
            sqlStr.AppendLine("    CONVERT(int, QN_Y1 + QS_Y1) AS [RFQ (current)],")
            sqlStr.AppendLine("    CONVERT(int, (QN_Y1 + QS_Y1) - (NQN_Y1 + NQS_Y1)) AS [RFQ (Price exist, current)],")
            sqlStr.AppendLine("    CONVERT(int, PPN_Y1 + PPS_Y1) AS [Par-PO (current)],")
            sqlStr.AppendLine("    PPC_Y5 AS [PO Cancel],")
            sqlStr.AppendLine("    PP2475_Y5 AS [2475 PO],")
            sqlStr.AppendLine("    PPC_Y1 AS [PO Cancel (current)],")
            sqlStr.AppendLine("    PP2475_Y1 AS [2475 PO (current)],")
            sqlStr.AppendLine("    CASE WHEN PA_M3 + PR_M3 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PA_M3 / (PA_M3 + PR_M3), 2)) END AS [Pass rate (%) - Quality (the latest 3 months)],")
            sqlStr.AppendLine("    CASE WHEN QN_M3 + QS_M3 - (NQN_M3 + NQS_M3) = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND((PPN_M3 + PPS_M3) / (QN_M3 + QS_M3 - (NQN_M3 + NQS_M3)), 2)) END AS [Buying rate (%) - Competitiveness (the latest 3 months)],")
            sqlStr.AppendLine("    CASE WHEN QS_M3 - NQS_M3 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPS_M3 / (QS_M3 - NQS_M3), 2)) END AS [Buying rate (%) (for Stock, for Raw Material) (the latest 3 months)],")
            sqlStr.AppendLine("    CASE WHEN QN_M3 - NQN_M3 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PPN_M3 / (QN_M3 - NQN_M3), 2)) END AS [Buying rate (%) (for New) (the latest 3 months)],")
            sqlStr.AppendLine("    CASE WHEN PP_M3 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(RC_M3 / PP_M3, 2)) END AS [Cancel rate (%) - Cancel (the latest 3 months)],")
            sqlStr.AppendLine("    CONVERT(int, QN_M3 + QS_M3) AS [RFQ (the latest 3 months)],")
            sqlStr.AppendLine("    CONVERT(int, (QN_M3 + QS_M3) - (NQN_M3 + NQS_M3)) AS [RFQ (Price exist, the latest 3 months)],")
            sqlStr.AppendLine("    CONVERT(int, PPN_M3 + PPS_M3) AS [Par-PO (the latest 3 months)],")
            sqlStr.AppendLine("    PPC_M3 AS [PO Cancel (the latest 3 months)],")
            sqlStr.AppendLine("    PP2475_M3 AS [2475 PO (the latest 3 months)],")
            sqlStr.AppendLine("    CASE WHEN (PA_Y5 - PAR_Y5) + (PR_Y5 - PRR_Y5) = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND((PA_Y5 - PAR_Y5) / ((PA_Y5 - PAR_Y5) + (PR_Y5 - PRR_Y5)), 2)) END AS [Pass rate (%) - except Raw Material],")
            sqlStr.AppendLine("    CASE WHEN (PA_Y1 - PAR_Y1) + (PR_Y1 - PRR_Y1) = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND((PA_Y1 - PAR_Y1) / ((PA_Y1 - PAR_Y1) + (PR_Y1 - PRR_Y1)), 2)) END AS [Pass rate (%) - except Raw Material (current)],")
            sqlStr.AppendLine("    CASE WHEN (PA_M3 - PAR_M3) + (PR_M3 - PRR_M3) = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND((PA_M3 - PAR_M3) / ((PA_M3 - PAR_M3) + (PR_M3 - PRR_M3)), 2)) END AS [Pass rate (%) - except Raw Material (the latest 3 months)],")
            sqlStr.AppendLine("    CASE WHEN PAC_Y5 + PRC_Y5 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PAC_Y5 / (PAC_Y5 + PRC_Y5), 2)) END AS [Pass rate (%) - for Customer],")
            sqlStr.AppendLine("    CASE WHEN PAC_Y1 + PRC_Y1 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PAC_Y1 / (PAC_Y1 + PRC_Y1), 2)) END AS [Pass rate (%) - for Customer (current)],")
            sqlStr.AppendLine("    CASE WHEN PAC_M3 + PRC_M3 = 0 THEN 0 ELSE CONVERT(decimal(18,2), ROUND(PAC_M3 / (PAC_M3 + PRC_M3), 2)) END AS [Pass rate (%) - for Customer (the latest 3 months)],")
            sqlStr.AppendLine("    R.Name AS [Region],")
            sqlStr.AppendLine("    RTRIM(LTRIM(ISNULL(Address1, '') + ' ' + ISNULL(Address2, '') + ' ' + ISNULL(Address3, ''))) AS [Address],")
            sqlStr.AppendLine("    S.Website")
            sqlStr.AppendLine("FROM")
            sqlStr.AppendLine("    Y1,")
            sqlStr.AppendLine("    Y5,")
            sqlStr.AppendLine("    M3,")
            sqlStr.AppendLine("    s_Country AS C,")
            sqlStr.AppendLine("    Supplier AS S")
            sqlStr.AppendLine("        LEFT OUTER JOIN s_Region AS R ON R.CountryCode = S.CountryCode AND R.RegionCode = S.RegionCode")
            sqlStr.AppendLine("WHERE")
            sqlStr.AppendLine("    S.CountryCode = C.CountryCode")
            sqlStr.AppendLine("    AND S.SupplierCode = Y5.SupplierCode")
            sqlStr.AppendLine("    AND Y5.SupplierCode = Y1.SupplierCode")
            sqlStr.AppendLine("    AND Y1.SupplierCode = M3.SupplierCode")
            sqlStr.AppendLine("ORDER BY")
            sqlStr.AppendLine("    S.SupplierCode")

            sqlList.Add(sqlStr.ToString)
            sheetList.Add("Sheet1")

            'テンプレートファイルを出力先に上書きコピーする
            File.Copy(templateFilePath, outputFilePath, True)

            Dim domain As AppDomain = AppDomain.CreateDomain("MyDomain")
            Dim obj = domain.CreateInstanceAndUnwrap("TCIOpenXML", "TCIOpenXML.TCIOpenXML")

            Dim info As MethodInfo = obj.GetType().GetMethod("CreateOpenXML", _
                                                                New Type() {GetType(String), _
                                                                            GetType(List(Of String)), _
                                                                            GetType(String), _
                                                                            GetType(List(Of String)), _
                                                                            GetType(Boolean), _
                                                                            GetType(Integer)})

            info.Invoke(obj, New Object() {connectionString, _
                                           sqlList, _
                                           outputFilePath, _
                                           sheetList, _
                                           True, _
                                           commandTimeout})

        Catch ex As Exception
            Dts.TaskResult = ScriptResults.Failure
            SetErrorMessage(ex)

            Throw ex

        End Try

        Dts.TaskResult = ScriptResults.Success

	End Sub

    ''' <summary>
    ''' ユーザ変数にエラーメッセージを設定します。
    ''' </summary>
    Private Sub SetErrorMessage(ByVal ex As Exception)

        Dim msgStr As New StringBuilder

        msgStr.AppendLine("Company Performance データの出力において、システムエラーが発生しました。")
        msgStr.AppendLine()
        msgStr.AppendLine("実行パス：")
        msgStr.AppendLine(System.Environment.CommandLine)
        msgStr.AppendLine()
        msgStr.AppendLine("エラーメッセージ：")

        If ex.InnerException Is Nothing Then
            msgStr.AppendLine(ex.Message)
            msgStr.AppendLine(ex.StackTrace)
        Else
            msgStr.AppendLine(ex.InnerException.Message)
            msgStr.AppendLine(ex.InnerException.StackTrace)
        End If

        Dts.Variables("ErrorMessage").Value = msgStr.ToString

    End Sub

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="st_a2784740098a45c89c672d61dfb86d3d.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_a2784740098a45c89c672d61dfb86d3d.vbproj</RootNamespace>
    <AssemblyName>ST_a2784740098a45c89c672d61dfb86d3d.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{4DCA1405-E28C-4E54-A6C5-B281F92CD20B}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_a2784740098a45c89c672d61dfb86d3d</msb:CodeName>
		<msb:DisplayName>st_a2784740098a45c89c672d61dfb86d3d</msb:DisplayName>
		<msb:ProjectId>{0D054E32-2811-47F2-A7F1-2949AA8066C9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_a2784740098a45c89c672d61dfb86d3d.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_a2784740098a45c89c672d61dfb86d3d.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_a2784740098a45c89c672d61dfb86d3d.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2016")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("2f12205d-8a1e-466d-b1ee-60e43d8c3d52")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_a2784740098a45c89c672d61dfb86d3d.vbproj.dll">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
BgAGAAAAAQDJBAAAAQBgCgAAAQAGBwAAAQAdAQAAAQAdAQkADQgBABEADQgGABkADQgKACkADQgQ
ADEADQgQADkADQgQAEEADQgQAEkADQgQAFEADQgQAFkADQgVAGEADQgVAGkADQgQAHEADQgQAHkA
DQgQAIEADQgaAJEADQggAKkADQgGALEADQgGALkADQgGANEADQgmAOkADQgQAAkBDQgGABEBDQgG
AJkADQgGAKEADQgGAAwADQgGABQADQgGABwADQgGACQADQgGAAwADQFKABQADQFKABwADQFKACQA
DQFKAMEADQgGANkAcAFPANkAkQpXAPEADQhdAFEBwARlAAEBDQgGAFkBzQdqAFkBGwpqABkBDQgG
AGEBowpvABkB5wmIAGkBpAmOAHEBKAaUAHkBrASbAMEACwWfAIEBogejACEBDQgGACwADQgGAIkB
/QmvAIkBWgK0ACEBtwG5ACEBCwWfACwA4QDAAIkBngrGAJEBbQbNAJEBCAfUAMEAwgHaANkA5QDf
ALEBTgHpALkB8wfwAGkBIAoBACEBtwH9AMEBpwEDATEB3gYHATEBMgGfADEB7wCfAHkBtgQNAcEA
vQkSAcEAJgEXAckB/gAjATwAVgo6AUQArARKAEQAtgTAAEQADQgGAAgAPABsAQgAQABxASkAqwCf
Ay4ACwAYAi4AEwAhAi4AGwBAAi4AIwBJAi4AKwB5Ai4AMwB5Ai4AOwBJAi4AQwB/Ai4ASwB5Ai4A
UwCWAi4AWwB5Ai4AYwCcAi4AawDGAi4AcwDTAkAAiwBxAUAAgwAbA0MAewAkA0MAgwAbA0kAqwCw
A2MAewAkA2MAgwAbA2kAqwDEA4AAiwBxAYMAkwBxAYMAmwBxAYMAewAkA4kAqwDRA6AAiwBxAakA
gwBAAsAAiwBxAckAgwBAAuAAiwBxAeMAuwBxAeMAUwB5AukAswBxAQMBgwAbAwMBowA9AyMBgwAb
AyMBWwB5AkACgwAbA0ACiwBxAWACgwAbA2ACiwBxAYACgwAbA4ACiwBxAaACgwAbA6ACiwBxAcAC
iwBxAeACiwBxAQADiwBxAQADgwAbAyADiwBxAUADiwBxAUADgwAbA3IA9wAbAS4BBAABAAUABQAG
AAcACQAIAAAA4gfwAQAAlgb1AQAAyAf6AQAAZQj/AQAAkgcEAgAA7gEJAgAAyQQOAgAAEQETAgIA
BAADAAIABQAFAAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwANAAIADgAPAAIAGQARAC4ANQA8
AEMAqAAgATMBQgFJAQSAAAABAAAAAAAAAAAAAAAAADQFAAAEAAAAAAAAAAAAAABRAacAAAAAAAQA
AAAAAAAAAAAAAFEBMQYAAAAACgAAAAAAAAAAAAAAWgHLAAAAAAANAAAAAAAAAAAAAABjAV8FAAAA
AA0AAAAAAAAAAAAAAGMBSwAAAAAAAAAAAAEAAABWCQAACAAEAAkABAAKAAcAAAAQABIAagAAABAA
LQBqAAAAAAAvAGoAkwApAZMATAEAAAAAAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQ
cm92aWRlcmAxAExpc3RgMQBJbnQzMgA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVfX0luc3RhbmNlX18A
dmFsdWVfXwBQcm9qZWN0RGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMAQWRkAEdldE1ldGhvZABnZXRfU3RhY2tUcmFjZQBDcmVhdGVJ
bnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UAaW5zdGFuY2UAR2V0SGFzaENvZGUAZ2V0X01lc3NhZ2UA
U2V0RXJyb3JNZXNzYWdlAEludm9rZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAZ2V0X0NvbW1h
bmRMaW5lAEFwcGVuZExpbmUAR2V0VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AF9yZXNDdWx0dXJlAE1ldGhvZEJhc2UAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBE
ZWxldGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0ZQBHZW5lcmF0ZWRDb2RlQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1
Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAE15R3JvdXBD
b2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVl
AFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBjb25uZWN0aW9uU3Ry
aW5nAFRvU3RyaW5nAHRlbXBsYXRlRmlsZVBhdGgAb3V0cHV0RmlsZVBhdGgAU1RfYTI3ODQ3NDAw
OThhNDVjODljNjcyZDYxZGZiODZkM2QudmJwcm9qAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE1pY3Jvc29mdC5W
aXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTVF9hMjc4NDc0MDA5OGE0NWM4OWM2NzJkNjFkZmI4NmQzZC52YnByb2ou
ZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAEJvb2xlYW4AU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRl
c2lnbgBTY3JpcHRNYWluAENyZWF0ZURvbWFpbgBBcHBEb21haW4AZ2V0X0FwcGxpY2F0aW9uAE15
QXBwbGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24AZ2V0X0lubmVyRXhjZXB0aW9uAE1ldGhvZEluZm8AQ3VsdHVyZUluZm8A
Q3JlYXRlSW5zdGFuY2VBbmRVbndyYXAAbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQ
cm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJv
dmlkZXIAU3RyaW5nQnVpbGRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFRvSW50ZWdlcgBTeXN0ZW0u
Q29kZURvbS5Db21waWxlcgBnZXRfVXNlcgBFbnRlcgBnZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBf
cmVzTWdyAFNldFByb2plY3RFcnJvcgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2
aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZp
Y2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU1RfYTI3ODQ3NDAwOThhNDVjODljNjcyZDYxZGZiODZkM2QudmJwcm9qLk15LlJl
c291cmNlcwBNeVJlc291cmNlcwBTVF9hMjc4NDc0MDA5OGE0NWM4OWM2NzJkNjFkZmI4NmQzZC52
YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfVmFyaWFibGVzAE15
U2V0dGluZ3MARXF1YWxzAENvbnZlcnNpb25zAFJ1bnRpbWVIZWxwZXJzAFN1Y2Nlc3MAZ2V0X0R0
cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBtX1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rh
c2tSZXN1bHQARW52aXJvbm1lbnQAY29tbWFuZFRpbWVvdXQAU3lzdGVtLlRleHQAbV9Db250ZXh0
AGV4AFNUX2EyNzg0NzQwMDk4YTQ1Yzg5YzY3MmQ2MWRmYjg2ZDNkLnZicHJvai5NeQBnZXRfQXNz
ZW1ibHkAQ29weQBFbXB0eQAAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBz
AG8AdQByAGMAZQBzAAAhQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAHUMAbwBtAG0A
YQBuAGQAVABpAG0AZQBvAHUAdAAAIVQAZQBtAHAAbABhAHQAZQBGAGkAbABlAFAAYQB0AGgAAB1P
AHUAdABwAHUAdABGAGkAbABlAFAAYQB0AGgAABlXAEkAVABIACAAWQAxACAAQQBTACAAKAAAFSAA
IAAgACAAUwBFAEwARQBDAFQAAC8gACAAIAAgACAAIAAgACAAUwAuAFMAdQBwAHAAbABpAGUAcgBD
AG8AZABlACwAAE8gACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAuAFEA
TgAsACAAMAApACkAIABBAFMAIABRAE4AXwBZADEALAAAUyAAIAAgACAAIAAgACAAIABTAFUATQAo
AEkAUwBOAFUATABMACgAWQAxAC4ATgBRAE4ALAAgADAAKQApACAAQQBTACAATgBRAE4AXwBZADEA
LAAATyAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABMACgAWQAxAC4AUQBTACwAIAAw
ACkAKQAgAEEAUwAgAFEAUwBfAFkAMQAsAABTIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4A
VQBMAEwAKABZADEALgBOAFEAUwAsACAAMAApACkAIABBAFMAIABOAFEAUwBfAFkAMQAsAABPIAAg
ACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADEALgBQAFAALAAgADAAKQApACAA
QQBTACAAUABQAF8AWQAxACwAAFMgACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAo
AFkAMQAuAFAAUABOACwAIAAwACkAKQAgAEEAUwAgAFAAUABOAF8AWQAxACwAAFMgACAAIAAgACAA
IAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAuAFAAUABTACwAIAAwACkAKQAgAEEAUwAg
AFAAUABTAF8AWQAxACwAAFMgACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkA
MQAuAFAAUABDACwAIAAwACkAKQAgAEEAUwAgAFAAUABDAF8AWQAxACwAAF8gACAAIAAgACAAIAAg
ACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAuAFAAUAAyADQANwA1ACwAIAAwACkAKQAgAEEA
UwAgAFAAUAAyADQANwA1AF8AWQAxACwAAICJIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4A
VQBMAEwAKABZADEALgBQAFAAQwAsACAAMAApACkAIAAtACAAUwBVAE0AKABJAFMATgBVAEwATAAo
AFkAMQAuAFAAUAAyADQANwA1ACwAIAAwACkAKQAgAEEAUwAgAFIAQwBfAFkAMQAsAAFPIAAgACAA
IAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADEALgBQAEEALAAgADAAKQApACAAQQBT
ACAAUABBAF8AWQAxACwAAFMgACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkA
MQAuAFAAQQBSACwAIAAwACkAKQAgAEEAUwAgAFAAQQBSAF8AWQAxACwAAFMgACAAIAAgACAAIAAg
ACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAuAFAAQQBDACwAIAAwACkAKQAgAEEAUwAgAFAA
QQBDAF8AWQAxACwAAE8gACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkAMQAu
AFAAUgAsACAAMAApACkAIABBAFMAIABQAFIAXwBZADEALAAAUyAAIAAgACAAIAAgACAAIABTAFUA
TQAoAEkAUwBOAFUATABMACgAWQAxAC4AUABSAFIALAAgADAAKQApACAAQQBTACAAUABSAFIAXwBZ
ADEALAAAUSAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABMACgAWQAxAC4AUABSAEMA
LAAgADAAKQApACAAQQBTACAAUABSAEMAXwBZADEAABEgACAAIAAgAEYAUgBPAE0AACsgACAAIAAg
ACAAIAAgACAAUwB1AHAAcABsAGkAZQByACAAQQBTACAAUwAAgaMgACAAIAAgACAAIAAgACAAIAAg
ACAAIABMAEUARgBUACAATwBVAFQARQBSACAASgBPAEkATgAgAFQAbQBwAFMAdQBwAHAAbABpAGUA
cgBQAGUAcgBmAG8AcgBtAGEAbgBjAGUAIABBAFMAIABZADEAIABPAE4AIABZADEALgBTAHUAcABw
AGwAaQBlAHIAQwBvAGQAZQAgAD0AIABTAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABBAE4A
RAAgAFkAMQAuAEMAcgBlAGEAdABlAEQAYQB0AGUAIABCAEUAVABXAEUARQBOACAARABBAFQARQBB
AEQARAAoAFkARQBBAFIALAAgAC0AMQAsACAAQwBPAE4AVgBFAFIAVAAoAGQAYQB0AGUALAAgAEcA
RQBUAEQAQQBUAEUAKAApACkAKQAgAEEATgBEACAARABBAFQARQBBAEQARAAoAEQAQQBZACwAIAAt
ADEALAAgAEMATwBOAFYARQBSAFQAKABkAGEAdABlACwAIABHAEUAVABEAEEAVABFACgAKQApACkA
ARkgACAAIAAgAEcAUgBPAFUAUAAgAEIAWQAALSAAIAAgACAAIAAgACAAIABTAC4AUwB1AHAAcABs
AGkAZQByAEMAbwBkAGUAAAUpACwAAA9ZADUAIABBAFMAIAAoAABPIAAgACAAIAAgACAAIAAgAFMA
VQBNACgASQBTAE4AVQBMAEwAKABZADUALgBRAE4ALAAgADAAKQApACAAQQBTACAAUQBOAF8AWQA1
ACwAAFMgACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkANQAuAE4AUQBOACwA
IAAwACkAKQAgAEEAUwAgAE4AUQBOAF8AWQA1ACwAAE8gACAAIAAgACAAIAAgACAAUwBVAE0AKABJ
AFMATgBVAEwATAAoAFkANQAuAFEAUwAsACAAMAApACkAIABBAFMAIABRAFMAXwBZADUALAAAUyAA
IAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABMACgAWQA1AC4ATgBRAFMALAAgADAAKQAp
ACAAQQBTACAATgBRAFMAXwBZADUALAAATyAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUA
TABMACgAWQA1AC4AUABQACwAIAAwACkAKQAgAEEAUwAgAFAAUABfAFkANQAsAABTIAAgACAAIAAg
ACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUALgBQAFAATgAsACAAMAApACkAIABBAFMA
IABQAFAATgBfAFkANQAsAABTIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZ
ADUALgBQAFAAUwAsACAAMAApACkAIABBAFMAIABQAFAAUwBfAFkANQAsAABTIAAgACAAIAAgACAA
IAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUALgBQAFAAQwAsACAAMAApACkAIABBAFMAIABQ
AFAAQwBfAFkANQAsAABfIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUA
LgBQAFAAMgA0ADcANQAsACAAMAApACkAIABBAFMAIABQAFAAMgA0ADcANQBfAFkANQAsAACAiSAA
IAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABMACgAWQA1AC4AUABQAEMALAAgADAAKQAp
ACAALQAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUALgBQAFAAMgA0ADcANQAsACAAMAApACkA
IABBAFMAIABSAEMAXwBZADUALAABTyAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABM
ACgAWQA1AC4AUABBACwAIAAwACkAKQAgAEEAUwAgAFAAQQBfAFkANQAsAABTIAAgACAAIAAgACAA
IAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUALgBQAEEAUgAsACAAMAApACkAIABBAFMAIABQ
AEEAUgBfAFkANQAsAABTIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUA
LgBQAEEAQwAsACAAMAApACkAIABBAFMAIABQAEEAQwBfAFkANQAsAABPIAAgACAAIAAgACAAIAAg
AFMAVQBNACgASQBTAE4AVQBMAEwAKABZADUALgBQAFIALAAgADAAKQApACAAQQBTACAAUABSAF8A
WQA1ACwAAFMgACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAFkANQAuAFAAUgBS
ACwAIAAwACkAKQAgAEEAUwAgAFAAUgBSAF8AWQA1ACwAAFEgACAAIAAgACAAIAAgACAAUwBVAE0A
KABJAFMATgBVAEwATAAoAFkANQAuAFAAUgBDACwAIAAwACkAKQAgAEEAUwAgAFAAUgBDAF8AWQA1
AACBoyAAIAAgACAAIAAgACAAIAAgACAAIAAgAEwARQBGAFQAIABPAFUAVABFAFIAIABKAE8ASQBO
ACAAVABtAHAAUwB1AHAAcABsAGkAZQByAFAAZQByAGYAbwByAG0AYQBuAGMAZQAgAEEAUwAgAFkA
NQAgAE8ATgAgAFkANQAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAPQAgAFMALgBTAHUAcABw
AGwAaQBlAHIAQwBvAGQAZQAgAEEATgBEACAAWQA1AC4AQwByAGUAYQB0AGUARABhAHQAZQAgAEIA
RQBUAFcARQBFAE4AIABEAEEAVABFAEEARABEACgAWQBFAEEAUgAsACAALQA1ACwAIABDAE8ATgBW
AEUAUgBUACgAZABhAHQAZQAsACAARwBFAFQARABBAFQARQAoACkAKQApACAAQQBOAEQAIABEAEEA
VABFAEEARABEACgARABBAFkALAAgAC0AMQAsACAAQwBPAE4AVgBFAFIAVAAoAGQAYQB0AGUALAAg
AEcARQBUAEQAQQBUAEUAKAApACkAKQABD00AMwAgAEEAUwAgACgAAE8gACAAIAAgACAAIAAgACAA
UwBVAE0AKABJAFMATgBVAEwATAAoAE0AMwAuAFEATgAsACAAMAApACkAIABBAFMAIABRAE4AXwBN
ADMALAAAUyAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABMACgATQAzAC4ATgBRAE4A
LAAgADAAKQApACAAQQBTACAATgBRAE4AXwBNADMALAAATyAAIAAgACAAIAAgACAAIABTAFUATQAo
AEkAUwBOAFUATABMACgATQAzAC4AUQBTACwAIAAwACkAKQAgAEEAUwAgAFEAUwBfAE0AMwAsAABT
IAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABNADMALgBOAFEAUwAsACAAMAAp
ACkAIABBAFMAIABOAFEAUwBfAE0AMwAsAABPIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4A
VQBMAEwAKABNADMALgBQAFAALAAgADAAKQApACAAQQBTACAAUABQAF8ATQAzACwAAFMgACAAIAAg
ACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAE0AMwAuAFAAUABOACwAIAAwACkAKQAgAEEA
UwAgAFAAUABOAF8ATQAzACwAAFMgACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAo
AE0AMwAuAFAAUABTACwAIAAwACkAKQAgAEEAUwAgAFAAUABTAF8ATQAzACwAAFMgACAAIAAgACAA
IAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAE0AMwAuAFAAUABDACwAIAAwACkAKQAgAEEAUwAg
AFAAUABDAF8ATQAzACwAAF8gACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAE0A
MwAuAFAAUAAyADQANwA1ACwAIAAwACkAKQAgAEEAUwAgAFAAUAAyADQANwA1AF8ATQAzACwAAICJ
IAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBMAEwAKABNADMALgBQAFAAQwAsACAAMAAp
ACkAIAAtACAAUwBVAE0AKABJAFMATgBVAEwATAAoAE0AMwAuAFAAUAAyADQANwA1ACwAIAAwACkA
KQAgAEEAUwAgAFIAQwBfAE0AMwAsAAFPIAAgACAAIAAgACAAIAAgAFMAVQBNACgASQBTAE4AVQBM
AEwAKABNADMALgBQAEEALAAgADAAKQApACAAQQBTACAAUABBAF8ATQAzACwAAFMgACAAIAAgACAA
IAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAE0AMwAuAFAAQQBSACwAIAAwACkAKQAgAEEAUwAg
AFAAQQBSAF8ATQAzACwAAFMgACAAIAAgACAAIAAgACAAUwBVAE0AKABJAFMATgBVAEwATAAoAE0A
MwAuAFAAQQBDACwAIAAwACkAKQAgAEEAUwAgAFAAQQBDAF8ATQAzACwAAE8gACAAIAAgACAAIAAg
ACAAUwBVAE0AKABJAFMATgBVAEwATAAoAE0AMwAuAFAAUgAsACAAMAApACkAIABBAFMAIABQAFIA
XwBNADMALAAAUyAAIAAgACAAIAAgACAAIABTAFUATQAoAEkAUwBOAFUATABMACgATQAzAC4AUABS
AFIALAAgADAAKQApACAAQQBTACAAUABSAFIAXwBNADMALAAAUSAAIAAgACAAIAAgACAAIABTAFUA
TQAoAEkAUwBOAFUATABMACgATQAzAC4AUABSAEMALAAgADAAKQApACAAQQBTACAAUABSAEMAXwBN
ADMAAIGlIAAgACAAIAAgACAAIAAgACAAIAAgACAATABFAEYAVAAgAE8AVQBUAEUAUgAgAEoATwBJ
AE4AIABUAG0AcABTAHUAcABwAGwAaQBlAHIAUABlAHIAZgBvAHIAbQBhAG4AYwBlACAAQQBTACAA
TQAzACAATwBOACAATQAzAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAAUwAuAFMAdQBw
AHAAbABpAGUAcgBDAG8AZABlACAAQQBOAEQAIABNADMALgBDAHIAZQBhAHQAZQBEAGEAdABlACAA
QgBFAFQAVwBFAEUATgAgAEQAQQBUAEUAQQBEAEQAKABNAE8ATgBUAEgALAAgAC0AMwAsACAAQwBP
AE4AVgBFAFIAVAAoAGQAYQB0AGUALAAgAEcARQBUAEQAQQBUAEUAKAApACkAKQAgAEEATgBEACAA
RABBAFQARQBBAEQARAAoAEQAQQBZACwAIAAtADEALAAgAEMATwBOAFYARQBSAFQAKABkAGEAdABl
ACwAIABHAEUAVABEAEEAVABFACgAKQApACkAAQMpAAANUwBFAEwARQBDAFQAAEsgACAAIAAgAFMA
LgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEAUwAgAFsAUwB1AHAAbABpAGUAcgAgAEMAbwBk
AGUAXQAsAABdIAAgACAAIABTAC4AUgAzAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAQQBTACAA
WwBUAEMASQAtAEoAIABTAHUAcABwAGwAaQBlAHIAIABDAG8AZABlAF0ALAABgKsgACAAIAAgAEwA
VABSAEkATQAoAFIAVABSAEkATQAoAEkAUwBOAFUATABMACgAUwAuAE4AYQBtAGUAMwAsACAAJwAn
ACkAIAArACAAJwAgACcAIAArACAASQBTAE4AVQBMAEwAKABTAC4ATgBhAG0AZQA0ACwAIAAnACcA
KQApACkAIABBAFMAIABbAFMAdQBwAHAAbABpAGUAcgAgAE4AYQBtAGUAXQAsAAExIAAgACAAIABD
AC4ATgBhAG0AZQAgAEEAUwAgAFsAQwBvAHUAbgB0AHIAeQBdACwAAIEPIAAgACAAIABDAEEAUwBF
ACAAVwBIAEUATgAgAFAAQQBfAFkANQAgACsAIABQAFIAXwBZADUAIAA9ACAAMAAgAFQASABFAE4A
IAAwACAARQBMAFMARQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4ACwAMgAp
ACwAIABSAE8AVQBOAEQAKABQAEEAXwBZADUAIAAvACAAKABQAEEAXwBZADUAIAArACAAUABSAF8A
WQA1ACkALAAgADIAKQApACAARQBOAEQAIABBAFMAIABbAFAAYQBzAHMAIAByAGEAdABlACAAKAAl
ACkAIAAtACAAUQB1AGEAbABpAHQAeQBdACwAAYGLIAAgACAAIABDAEEAUwBFACAAVwBIAEUATgAg
AFEATgBfAFkANQAgACsAIABRAFMAXwBZADUAIAAtACAAKABOAFEATgBfAFkANQAgACsAIABOAFEA
UwBfAFkANQApACAAPQAgADAAIABUAEgARQBOACAAMAAgAEUATABTAEUAIABDAE8ATgBWAEUAUgBU
ACgAZABlAGMAaQBtAGEAbAAoADEAOAAsADIAKQAsACAAUgBPAFUATgBEACgAKABQAFAATgBfAFkA
NQAgACsAIABQAFAAUwBfAFkANQApACAALwAgACgAUQBOAF8AWQA1ACAAKwAgAFEAUwBfAFkANQAg
AC0AIAAoAE4AUQBOAF8AWQA1ACAAKwAgAE4AUQBTAF8AWQA1ACkAKQAsACAAMgApACkAIABFAE4A
RAAgAEEAUwAgAFsAQgB1AHkAaQBuAGcAIAByAGEAdABlACAAKAAlACkAIAAtACAAQwBvAG0AcABl
AHQAaQB0AGkAdgBlAG4AZQBzAHMAXQAsAAGBQSAAIAAgACAAQwBBAFMARQAgAFcASABFAE4AIABR
AFMAXwBZADUAIAAtACAATgBRAFMAXwBZADUAIAA9ACAAMAAgAFQASABFAE4AIAAwACAARQBMAFMA
RQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4ACwAMgApACwAIABSAE8AVQBO
AEQAKABQAFAAUwBfAFkANQAgAC8AIAAoAFEAUwBfAFkANQAgAC0AIABOAFEAUwBfAFkANQApACwA
IAAyACkAKQAgAEUATgBEACAAQQBTACAAWwBCAHUAeQBpAG4AZwAgAHIAYQB0AGUAIAAoACUAKQAg
ACgAZgBvAHIAIABTAHQAbwBjAGsALAAgAGYAbwByACAAUgBhAHcAIABNAGEAdABlAHIAaQBhAGwA
KQBdACwAAYEZIAAgACAAIABDAEEAUwBFACAAVwBIAEUATgAgAFEATgBfAFkANQAgAC0AIABOAFEA
TgBfAFkANQAgAD0AIAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAAQwBPAE4AVgBFAFIAVAAo
AGQAZQBjAGkAbQBhAGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAoAFAAUABOAF8AWQA1ACAA
LwAgACgAUQBOAF8AWQA1ACAALQAgAE4AUQBOAF8AWQA1ACkALAAgADIAKQApACAARQBOAEQAIABB
AFMAIABbAEIAdQB5AGkAbgBnACAAcgBhAHQAZQAgACgAJQApACAAKABmAG8AcgAgAE4AZQB3ACkA
XQAsAAGA7SAAIAAgACAAQwBBAFMARQAgAFcASABFAE4AIABQAFAAXwBZADUAIAA9ACAAMAAgAFQA
SABFAE4AIAAwACAARQBMAFMARQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4
ACwAMgApACwAIABSAE8AVQBOAEQAKABSAEMAXwBZADUAIAAvACAAUABQAF8AWQA1ACwAIAAyACkA
KQAgAEUATgBEACAAQQBTACAAWwBDAGEAbgBjAGUAbAAgAHIAYQB0AGUAIAAoACUAKQAgAC0AIABD
AGEAbgBjAGUAbABdACwAAVMgACAAIAAgAEMATwBOAFYARQBSAFQAKABpAG4AdAAsACAAUQBOAF8A
WQA1ACAAKwAgAFEAUwBfAFkANQApACAAQQBTACAAWwBSAEYAUQBdACwAAICbIAAgACAAIABDAE8A
TgBWAEUAUgBUACgAaQBuAHQALAAgACgAUQBOAF8AWQA1ACAAKwAgAFEAUwBfAFkANQApACAALQAg
ACgATgBRAE4AXwBZADUAIAArACAATgBRAFMAXwBZADUAKQApACAAQQBTACAAWwBSAEYAUQAgACgA
UAByAGkAYwBlACAAZQB4AGkAcwB0ACkAXQAsAAFdIAAgACAAIABDAE8ATgBWAEUAUgBUACgAaQBu
AHQALAAgAFAAUABOAF8AWQA1ACAAKwAgAFAAUABTAF8AWQA1ACkAIABBAFMAIABbAFAAYQByAC0A
UABPAF0ALAABgSMgACAAIAAgAEMAQQBTAEUAIABXAEgARQBOACAAUABBAF8AWQAxACAAKwAgAFAA
UgBfAFkAMQAgAD0AIAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAAQwBPAE4AVgBFAFIAVAAo
AGQAZQBjAGkAbQBhAGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAoAFAAQQBfAFkAMQAgAC8A
IAAoAFAAQQBfAFkAMQAgACsAIABQAFIAXwBZADEAKQAsACAAMgApACkAIABFAE4ARAAgAEEAUwAg
AFsAUABhAHMAcwAgAHIAYQB0AGUAIAAoACUAKQAgAC0AIABRAHUAYQBsAGkAdAB5ACAAKABjAHUA
cgByAGUAbgB0ACkAXQAsAAGBnyAAIAAgACAAQwBBAFMARQAgAFcASABFAE4AIABRAE4AXwBZADEA
IAArACAAUQBTAF8AWQAxACAALQAgACgATgBRAE4AXwBZADEAIAArACAATgBRAFMAXwBZADEAKQAg
AD0AIAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAAQwBPAE4AVgBFAFIAVAAoAGQAZQBjAGkA
bQBhAGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAoACgAUABQAE4AXwBZADEAIAArACAAUABQ
AFMAXwBZADEAKQAgAC8AIAAoAFEATgBfAFkAMQAgACsAIABRAFMAXwBZADEAIAAtACAAKABOAFEA
TgBfAFkAMQAgACsAIABOAFEAUwBfAFkAMQApACkALAAgADIAKQApACAARQBOAEQAIABBAFMAIABb
AEIAdQB5AGkAbgBnACAAcgBhAHQAZQAgACgAJQApACAALQAgAEMAbwBtAHAAZQB0AGkAdABpAHYA
ZQBuAGUAcwBzACAAKABjAHUAcgByAGUAbgB0ACkAXQAsAAGBVSAAIAAgACAAQwBBAFMARQAgAFcA
SABFAE4AIABRAFMAXwBZADEAIAAtACAATgBRAFMAXwBZADEAIAA9ACAAMAAgAFQASABFAE4AIAAw
ACAARQBMAFMARQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4ACwAMgApACwA
IABSAE8AVQBOAEQAKABQAFAAUwBfAFkAMQAgAC8AIAAoAFEAUwBfAFkAMQAgAC0AIABOAFEAUwBf
AFkAMQApACwAIAAyACkAKQAgAEUATgBEACAAQQBTACAAWwBCAHUAeQBpAG4AZwAgAHIAYQB0AGUA
IAAoACUAKQAgACgAZgBvAHIAIABTAHQAbwBjAGsALAAgAGYAbwByACAAUgBhAHcAIABNAGEAdABl
AHIAaQBhAGwAKQAgACgAYwB1AHIAcgBlAG4AdAApAF0ALAABgS0gACAAIAAgAEMAQQBTAEUAIABX
AEgARQBOACAAUQBOAF8AWQAxACAALQAgAE4AUQBOAF8AWQAxACAAPQAgADAAIABUAEgARQBOACAA
MAAgAEUATABTAEUAIABDAE8ATgBWAEUAUgBUACgAZABlAGMAaQBtAGEAbAAoADEAOAAsADIAKQAs
ACAAUgBPAFUATgBEACgAUABQAE4AXwBZADEAIAAvACAAKABRAE4AXwBZADEAIAAtACAATgBRAE4A
XwBZADEAKQAsACAAMgApACkAIABFAE4ARAAgAEEAUwAgAFsAQgB1AHkAaQBuAGcAIAByAGEAdABl
ACAAKAAlACkAIAAoAGYAbwByACAATgBlAHcAKQAgACgAYwB1AHIAcgBlAG4AdAApAF0ALAABgQEg
ACAAIAAgAEMAQQBTAEUAIABXAEgARQBOACAAUABQAF8AWQAxACAAPQAgADAAIABUAEgARQBOACAA
MAAgAEUATABTAEUAIABDAE8ATgBWAEUAUgBUACgAZABlAGMAaQBtAGEAbAAoADEAOAAsADIAKQAs
ACAAUgBPAFUATgBEACgAUgBDAF8AWQAxACAALwAgAFAAUABfAFkAMQAsACAAMgApACkAIABFAE4A
RAAgAEEAUwAgAFsAQwBhAG4AYwBlAGwAIAByAGEAdABlACAAKAAlACkAIAAtACAAQwBhAG4AYwBl
AGwAIAAoAGMAdQByAHIAZQBuAHQAKQBdACwAAWcgACAAIAAgAEMATwBOAFYARQBSAFQAKABpAG4A
dAAsACAAUQBOAF8AWQAxACAAKwAgAFEAUwBfAFkAMQApACAAQQBTACAAWwBSAEYAUQAgACgAYwB1
AHIAcgBlAG4AdAApAF0ALAAAgK0gACAAIAAgAEMATwBOAFYARQBSAFQAKABpAG4AdAAsACAAKABR
AE4AXwBZADEAIAArACAAUQBTAF8AWQAxACkAIAAtACAAKABOAFEATgBfAFkAMQAgACsAIABOAFEA
UwBfAFkAMQApACkAIABBAFMAIABbAFIARgBRACAAKABQAHIAaQBjAGUAIABlAHgAaQBzAHQALAAg
AGMAdQByAHIAZQBuAHQAKQBdACwAAXEgACAAIAAgAEMATwBOAFYARQBSAFQAKABpAG4AdAAsACAA
UABQAE4AXwBZADEAIAArACAAUABQAFMAXwBZADEAKQAgAEEAUwAgAFsAUABhAHIALQBQAE8AIAAo
AGMAdQByAHIAZQBuAHQAKQBdACwAATUgACAAIAAgAFAAUABDAF8AWQA1ACAAQQBTACAAWwBQAE8A
IABDAGEAbgBjAGUAbABdACwAADcgACAAIAAgAFAAUAAyADQANwA1AF8AWQA1ACAAQQBTACAAWwAy
ADQANwA1ACAAUABPAF0ALAAASSAAIAAgACAAUABQAEMAXwBZADEAIABBAFMAIABbAFAATwAgAEMA
YQBuAGMAZQBsACAAKABjAHUAcgByAGUAbgB0ACkAXQAsAABLIAAgACAAIABQAFAAMgA0ADcANQBf
AFkAMQAgAEEAUwAgAFsAMgA0ADcANQAgAFAATwAgACgAYwB1AHIAcgBlAG4AdAApAF0ALAAAgTsg
ACAAIAAgAEMAQQBTAEUAIABXAEgARQBOACAAUABBAF8ATQAzACAAKwAgAFAAUgBfAE0AMwAgAD0A
IAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAAQwBPAE4AVgBFAFIAVAAoAGQAZQBjAGkAbQBh
AGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAoAFAAQQBfAE0AMwAgAC8AIAAoAFAAQQBfAE0A
MwAgACsAIABQAFIAXwBNADMAKQAsACAAMgApACkAIABFAE4ARAAgAEEAUwAgAFsAUABhAHMAcwAg
AHIAYQB0AGUAIAAoACUAKQAgAC0AIABRAHUAYQBsAGkAdAB5ACAAKAB0AGgAZQAgAGwAYQB0AGUA
cwB0ACAAMwAgAG0AbwBuAHQAaABzACkAXQAsAAGBtyAAIAAgACAAQwBBAFMARQAgAFcASABFAE4A
IABRAE4AXwBNADMAIAArACAAUQBTAF8ATQAzACAALQAgACgATgBRAE4AXwBNADMAIAArACAATgBR
AFMAXwBNADMAKQAgAD0AIAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAAQwBPAE4AVgBFAFIA
VAAoAGQAZQBjAGkAbQBhAGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAoACgAUABQAE4AXwBN
ADMAIAArACAAUABQAFMAXwBNADMAKQAgAC8AIAAoAFEATgBfAE0AMwAgACsAIABRAFMAXwBNADMA
IAAtACAAKABOAFEATgBfAE0AMwAgACsAIABOAFEAUwBfAE0AMwApACkALAAgADIAKQApACAARQBO
AEQAIABBAFMAIABbAEIAdQB5AGkAbgBnACAAcgBhAHQAZQAgACgAJQApACAALQAgAEMAbwBtAHAA
ZQB0AGkAdABpAHYAZQBuAGUAcwBzACAAKAB0AGgAZQAgAGwAYQB0AGUAcwB0ACAAMwAgAG0AbwBu
AHQAaABzACkAXQAsAAGBbSAAIAAgACAAQwBBAFMARQAgAFcASABFAE4AIABRAFMAXwBNADMAIAAt
ACAATgBRAFMAXwBNADMAIAA9ACAAMAAgAFQASABFAE4AIAAwACAARQBMAFMARQAgAEMATwBOAFYA
RQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4ACwAMgApACwAIABSAE8AVQBOAEQAKABQAFAAUwBf
AE0AMwAgAC8AIAAoAFEAUwBfAE0AMwAgAC0AIABOAFEAUwBfAE0AMwApACwAIAAyACkAKQAgAEUA
TgBEACAAQQBTACAAWwBCAHUAeQBpAG4AZwAgAHIAYQB0AGUAIAAoACUAKQAgACgAZgBvAHIAIABT
AHQAbwBjAGsALAAgAGYAbwByACAAUgBhAHcAIABNAGEAdABlAHIAaQBhAGwAKQAgACgAdABoAGUA
IABsAGEAdABlAHMAdAAgADMAIABtAG8AbgB0AGgAcwApAF0ALAABgUUgACAAIAAgAEMAQQBTAEUA
IABXAEgARQBOACAAUQBOAF8ATQAzACAALQAgAE4AUQBOAF8ATQAzACAAPQAgADAAIABUAEgARQBO
ACAAMAAgAEUATABTAEUAIABDAE8ATgBWAEUAUgBUACgAZABlAGMAaQBtAGEAbAAoADEAOAAsADIA
KQAsACAAUgBPAFUATgBEACgAUABQAE4AXwBNADMAIAAvACAAKABRAE4AXwBNADMAIAAtACAATgBR
AE4AXwBNADMAKQAsACAAMgApACkAIABFAE4ARAAgAEEAUwAgAFsAQgB1AHkAaQBuAGcAIAByAGEA
dABlACAAKAAlACkAIAAoAGYAbwByACAATgBlAHcAKQAgACgAdABoAGUAIABsAGEAdABlAHMAdAAg
ADMAIABtAG8AbgB0AGgAcwApAF0ALAABgRkgACAAIAAgAEMAQQBTAEUAIABXAEgARQBOACAAUABQ
AF8ATQAzACAAPQAgADAAIABUAEgARQBOACAAMAAgAEUATABTAEUAIABDAE8ATgBWAEUAUgBUACgA
ZABlAGMAaQBtAGEAbAAoADEAOAAsADIAKQAsACAAUgBPAFUATgBEACgAUgBDAF8ATQAzACAALwAg
AFAAUABfAE0AMwAsACAAMgApACkAIABFAE4ARAAgAEEAUwAgAFsAQwBhAG4AYwBlAGwAIAByAGEA
dABlACAAKAAlACkAIAAtACAAQwBhAG4AYwBlAGwAIAAoAHQAaABlACAAbABhAHQAZQBzAHQAIAAz
ACAAbQBvAG4AdABoAHMAKQBdACwAAX8gACAAIAAgAEMATwBOAFYARQBSAFQAKABpAG4AdAAsACAA
UQBOAF8ATQAzACAAKwAgAFEAUwBfAE0AMwApACAAQQBTACAAWwBSAEYAUQAgACgAdABoAGUAIABs
AGEAdABlAHMAdAAgADMAIABtAG8AbgB0AGgAcwApAF0ALAAAgMUgACAAIAAgAEMATwBOAFYARQBS
AFQAKABpAG4AdAAsACAAKABRAE4AXwBNADMAIAArACAAUQBTAF8ATQAzACkAIAAtACAAKABOAFEA
TgBfAE0AMwAgACsAIABOAFEAUwBfAE0AMwApACkAIABBAFMAIABbAFIARgBRACAAKABQAHIAaQBj
AGUAIABlAHgAaQBzAHQALAAgAHQAaABlACAAbABhAHQAZQBzAHQAIAAzACAAbQBvAG4AdABoAHMA
KQBdACwAAYCJIAAgACAAIABDAE8ATgBWAEUAUgBUACgAaQBuAHQALAAgAFAAUABOAF8ATQAzACAA
KwAgAFAAUABTAF8ATQAzACkAIABBAFMAIABbAFAAYQByAC0AUABPACAAKAB0AGgAZQAgAGwAYQB0
AGUAcwB0ACAAMwAgAG0AbwBuAHQAaABzACkAXQAsAAFhIAAgACAAIABQAFAAQwBfAE0AMwAgAEEA
UwAgAFsAUABPACAAQwBhAG4AYwBlAGwAIAAoAHQAaABlACAAbABhAHQAZQBzAHQAIAAzACAAbQBv
AG4AdABoAHMAKQBdACwAAGMgACAAIAAgAFAAUAAyADQANwA1AF8ATQAzACAAQQBTACAAWwAyADQA
NwA1ACAAUABPACAAKAB0AGgAZQAgAGwAYQB0AGUAcwB0ACAAMwAgAG0AbwBuAHQAaABzACkAXQAs
AACBlSAAIAAgACAAQwBBAFMARQAgAFcASABFAE4AIAAoAFAAQQBfAFkANQAgAC0AIABQAEEAUgBf
AFkANQApACAAKwAgACgAUABSAF8AWQA1ACAALQAgAFAAUgBSAF8AWQA1ACkAIAA9ACAAMAAgAFQA
SABFAE4AIAAwACAARQBMAFMARQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4
ACwAMgApACwAIABSAE8AVQBOAEQAKAAoAFAAQQBfAFkANQAgAC0AIABQAEEAUgBfAFkANQApACAA
LwAgACgAKABQAEEAXwBZADUAIAAtACAAUABBAFIAXwBZADUAKQAgACsAIAAoAFAAUgBfAFkANQAg
AC0AIABQAFIAUgBfAFkANQApACkALAAgADIAKQApACAARQBOAEQAIABBAFMAIABbAFAAYQBzAHMA
IAByAGEAdABlACAAKAAlACkAIAAtACAAZQB4AGMAZQBwAHQAIABSAGEAdwAgAE0AYQB0AGUAcgBp
AGEAbABdACwAAYGpIAAgACAAIABDAEEAUwBFACAAVwBIAEUATgAgACgAUABBAF8AWQAxACAALQAg
AFAAQQBSAF8AWQAxACkAIAArACAAKABQAFIAXwBZADEAIAAtACAAUABSAFIAXwBZADEAKQAgAD0A
IAAwACAAVABIAEUATgAgADAAIABFAEwAUwBFACAAQwBPAE4AVgBFAFIAVAAoAGQAZQBjAGkAbQBh
AGwAKAAxADgALAAyACkALAAgAFIATwBVAE4ARAAoACgAUABBAF8AWQAxACAALQAgAFAAQQBSAF8A
WQAxACkAIAAvACAAKAAoAFAAQQBfAFkAMQAgAC0AIABQAEEAUgBfAFkAMQApACAAKwAgACgAUABS
AF8AWQAxACAALQAgAFAAUgBSAF8AWQAxACkAKQAsACAAMgApACkAIABFAE4ARAAgAEEAUwAgAFsA
UABhAHMAcwAgAHIAYQB0AGUAIAAoACUAKQAgAC0AIABlAHgAYwBlAHAAdAAgAFIAYQB3ACAATQBh
AHQAZQByAGkAYQBsACAAKABjAHUAcgByAGUAbgB0ACkAXQAsAAGBwSAAIAAgACAAQwBBAFMARQAg
AFcASABFAE4AIAAoAFAAQQBfAE0AMwAgAC0AIABQAEEAUgBfAE0AMwApACAAKwAgACgAUABSAF8A
TQAzACAALQAgAFAAUgBSAF8ATQAzACkAIAA9ACAAMAAgAFQASABFAE4AIAAwACAARQBMAFMARQAg
AEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4ACwAMgApACwAIABSAE8AVQBOAEQA
KAAoAFAAQQBfAE0AMwAgAC0AIABQAEEAUgBfAE0AMwApACAALwAgACgAKABQAEEAXwBNADMAIAAt
ACAAUABBAFIAXwBNADMAKQAgACsAIAAoAFAAUgBfAE0AMwAgAC0AIABQAFIAUgBfAE0AMwApACkA
LAAgADIAKQApACAARQBOAEQAIABBAFMAIABbAFAAYQBzAHMAIAByAGEAdABlACAAKAAlACkAIAAt
ACAAZQB4AGMAZQBwAHQAIABSAGEAdwAgAE0AYQB0AGUAcgBpAGEAbAAgACgAdABoAGUAIABsAGEA
dABlAHMAdAAgADMAIABtAG8AbgB0AGgAcwApAF0ALAABgSMgACAAIAAgAEMAQQBTAEUAIABXAEgA
RQBOACAAUABBAEMAXwBZADUAIAArACAAUABSAEMAXwBZADUAIAA9ACAAMAAgAFQASABFAE4AIAAw
ACAARQBMAFMARQAgAEMATwBOAFYARQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4ACwAMgApACwA
IABSAE8AVQBOAEQAKABQAEEAQwBfAFkANQAgAC8AIAAoAFAAQQBDAF8AWQA1ACAAKwAgAFAAUgBD
AF8AWQA1ACkALAAgADIAKQApACAARQBOAEQAIABBAFMAIABbAFAAYQBzAHMAIAByAGEAdABlACAA
KAAlACkAIAAtACAAZgBvAHIAIABDAHUAcwB0AG8AbQBlAHIAXQAsAAGBNyAAIAAgACAAQwBBAFMA
RQAgAFcASABFAE4AIABQAEEAQwBfAFkAMQAgACsAIABQAFIAQwBfAFkAMQAgAD0AIAAwACAAVABI
AEUATgAgADAAIABFAEwAUwBFACAAQwBPAE4AVgBFAFIAVAAoAGQAZQBjAGkAbQBhAGwAKAAxADgA
LAAyACkALAAgAFIATwBVAE4ARAAoAFAAQQBDAF8AWQAxACAALwAgACgAUABBAEMAXwBZADEAIAAr
ACAAUABSAEMAXwBZADEAKQAsACAAMgApACkAIABFAE4ARAAgAEEAUwAgAFsAUABhAHMAcwAgAHIA
YQB0AGUAIAAoACUAKQAgAC0AIABmAG8AcgAgAEMAdQBzAHQAbwBtAGUAcgAgACgAYwB1AHIAcgBl
AG4AdAApAF0ALAABgU8gACAAIAAgAEMAQQBTAEUAIABXAEgARQBOACAAUABBAEMAXwBNADMAIAAr
ACAAUABSAEMAXwBNADMAIAA9ACAAMAAgAFQASABFAE4AIAAwACAARQBMAFMARQAgAEMATwBOAFYA
RQBSAFQAKABkAGUAYwBpAG0AYQBsACgAMQA4ACwAMgApACwAIABSAE8AVQBOAEQAKABQAEEAQwBf
AE0AMwAgAC8AIAAoAFAAQQBDAF8ATQAzACAAKwAgAFAAUgBDAF8ATQAzACkALAAgADIAKQApACAA
RQBOAEQAIABBAFMAIABbAFAAYQBzAHMAIAByAGEAdABlACAAKAAlACkAIAAtACAAZgBvAHIAIABD
AHUAcwB0AG8AbQBlAHIAIAAoAHQAaABlACAAbABhAHQAZQBzAHQAIAAzACAAbQBvAG4AdABoAHMA
KQBdACwAAS8gACAAIAAgAFIALgBOAGEAbQBlACAAQQBTACAAWwBSAGUAZwBpAG8AbgBdACwAAIDd
IAAgACAAIABSAFQAUgBJAE0AKABMAFQAUgBJAE0AKABJAFMATgBVAEwATAAoAEEAZABkAHIAZQBz
AHMAMQAsACAAJwAnACkAIAArACAAJwAgACcAIAArACAASQBTAE4AVQBMAEwAKABBAGQAZAByAGUA
cwBzADIALAAgACcAJwApACAAKwAgACcAIAAnACAAKwAgAEkAUwBOAFUATABMACgAQQBkAGQAcgBl
AHMAcwAzACwAIAAnACcAKQApACkAIABBAFMAIABbAEEAZABkAHIAZQBzAHMAXQAsAAEbIAAgACAA
IABTAC4AVwBlAGIAcwBpAHQAZQAACUYAUgBPAE0AAA8gACAAIAAgAFkAMQAsAAAPIAAgACAAIABZ
ADUALAAADyAAIAAgACAATQAzACwAACcgACAAIAAgAHMAXwBDAG8AdQBuAHQAcgB5ACAAQQBTACAA
QwAsAAAjIAAgACAAIABTAHUAcABwAGwAaQBlAHIAIABBAFMAIABTAACAzSAAIAAgACAAIAAgACAA
IABMAEUARgBUACAATwBVAFQARQBSACAASgBPAEkATgAgAHMAXwBSAGUAZwBpAG8AbgAgAEEAUwAg
AFIAIABPAE4AIABSAC4AQwBvAHUAbgB0AHIAeQBDAG8AZABlACAAPQAgAFMALgBDAG8AdQBuAHQA
cgB5AEMAbwBkAGUAIABBAE4ARAAgAFIALgBSAGUAZwBpAG8AbgBDAG8AZABlACAAPQAgAFMALgBS
AGUAZwBpAG8AbgBDAG8AZABlAAALVwBIAEUAUgBFAABDIAAgACAAIABTAC4AQwBvAHUAbgB0AHIA
eQBDAG8AZABlACAAPQAgAEMALgBDAG8AdQBuAHQAcgB5AEMAbwBkAGUAAFEgACAAIAAgAEEATgBE
ACAAUwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAPQAgAFkANQAuAFMAdQBwAHAAbABpAGUA
cgBDAG8AZABlAABTIAAgACAAIABBAE4ARAAgAFkANQAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABl
ACAAPQAgAFkAMQAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAABTIAAgACAAIABBAE4ARAAgAFkA
MQAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAPQAgAE0AMwAuAFMAdQBwAHAAbABpAGUAcgBD
AG8AZABlAAARTwBSAEQARQBSACAAQgBZAAAlIAAgACAAIABTAC4AUwB1AHAAcABsAGkAZQByAEMA
bwBkAGUAAA1TAGgAZQBlAHQAMQAAEU0AeQBEAG8AbQBhAGkAbgAAFVQAQwBJAE8AcABlAG4AWABN
AEwAACtUAEMASQBPAHAAZQBuAFgATQBMAC4AVABDAEkATwBwAGUAbgBYAE0ATAAAG0MAcgBlAGEA
dABlAE8AcABlAG4AWABNAEwAAF1DAG8AbQBwAGEAbgB5ACAAUABlAHIAZgBvAHIAbQBhAG4AYwBl
ACAAxzD8ML8wbjD6UZtSazBKMEQwZjABMLcwuTDGMOAwqDDpMPwwTDB6dh91VzB+MFcwXzACMAEL
n1tMiNEwuTAa/wETqDDpMPww4TDDMLsw/DC4MBr/ARlFAHIAcgBvAHIATQBlAHMAcwBhAGcAZQAA
AOtPgk2sNK5Dp/aCxSEspawABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcg
BAEODg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgKEFIAASgKUHIAIB
DhKApQQAARwcBAABARwCBg4VBwUSgJEVEoCVAQ4VEoCVAQ4cEoCZBSAAEoC1BSAAEoC5BiABEoC9
HAMgABwDIAAOBAABCA4GFRKAlQEOBAABAg4EAAEBDgYgARKAkQ4FIAEBEwAGAAMBDg4CBgABEoDJ
DgUgAhwODgQgABJtCSACEoDVDh0SbQYgAhwcHRwGAAEBEoCZBQcBEoCRBSAAEoCRAwAADgUgABKA
mQQgAQEcBCABAhwDIAAIBAcBHgACHgAFEAEAHgAECgEeAAQHARMABhUSJAETAAcGFRJxARMABhUS
cQETAAITAAQKARMACLd6XFYZNOCJCLA/X38R1Qo6CImEXc2AgMyRBAAAAAAEAQAAAAcGFRIkARIM
BwYVEiQBEggHBhUSJAESZQcGFRIkARIgAwYSeQMGEn0DBhIYAgYcAgYIAwYRKAMAAAEEAAASDAQA
ABIIBAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAASGAYgAQESgJkHEAEBHgAeAAcwAQEBEB4A
BAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAvAQAqU1RfYTI3ODQ3NDAwOThhNDVjODlj
NjcyZDYxZGZiODZkM2QudmJwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAUBAAEA
ACkBACQyZjEyMjA1ZC04YTFlLTQ2NmQtYjFlZS02MGU0M2Q4YzNkNTIAAAwBAAcxLjAuMC4wAABH
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5O
RVQgRnJhbWV3b3JrIDQIAQABAAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5c3Rl
bS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19J
bnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMBAA5NeS5B
cHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAALSDAAAAAAAAAAAAAM6DAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAgwAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAA
AAAAAAAAAAAAAAABAAAAAABIAAAAWKAAACwEAAAAAAAAAAAAACwENAAAAFYAUwBfAFYARQBSAFMA
SQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAAC
AAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIA
YQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBm
AG8AAABoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAA
IgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAfgArAAEARgBpAGwAZQBEAGUAcwBj
AHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGEAMgA3ADgANAA3ADQAMAAwADkAOABhADQANQBjADgA
OQBjADYANwAyAGQANgAxAGQAZgBiADgANgBkADMAZAAuAHYAYgBwAHIAbwBqAAAAAAAwAAgAAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAAB+AC8AAQBJAG4AdABlAHIA
bgBhAGwATgBhAG0AZQAAAFMAVABfAGEAMgA3ADgANAA3ADQAMAAwADkAOABhADQANQBjADgAOQBj
ADYANwAyAGQANgAxAGQAZgBiADgANgBkADMAZAAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEANgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
hgAvAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGEAMgA3ADgANAA3
ADQAMAAwADkAOABhADQANQBjADgAOQBjADYANwAyAGQANgAxAGQAZgBiADgANgBkADMAZAAuAHYA
YgBwAHIAbwBqAC4AZABsAGwAAAAAAHYAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBU
AF8AYQAyADcAOAA0ADcANAAwADAAOQA4AGEANAA1AGMAOAA5AGMANgA3ADIAZAA2ADEAZABmAGIA
OAA2AGQAMwBkAC4AdgBiAHAAcgBvAGoAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAADgMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\シーケンス コンテナー\仕入先ランクデータ作成"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="スクリプト タスク"
          DTS:Disabled="True"
          DTS:DTSID="{7B89F675-93EB-4988-9862-32C39B2B8808}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="仕入先ランクデータ作成"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a6cdc6d2450c4d64b1d121862b4b2551"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::ConnectionString, User::CommandTimeout"
              ReadWriteVariables="User::ErrorMessage">
              <ProjectItem
                Name="\my project\settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="\my project\assemblyinfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2016")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("d92ee29a-f4ab-4492-af10-ce4d7e9f707f")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_a6cdc6d2450c4d64b1d121862b4b2551</msb:CodeName>
		<msb:DisplayName>st_a6cdc6d2450c4d64b1d121862b4b2551</msb:DisplayName>
		<msb:ProjectId>{D8C5AC5C-D1EE-4EB3-877B-51A130BAD323}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_a6cdc6d2450c4d64b1d121862b4b2551.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
	

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts property. Connections, variables, events,
	' and logging features are available as members of the Dts property as shown in the following examples.
	'
	' To reference a variable, call Dts.Variables("MyCaseSensitiveVariableName").Value
	' To post a log entry, call Dts.Log("This is my log text", 999, Nothing)
	' To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, True)
	'
	' To use the connections collection use something like the following:
	' ConnectionManager cm = Dts.Connections.Add("OLEDB")
	' cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;"
	'
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Help, press F1.

	Public Sub Main()
		'
        ' �����������܂��I
		'
		Dts.TaskResult = ScriptResults.Success
	End Sub

End Class]]></ProjectItem>
              <ProjectItem
                Name="\my project\resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_a6cdc6d2450c4d64b1d121862b4b2551.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj</RootNamespace>
    <AssemblyName>ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{EA0B67F8-C287-4283-B7EA-5A11FC2D28AB}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="\my project\settings.designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="\st_a6cdc6d2450c4d64b1d121862b4b2551.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj</RootNamespace>
    <AssemblyName>ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{EA0B67F8-C287-4283-B7EA-5A11FC2D28AB}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="\scriptmain.vb"
                Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
	

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts property. Connections, variables, events,
	' and logging features are available as members of the Dts property as shown in the following examples.
	'
	' To reference a variable, call Dts.Variables("MyCaseSensitiveVariableName").Value
	' To post a log entry, call Dts.Log("This is my log text", 999, Nothing)
	' To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, True)
	'
	' To use the connections collection use something like the following:
	' ConnectionManager cm = Dts.Connections.Add("OLEDB")
	' cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;"
	'
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Help, press F1.

	Public Sub Main()
		'
        ' �����������܂��I
		'
		Dts.TaskResult = ScriptResults.Success
	End Sub

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2016")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("d92ee29a-f4ab-4492-af10-ce4d7e9f707f")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="\my project\resources.designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_a6cdc6d2450c4d64b1d121862b4b2551.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO5uoVgAAAAAAAAAAOAAIiALAVAAABgAAAAIAAAAAAAAVjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQ3AABPAAAAAEAAAIgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
NwAAAAAAAEgAAAACAAUAKCIAACQUAAABAAAAAAAAAEw2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKjYCKCsAAAoWbywAAAoqNgIDKCYA
AAooLQAACioeAiguAAAKKi7QCAAAAigjAAAKKh4CKC8AAAoqEzABABQAAAABAAARAowFAAAbLQgo
AQAAKworAgIKBioiA/4VBQAAGyoAAAATMAIAKAAAAAIAABECezEAAApvMgAACgoGjAgAABstEigC
AAArCgJ7MQAACgZvMwAACgYqSgIoIgAACgJzNAAACn0xAAAKKgBCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAAB4BwAAI34AAOQHAACsCAAAI1N0cmluZ3MAAAAAkBAAADQAAAAjVVMA
xBAAABAAAAAjR1VJRAAAANQQAABQAwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJDwAAAPoBMwAWAAAB
AAAAKwAAAAoAAAAMAAAAGQAAAAQAAAA0AAAAAgAAADcAAAACAAAABAAAAAgAAAAJAAAACAAAAAEA
AAAEAAAAAQAAAAMAAAADAAAAAgAAAAAA1QQBAAAAAAAGAOkCNwcGAI4DNwcGAMABeAYPAOsHAAAG
AAECgAUGAMwCgAUGAHUDgAUGAAkDgAUGACIDgAUGAEgCgAUGAD0DBAUGAO0B8QYGAGkB8QYGAJQC
gAUGAGMC6AMKAIwBEgYKAFQBvwQKANQBvwQOACwBxwYOAEgGiwYGAHwCeAYOABgCEAcOADACbgAG
AD8IBAUOAC4GxwYOALECbgAGAN8ABAUOAAEAgwQKAHcBEAUGAAIGVwcGAJIFawUKADwBVgUGAKMB
eAYSAFMDWgQSABABWgQGAAsEBAUGAAsFBAUGALgABAUGAKAIgAUGAAwINwcGAHAG1wMSAK0EWgQG
AFkGBAUAAAAAKwAAAAAAAQABAAAAAABIBW4ITQABAAEAAAAAAEYGbghRAAEAAgAAARAARghuCGEA
AQADAAAAAACgB2gHYQAFAAgAAAEQAPoHEASBAAcADAABAAAALQUQBI0ACQAPAAUBAAC5BgAAYQAJ
ABEABQEAABAAAABhAAkAGAACAQAAKwgAAJUACgAaADEAxwXjADEAngXrADEAsgXzADEA4AX7ABEA
UQYDAREABAEHAREArAMLAREAOQgPASEAZAihAAYGXQASAVaAGwgVAVaA5AAVAVAgAAAAAAYYYwYG
AAEAWCAAAAAABhhjBgYAAQBgIAAAAAARGGkGGQEBAIogAAAAABMIOQYdAQEAliAAAAAAEwg4BSIB
AQCiIAAAAAATCCoGJwEBAK4gAAAAABMIqQYsAQEAuiAAAAAAAxhjBgYAAQDCIAAAAAAWCP4FMQEB
AO4gAAAAABYI7AA2AQEA9SAAAAAAFgj4ADsBAQD9IAAAAAARGGkGGQECAA4hAAAAAAYYYwYGAAIA
GCEAAAAAFgi0A0EBAgB0IQAAAAAGGGMGBgACAHwhAAAAAAYAMwUGAAIAiiEAAAAAxgIFCHUAAgCY
IQAAAADGAqwAegADAKAhAAAAAIMA3ABGAQMArCEAAAAAxgICBH4AAwC0IQAAAAARAEoASwEDANQh
AAAAAAEANgBTAQQAuiAAAAAABhhjBgYABQDgIQAAAAADCJMASgAFABQiAAAAAAYYYwYGAAUAAAAB
ANEDAAABAJwFAAABAKMAAAABAKMACQBjBgEAEQBjBgYAGQBjBgoAKQBjBhAAMQBjBhAAOQBjBhAA
QQBjBhAASQBjBhAAUQBjBhAAWQBjBhUAYQBjBhUAaQBjBhAAcQBjBhAAeQBjBhAAgQBjBhoAkQBj
BiAAqQBjBgYAsQBjBgYAuQBjBgYA0QBjBiYA6QBjBhAACQFjBgYAEQFjBgYAmQBjBgYAoQBjBgYA
DABjBgYAFABjBgYAHABjBgYAJABjBgYADACTAEoAFACTAEoAHACTAEoAJACTAEoAwQBjBgYA2QDK
AE8A2QCcCFcA8QBjBl0AQQHIA2UAAQFjBgYASQEzBmoASQFQCGoAGQFjBgYAGQEjCG8AUQFVCAEA
wQAFCHUAwQCsAHoAwQACBH4AWQGEAIoANABkCKEAPAC0A0oAPAC+A7gAPABjBgYACAAsANkACAAw
AN4AKQCrAAoDLgALAIMBLgATAIwBLgAbAKsBLgAjALQBLgArAOQBLgAzAOQBLgA7ALQBLgBDAOoB
LgBLAOQBLgBTAAECLgBbAOQBLgBjAAcCLgBrADECLgBzAD4CQACLAN4AQACDAIYCQwB7AI8CQwCD
AIYCSQCrABsDYwB7AI8CYwCDAIYCaQCrAC8DgACLAN4AgwCTAN4AgwCbAN4AgwB7AI8CiQCrADwD
oACLAN4AqQCDAKsBwACLAN4AyQCDAKsB4ACLAN4A4wC7AN4A4wBTAOQB6QCzAN4AAwGDAIYCAwGj
AKgCIwGDAIYCIwFbAOQBIAKDAIYCIAKLAN4AQAKDAIYCQAKLAN4AYAKDAIYCYAKLAN4AgAKDAIYC
gAKLAN4AoAKLAN4AwAKLAN4A4AKLAN4A4AKDAIYCAAOLAN4AIAOLAN4AIAODAIYCggCVAAQAAQAF
AAUABgAHAAkACAAAAEgGWwEAAEoFYAEAAC4GZQEAALsGagEAAAIGbwEAAAgBdAEAANEDeQEAAJcA
fgECAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQABAAsADQACAA4ADwACABgAEQAu
ADUAPABDAIcAmgCpALAABIAAAAEAAAAAAAAAAAAAAAAAEAQAAAQAAAAAAAAAAAAAAL4AZQAAAAAA
BAAAAAAAAAAAAAAAvgAEBQAAAAAKAAAAAAAAAAAAAADHAG4AAAAAAA0AAAAAAAAAAAAAANAAOwQA
AAAAAAAAAAEAAACsBwAACAAEAAkABAAKAAcAAAAQABIANAAAABAAKwA0AAAAAAAtADQAYQCQAGEA
swAAAAAAAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxADxNb2R1bGU+
AFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVfX0luc3RhbmNlX18AdmFsdWVfXwBtc2Nvcmxp
YgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGlu
c3RhbmNlAEdldEhhc2hDb2RlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEdl
dFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1
dGUAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRy
aWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRl
TW9kdWxlTmFtZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lv
bkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9W
YWx1ZQBHZXRPYmplY3RWYWx1ZQBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAVG9TdHJpbmcATWF0aABTVF9hNmNkYzZkMjQ1MGM0ZDY0YjFkMTIxODYyYjRiMjU1MS52
YnByb2oATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50
ZXJuYWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2E2Y2RjNmQy
NDUwYzRkNjRiMWQxMjE4NjJiNGIyNTUxLnZicHJvai5kbGwAU3lzdGVtAEVudW0AU3lzdGVtLkNv
bXBvbmVudE1vZGVsLkRlc2lnbgBTY3JpcHRNYWluAGdldF9BcHBsaWNhdGlvbgBNeUFwcGxpY2F0
aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAEN1bHR1cmVJbmZvAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlk
ZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVy
AGdldF9SZXNvdXJjZU1hbmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50
ZXIAZ2V0X0NvbXB1dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IALmN0b3IALmNjdG9y
AE1vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2Vz
AGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBs
aWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQu
VmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTZjZGM2ZDI0NTBjNGQ2NGIxZDEyMTg2MmI0YjI1NTEu
dmJwcm9qLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF9hNmNkYzZkMjQ1MGM0ZDY0YjFkMTIx
ODYyYjRiMjU1MS52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBNeVNl
dHRpbmdzAEVxdWFscwBSdW50aW1lSGVscGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBtX1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tSZXN1bHQAbV9Db250ZXh0AFNU
X2E2Y2RjNmQyNDUwYzRkNjRiMWQxMjE4NjJiNGIyNTUxLnZicHJvai5NeQBnZXRfQXNzZW1ibHkA
AAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAAAw1
bv32vuJClQWAF7xgSxAABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEO
Dg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgJkFIAASgJ0HIAIBDhKA
nQQAARwcBAABARwFIAASgKkEIAECHAMgAAgDIAAOBAcBHgACHgAFEAEAHgAECgEeAAQHARMABhUS
JAETAAcGFRJxARMABhUScQETAAITAAQKARMABSABARMACLd6XFYZNOCJCLA/X38R1Qo6CImEXc2A
gMyRBAAAAAAEAQAAAAcGFRIkARIMBwYVEiQBEggHBhUSJAESZQcGFRIkARIgAwYSeQMGEn0DBhIY
AgYcAgYIAwYRKAMAAAEEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAASGAQg
ABJtBxABAR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABIgBAgAEnkECAASfQQIABIYBCgA
EwAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAALwEAKlNU
X2E2Y2RjNmQyNDUwYzRkNjRiMWQxMjE4NjJiNGIyNTUxLnZicHJvagAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDE2AAAFAQABAAApAQAkZDkyZWUyOWEtZjRhYi00NDkyLWFmMTAtY2U0ZDdlOWY3
MDdmAAAMAQAHMS4wLjAuMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0CAEAAQAAAAAAGAEACk15VGVtcGxhdGUI
MTEuMC4wLjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVu
dFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015
LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2Vy
dmljZXMAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAAsNwAAAAAAAAAAAABGNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAODcAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAALAQAAAAAAAAAAAAALAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBIwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAAB+ACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AYQA2AGMAZABjADYAZAAyADQANQAwAGMANABkADYANABiADEAZAAxADIAMQA4ADYAMgBi
ADQAYgAyADUANQAxAC4AdgBiAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8A
bgAAAAAAMQAuADAALgAwAC4AMAAAAH4ALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AYQA2AGMAZABjADYAZAAyADQANQAwAGMANABkADYANABiADEAZAAxADIAMQA4ADYAMgBiADQA
YgAyADUANQAxAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAKgABAAEA
TABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAACGAC8AAQBPAHIAaQBnAGkAbgBh
AGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYQA2AGMAZABjADYAZAAyADQANQAwAGMANABkADYA
NABiADEAZAAxADIAMQA4ADYAMgBiADQAYgAyADUANQAxAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAA
AAAAdgArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBhADYAYwBkAGMANgBkADIA
NAA1ADAAYwA0AGQANgA0AGIAMQBkADEAMgAxADgANgAyAGIANABiADIANQA1ADEALgB2AGIAcABy
AG8AagAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4A
MAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAw
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAFg3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\シーケンス コンテナー\仕入先指標データ作成"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="スクリプト タスク"
          DTS:DTSID="{9E9F55E2-52D5-4100-BE27-C893F58FC0C1}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="仕入先指標データ作成"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_cbd20828325540598128df137d9f4b55"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::ConnectionString, User::CommandTimeout"
              ReadWriteVariables="User::ErrorMessage">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_cbd20828325540598128df137d9f4b55.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_cbd20828325540598128df137d9f4b55.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @  2015")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("874dac69-8008-4a4f-8f3c-99e25815a1cb")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="st_cbd20828325540598128df137d9f4b55.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_cbd20828325540598128df137d9f4b55.vbproj</RootNamespace>
    <AssemblyName>ST_cbd20828325540598128df137d9f4b55.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{6FFB2389-2BFA-4FDA-B36A-C31034136C4C}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_cbd20828325540598128df137d9f4b55</msb:CodeName>
		<msb:DisplayName>st_cbd20828325540598128df137d9f4b55</msb:DisplayName>
		<msb:ProjectId>{7B5AC28F-8371-40E1-86F3-8DF2B0C7572B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_cbd20828325540598128df137d9f4b55.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Collections.Generic
Imports System.Data.SqlClient
Imports System.IO
Imports System.Reflection
Imports System.Text
Imports System.Text.RegularExpressions
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

    Dim connectionString As String = String.Empty
    Dim commandTimeout As Integer = 0

    ''' <summary>
    ''' メイン処理を行います。
    ''' </summary>
    Public Sub Main()

        connectionString = Dts.Variables("ConnectionString").Value.ToString
        commandTimeout = CInt(Dts.Variables("CommandTimeout").Value.ToString)

        Dim msg As String = String.Empty

        Try
            'テンポラリテーブル (TmpSupplierPerformance) クリア
            TruncateTmpTable()

            'RFQ (Purpose: for New) データ格納
            MergeRFQForNew()

            'RFQ (Purpose: for New) 有額回答無データ格納
            MergeNoPriceRFQForNew()

            'RFQ (Purpose: for Stock or for Raw Material) データ格納
            MergeRFQForStock()

            'RFQ (Purpose: for Stock or for Raw Material) 有額回答無データ格納
            MergeNoPriceRFQForStock()

            'PO 全データ格納
            MergeParPO()

            'PO (Purpose: for New) データ格納
            MergeParPOForNew()

            'PO (Purpose: for Stock or for Raw Material) データ格納
            MergeParPOForStock()

            'PO キャンセルデータ格納
            MergePOCancel()

            'PO (TCI-S 製造部) データ格納
            MergeParPO2475()

            'PO 合格データ格納
            MergePOApproved()

            'PO (Purpose: for Raw Material) 合格データ格納
            MergePOApprovedForRM()

            'PO (Purpose: for Customer) 合格データ格納
            MergePOApprovedForCustomer()

            'PO 不合格データ格納
            MergePORejected()

            'PO (Purpose: for Raw Material) 不合格データ格納
            MergePORejectedForRM()

            'PO (Purpose: for Customer) 不合格データ格納
            MergePORejectedForCustomer()

        Catch ex As Exception
            Dts.TaskResult = ScriptResults.Failure
            SetErrorMessage(ex)

            Throw ex

        End Try

        Dts.TaskResult = ScriptResults.Success

    End Sub

    ''' <summary>
    ''' テンポラリテーブル (TmpSupplierPerformance) をクリアします。
    ''' </summary>
    Private Sub TruncateTmpTable()

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = "TRUNCATE TABLE TmpSupplierPerformance"
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' RFQ (Purpose: for New) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeRFQForNew()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        CONVERT(date, H.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        NULL AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        v_RFQCurrentStatus AS CS,")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        H.PurposeCode = 'N'")
        sqlStr.AppendLine("        AND H.RFQNumber = CS.RFQNumber")
        sqlStr.AppendLine("        AND (CS.StatusCode = 'Q'")
        sqlStr.AppendLine("            OR (CS.StatusCode = 'C' AND EXISTS (SELECT 1 FROM RFQHistory AS C WHERE C.RFQNumber = H.RFQNumber AND C.RFQStatusCode = 'Q')))")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L, v_RealPO AS P WHERE P.RFQLineNumber = L.RFQLineNumber AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        P.PONumber AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        v_RealPO AS P,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        H.PurposeCode = 'N'")
        sqlStr.AppendLine("        AND H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("        AND L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("        AND P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        P.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        v_RealPO AS P,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        H.PurposeCode <> 'N'")
        sqlStr.AppendLine("        AND H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("        AND L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("        AND P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND P.PurposeCode = 'N'")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("RFQ_forNew AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING RFQ_forNew AS QN ON (SP.SupplierCode = QN.SupplierCode AND SP.CreateDate = QN.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, QN) VALUES (QN.SupplierCode, QN.CreateDate, QN.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.QN = QN.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' RFQ (Purpose: for New) 有額回答無データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeNoPriceRFQForNew()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        CONVERT(date, H.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        NULL AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        v_RFQCurrentStatus AS CS,")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        H.PurposeCode = 'N'")
        sqlStr.AppendLine("        AND H.RFQNumber = CS.RFQNumber")
        sqlStr.AppendLine("        AND (CS.StatusCode = 'Q'")
        sqlStr.AppendLine("            OR (CS.StatusCode = 'C' AND EXISTS (SELECT 1 FROM RFQHistory AS C WHERE C.RFQNumber = H.RFQNumber AND C.RFQStatusCode = 'Q')))")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L, v_RealPO AS P WHERE P.RFQLineNumber = L.RFQLineNumber AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L WHERE L.RFQNumber = H.RFQNumber AND L.UnitPrice > 0")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("NoPriceRFQ_forNew AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING NoPriceRFQ_forNew AS NQN ON (SP.SupplierCode = NQN.SupplierCode AND SP.CreateDate = NQN.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, NQN) VALUES (NQN.SupplierCode, NQN.CreateDate, NQN.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.NQN = NQN.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' RFQ (Purpose: for Stock or for Raw Material) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeRFQForStock()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        CONVERT(date, H.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        NULL AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        v_RFQCurrentStatus AS CS,")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        (H.PurposeCode = 'S' OR H.PurposeCode = 'RM' OR H.PurposeCode = 'SD' OR H.PurposeCode = 'L')")
        sqlStr.AppendLine("        AND H.RFQNumber = CS.RFQNumber")
        sqlStr.AppendLine("        AND (CS.StatusCode = 'Q'")
        sqlStr.AppendLine("            OR (CS.StatusCode = 'C' AND EXISTS (SELECT 1 FROM RFQHistory AS C WHERE C.RFQNumber = H.RFQNumber AND C.RFQStatusCode = 'Q')))")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L, v_RealPO AS P WHERE P.RFQLineNumber = L.RFQLineNumber AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        P.PONumber AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        v_RealPO AS P,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        (H.PurposeCode = 'S' OR H.PurposeCode = 'RM' OR H.PurposeCode = 'SD' OR H.PurposeCode = 'L')")
        sqlStr.AppendLine("        AND H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("        AND L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("        AND P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND (P.PurposeCode <> 'N' OR P.PurposeCode IS NULL)")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    UNION")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        P.PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        v_RealPO AS P,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        (H.PurposeCode <> 'N' AND H.PurposeCode <> 'S' AND H.PurposeCode <> 'RM' AND H.PurposeCode <> 'SD' AND H.PurposeCode <> 'L')")
        sqlStr.AppendLine("        AND H.RFQNumber = L.RFQNumber")
        sqlStr.AppendLine("        AND L.RFQLineNumber = P.RFQLineNumber")
        sqlStr.AppendLine("        AND P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND (P.PurposeCode = 'S' OR P.PurposeCode = 'RM' OR P.PurposeCode = 'SD' OR P.PurposeCode = 'L')")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("RFQ_forStock AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING RFQ_forStock AS QS ON (SP.SupplierCode = QS.SupplierCode AND SP.CreateDate = QS.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, QS) VALUES (QS.SupplierCode, QS.CreateDate, QS.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.QS = QS.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' RFQ (Purpose: for Stock or for Raw Material) 有額回答無データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeNoPriceRFQForStock()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH BaseQuery AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        H.RFQNumber,")
        sqlStr.AppendLine("        CONVERT(date, H.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        NULL AS PONumber")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        v_RFQCurrentStatus AS CS,")
        sqlStr.AppendLine("        RFQHeader AS H")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        (H.PurposeCode = 'S' OR H.PurposeCode = 'RM' OR H.PurposeCode = 'SD' OR H.PurposeCode = 'L')")
        sqlStr.AppendLine("        AND H.RFQNumber = CS.RFQNumber")
        sqlStr.AppendLine("        AND (CS.StatusCode = 'Q'")
        sqlStr.AppendLine("            OR (CS.StatusCode = 'C' AND EXISTS (SELECT 1 FROM RFQHistory AS C WHERE C.RFQNumber = H.RFQNumber AND C.RFQStatusCode = 'Q')))")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L, v_RealPO AS P WHERE P.RFQLineNumber = L.RFQLineNumber AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("        AND NOT EXISTS (")
        sqlStr.AppendLine("            SELECT 1 FROM RFQLine AS L WHERE L.RFQNumber = H.RFQNumber AND L.UnitPrice > 0")
        sqlStr.AppendLine("        )")
        sqlStr.AppendLine("),")
        sqlStr.AppendLine("NoPriceRFQ_forStock AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        BaseQuery")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CreateDate,")
        sqlStr.AppendLine("        SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING NoPriceRFQ_forStock AS NQS ON (SP.SupplierCode = NQS.SupplierCode AND SP.CreateDate = NQS.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, NQS) VALUES (NQS.SupplierCode, NQS.CreateDate, NQS.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.NQS = NQS.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 全データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeParPO()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH ParPO AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO AS PP ON (SP.SupplierCode = PP.SupplierCode AND SP.CreateDate = PP.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PP) VALUES (PP.SupplierCode, PP.CreateDate, PP.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PP = PP.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO (Purpose: for New) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeParPOForNew()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH ParPO_forNew AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND (P.PurposeCode = 'N'")
        sqlStr.AppendLine("            OR (P.PurposeCode IS NULL AND H.PurposeCode = 'N'))")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO_forNew AS PPN ON (SP.SupplierCode = PPN.SupplierCode AND SP.CreateDate = PPN.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PPN) VALUES (PPN.SupplierCode, PPN.CreateDate, PPN.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PPN = PPN.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO (Purpose: for Stock or for Raw Material) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeParPOForStock()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH ParPO_forStock AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND ((P.PurposeCode = 'S' OR P.PurposeCode = 'RM' OR P.PurposeCode = 'SD' OR P.PurposeCode = 'L')")
        sqlStr.AppendLine("            OR (P.PurposeCode IS NULL AND (H.PurposeCode = 'S' OR H.PurposeCode = 'RM' OR H.PurposeCode = 'SD' OR H.PurposeCode = 'L')))")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO_forStock AS PPS ON (SP.SupplierCode = PPS.SupplierCode AND SP.CreateDate = PPS.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PPS) VALUES (PPS.SupplierCode, PPS.CreateDate, PPS.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PPS = PPS.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO キャンセルデータをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePOCancel()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH ParPO_Cancel AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_POCurrentStatus AS CS,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND P.PONumber = CS.PONumber")
        sqlStr.AppendLine("        AND (CS.StatusCode = 'PPC' OR CS.StatusCode = 'CPC')")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO_Cancel AS PPC ON (SP.SupplierCode = PPC.SupplierCode AND SP.CreateDate = PPC.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PPC) VALUES (PPC.SupplierCode, PPC.CreateDate, PPC.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PPC = PPC.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO (TCI-S 製造部) データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergeParPO2475()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH ParPO_2475 AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_POCurrentStatus AS CS,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.ParPONumber IS NULL")
        sqlStr.AppendLine("        AND P.PONumber = CS.PONumber")
        sqlStr.AppendLine("        AND CS.StatusCode <> 'PPC'")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND H.SupplierCode = 2475")
        sqlStr.AppendLine("        AND H.MakerCode = S.SupplierCode")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING ParPO_2475 AS PP2475 ON (SP.SupplierCode = PP2475.SupplierCode AND SP.CreateDate = PP2475.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PP2475) VALUES (PP2475.SupplierCode, PP2475.CreateDate, PP2475.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PP2475 = PP2475.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 合格データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePOApproved()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH PO_Approved AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_RealQM AS QM,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.PONumber = QM.PONumber")
        sqlStr.AppendLine("        AND QM.QMResult = 'A'")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING PO_Approved AS PA ON (SP.SupplierCode = PA.SupplierCode AND SP.CreateDate = PA.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PA) VALUES (PA.SupplierCode, PA.CreateDate, PA.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PA = PA.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 合格データ (Purpose: for Raw Material) をテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePOApprovedForRM()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH PO_Approved AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_RealQM AS QM,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.PONumber = QM.PONumber")
        sqlStr.AppendLine("        AND ((P.PurposeCode = 'RM')")
        sqlStr.AppendLine("            OR (P.PurposeCode IS NULL AND H.PurposeCode = 'RM'))")
        sqlStr.AppendLine("        AND QM.QMResult = 'A'")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING PO_Approved AS PAR ON (SP.SupplierCode = PAR.SupplierCode AND SP.CreateDate = PAR.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PAR) VALUES (PAR.SupplierCode, PAR.CreateDate, PAR.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PAR = PAR.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 合格データ (Purpose: for Customer) をテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePOApprovedForCustomer()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH PO_Approved AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_RealQM AS QM,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.PONumber = QM.PONumber")
        sqlStr.AppendLine("        AND ((P.PurposeCode = 'C')")
        sqlStr.AppendLine("            OR (P.PurposeCode IS NULL AND H.PurposeCode = 'C'))")
        sqlStr.AppendLine("        AND QM.QMResult = 'A'")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING PO_Approved AS PAC ON (SP.SupplierCode = PAC.SupplierCode AND SP.CreateDate = PAC.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PAC) VALUES (PAC.SupplierCode, PAC.CreateDate, PAC.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PAC = PAC.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 不合格データをテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePORejected()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH PO_Rejected AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_RealQM AS QM,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.PONumber = QM.PONumber")
        sqlStr.AppendLine("        AND QM.QMResult = 'R'")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING PO_Rejected AS PR ON (SP.SupplierCode = PR.SupplierCode AND SP.CreateDate = PR.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PR) VALUES (PR.SupplierCode, PR.CreateDate, PR.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PR= PR.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 不合格データ (Purpose: for Raw Material) をテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePORejectedForRM()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH PO_Rejected AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_RealQM AS QM,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.PONumber = QM.PONumber")
        sqlStr.AppendLine("        AND ((P.PurposeCode = 'RM')")
        sqlStr.AppendLine("            OR (P.PurposeCode IS NULL AND H.PurposeCode = 'RM'))")
        sqlStr.AppendLine("        AND QM.QMResult = 'R'")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING PO_Rejected AS PRR ON (SP.SupplierCode = PRR.SupplierCode AND SP.CreateDate = PRR.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PRR) VALUES (PRR.SupplierCode, PRR.CreateDate, PRR.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PRR = PRR.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' PO 不合格データ (Purpose: for Customer) をテンポラリテーブルに格納します。
    ''' </summary>
    Private Sub MergePORejectedForCustomer()

        Dim sqlStr As New StringBuilder
        sqlStr.AppendLine("WITH PO_Rejected AS (")
        sqlStr.AppendLine("    SELECT")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate) AS CreateDate,")
        sqlStr.AppendLine("        S.SupplierCode,")
        sqlStr.AppendLine("        COUNT(*) AS Cnt")
        sqlStr.AppendLine("    FROM")
        sqlStr.AppendLine("        Supplier AS S,")
        sqlStr.AppendLine("        RFQHeader AS H,")
        sqlStr.AppendLine("        RFQLine AS L,")
        sqlStr.AppendLine("        v_RealQM AS QM,")
        sqlStr.AppendLine("        v_RealPO AS P")
        sqlStr.AppendLine("    WHERE")
        sqlStr.AppendLine("        P.PONumber = QM.PONumber")
        sqlStr.AppendLine("        AND ((P.PurposeCode = 'C')")
        sqlStr.AppendLine("            OR (P.PurposeCode IS NULL AND H.PurposeCode = 'C'))")
        sqlStr.AppendLine("        AND QM.QMResult = 'R'")
        sqlStr.AppendLine("        AND P.RFQLineNumber = L.RFQLineNumber")
        sqlStr.AppendLine("        AND L.RFQNumber = H.RFQNumber")
        sqlStr.AppendLine("        AND (H.SupplierCode = S.SupplierCode OR (H.MakerCode = S.SupplierCode AND H.SupplierCode <> 2475))")
        sqlStr.AppendLine("    GROUP BY")
        sqlStr.AppendLine("        CONVERT(date, P.CreateDate),")
        sqlStr.AppendLine("        S.SupplierCode")
        sqlStr.AppendLine(")")
        sqlStr.AppendLine("MERGE TmpSupplierPerformance SP")
        sqlStr.AppendLine("    USING PO_Rejected AS PRC ON (SP.SupplierCode = PRC.SupplierCode AND SP.CreateDate = PRC.CreateDate)")
        sqlStr.AppendLine("WHEN NOT MATCHED THEN")
        sqlStr.AppendLine("    INSERT (SupplierCode, CreateDate, PRC) VALUES (PRC.SupplierCode, PRC.CreateDate, PRC.Cnt)")
        sqlStr.AppendLine("WHEN MATCHED THEN")
        sqlStr.AppendLine("    UPDATE SET SP.PRC = PRC.Cnt")
        sqlStr.AppendLine(";")

        Using sqlConn As SqlConnection = New SqlConnection(connectionString)

            sqlConn.Open()

            Using sqlCmd As SqlCommand = sqlConn.CreateCommand
                sqlCmd.CommandText = sqlStr.ToString
                sqlCmd.CommandTimeout = commandTimeout
                sqlCmd.ExecuteNonQuery()
            End Using

        End Using

    End Sub

    ''' <summary>
    ''' ユーザ変数にエラーメッセージを設定します。
    ''' </summary>
    Private Sub SetErrorMessage(ByVal ex As Exception)

        Dim sb_Msg As New StringBuilder

        sb_Msg.AppendLine("RFQ Analysis all data の出力においてシステムエラーが発生しました。")
        sb_Msg.AppendLine()
        sb_Msg.AppendLine("実行パス：")
        sb_Msg.AppendLine(System.Environment.CommandLine)
        sb_Msg.AppendLine()
        sb_Msg.AppendLine("エラーメッセージ：")

        If ex.InnerException Is Nothing Then
            sb_Msg.AppendLine(ex.Message)
            sb_Msg.AppendLine(ex.StackTrace)
        Else
            sb_Msg.AppendLine(ex.InnerException.Message)
            sb_Msg.AppendLine(ex.InnerException.StackTrace)
        End If

        Dts.Variables("ErrorMessage").Value = sb_Msg.ToString

    End Sub

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_cbd20828325540598128df137d9f4b55.vbproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHMkYFsAAAAAAAAAAOAAIiALAVAAAHYAAAAIAAAAAAAAlpQA
AAAgAAAAoAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAADgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAESUAABPAAAAAKAAAIgEAAAAAAAAAAAAAAAAAAAA
AAAAAMAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAnHQAAAAgAAAAdgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgEAAAAoAAAAAYAAAB4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAMAAAAACAAAAfgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB4
lAAAAAAAAEgAAAACAAUAdEUAABhOAAABAAAAAAAAAIyTAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAABmAigqAAAKAn4rAAAKfQkAAAQCFn0KAAAEKgAA
GzADAOAAAAABAAARAgIoLAAACm8tAAAKcjMAAHBvLgAACm8vAAAKbzAAAAp9CQAABAICKCwAAApv
LQAACnJVAABwby4AAApvLwAACm8wAAAKKDEAAAp9CgAABH4rAAAKJgIoEQAABgIoEgAABgIoEwAA
BgIoFAAABgIoFQAABgIoFgAABgIoFwAABgIoGAAABgIoGQAABgIoGgAABgIoGwAABgIoHAAABgIo
HQAABgIoHgAABgIoHwAABgIoIAAABt4cJSgyAAAKCgIoLAAAChdvMwAACgIGKCEAAAYGegIoLAAA
ChZvMwAACioBEAAAAABVAGK3ABwkAAABGzACAE4AAAACAAARAnsJAAAEczQAAAoKBm81AAAKBm82
AAAKCwdycwAAcG83AAAKBwJ7CgAABG84AAAKB285AAAKJt4UBywGB286AAAK3AYsBgZvOgAACtwq
AAABHAAAAgAZACA5AAoAAAAAAgAMADdDAAoAAAAAGzACAMEDAAADAAARczsAAAoKBnK/AABwbzwA
AAomBnLnAABwbzwAAAomBnL9AABwbzwAAAomBnInAQBwbzwAAAomBnKNAQBwbzwAAAomBnK9AQBw
bzwAAAomBnLvAQBwbzwAAAomBnIBAgBwbzwAAAomBnIvAgBwbzwAAAomBnJzAgBwbzwAAAomBnKh
AgBwbzwAAAomBnK1AgBwbzwAAAomBnLtAgBwbzwAAAomBnI7AwBwbzwAAAomBnJ9AwBwbzwAAAom
BnKUBABwbzwAAAomBnJrBQBwbzwAAAomBnKdBQBwbzwAAAomBnKWBgBwbzwAAAomBnKqBgBwbzwA
AAomBnLnAABwbzwAAAomBnL9AABwbzwAAAomBnK+BgBwbzwAAAomBnKNAQBwbzwAAAomBnIkBwBw
bzwAAAomBnLvAQBwbzwAAAomBnIBAgBwbzwAAAomBnJiBwBwbzwAAAomBnKQBwBwbzwAAAomBnJz
AgBwbzwAAAomBnKhAgBwbzwAAAomBnK1AgBwbzwAAAomBnK8BwBwbzwAAAomBnIICABwbzwAAAom
BnJkCABwbzwAAAomBnKUBABwbzwAAAomBnKqBgBwbzwAAAomBnLnAABwbzwAAAomBnL9AABwbzwA
AAomBnK+BgBwbzwAAAomBnKNAQBwbzwAAAomBnKoCABwbzwAAAomBnLvAQBwbzwAAAomBnIBAgBw
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
KAAAAAYAABECe0cAAApvSAAACgoGjAgAABstEigCAAArCgJ7RwAACgZvSQAACgYqSgIoIgAACgJz
SgAACn1HAAAKKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABoCQAAI34AANQJ
AACgCwAAI1N0cmluZ3MAAAAAdBUAANg0AAAjVVMATEoAABAAAAAjR1VJRAAAAFxKAAC8AwAAI0Js
b2IAAAAAAAAAAgAAAVcdogkJDwAAAPoBMwAWAAABAAAANQAAAAoAAAAOAAAAKgAAAAUAAABKAAAA
AgAAADcAAAAGAAAABAAAAAgAAAAJAAAACAAAAAEAAAAGAAAAAQAAAAMAAAADAAAAAgAAAAAAcwYB
AAAAAAAGADEEYgkGANYEYgkGAAgDowgPABYKAAAGAEkDLAcGABQELAcGAL0ELAcGAFEELAcGAGoE
LAcGAJADLAcGAIUEqwYGADUDHAkGALECHAkGANwDLAcGAKsDMAUKANQC9wcKAJwCXQYKABwDXQYO
AGwC8ggOAGMItggGAMQDowgOAGADOwkOAHgD6QAGAIQKqwYOAEkI8ggOAPkD6QAGAB8CqwYOAAEA
EwYKAL8CvAYGAN0HggkGAF8HFwcKAHwCAgcGAOsCowgSAJsE6gUSAFAC6gUGAFUHqwYWAD4HqQoW
AC0BqQoGAMsH7QoGALIGqwYGAL0BqwYGAH4LLAcGAFEKYgkGAJsIHwUGAF0FqwYSAEsG6gUaACkK
4QEaAKgB4QEOAEUKOwkOANQAOwkGALEBqwYGAL8KqwYGAIQIqwYAAAAAOgAAAAAAAQABAAAAAAD0
BkwLTQABAAEAAAAAAGEITAtRAAEAAgAAARAAiwpMC2EAAQADAAAAAADLCZMJYQAFAAgAAAEQADMK
ZAWBAAcADAABAAAA2QZkBY0ACQAPAAUBAADkCAAAYQALACIABQEAABAAAABhAAsAKQACAQAAcAoA
AKEADAArADEAlAdGATEAawdOATEAfwdWATEArQdeAREAbAhmAREARAJqAREA9ARuAREAfgpyAQEA
SgVvAAEA3gp1ASEACQsEAQYGwAB1AVaAYAp4AVaAJAJ4AVAgAAAAAAYYjggGAAEAWCAAAAAABhiO
CAYAAQBgIAAAAAARGJQIfAEBAIogAAAAABMIVAiAAQEAliAAAAAAEwjkBoUBAQCiIAAAAAATCEUI
igEBAK4gAAAAABMI1AiPAQEAuiAAAAAAAxiOCAYAAQDCIAAAAAAWCNkHlAEBAO4gAAAAABYILAKZ
AQEA9SAAAAAAFgg4Ap4BAQD9IAAAAAARGJQIfAECAA4hAAAAAAYYjggGAAIAGCEAAAAAFgj8BKQB
AgB0IQAAAAAGGI4IBgACAJAhAAAAAAYA3wYGAAIAjCIAAAAAAQCXAQYAAgAEIwAAAAABADoLBgAC
APAmAAAAAAEAJAsGAAIAXCkAAAAAAQC6BQYAAgBULQAAAAABAKIFBgACAMAvAAAAAAEAbQAGAAIA
eDEAAAAAAQATCwYAAgBIMwAAAAABAI8FBgACABg1AAAAAAEAPQYGAAIA9DYAAAAAAQArAAYAAgDc
OAAAAAABAA8BBgACAKw6AAAAAAEAWAAGAAIAlDwAAAAAAQAqCAYAAgB8PgAAAAABAP8ABgACAExA
AAAAAAEAQwAGAAIANEIAAAAAAQAPCAYAAgAcRAAAAAABAIcBqQECANVEAAAAAMYCPgrgAAMA40QA
AAAAxgJvAa4ABADrRAAAAACDABwCsAEEAPdEAAAAAMYCWwWPAAQAAEUAAAAAEQCtALUBBAAgRQAA
AAABAJkAvQEFALogAAAAAAYYjggGAAYALEUAAAAAAwhWAUoABgBgRQAAAAAGGI4IBgAGAAAAAQAZ
BQAAAQBJCwAAAQBpBwAAAQBmAQAAAQBmAQkAjggBABEAjggGABkAjggKACkAjggQADEAjggQADkA
jggQAEEAjggQAEkAjggQAFEAjggQAFkAjggVAGEAjggVAGkAjggQAHEAjggQAHkAjggQAIEAjgga
AJEAjgggAKkAjggGALEAjggGALkAjggGANEAjggmAOkAjggQAAkBjggGABEBjggGAJkAjggGAKEA
jggGAAwAjggGABQAjggGABwAjggGACQAjggGAAwAVgFKABQAVgFKABwAVgFKACQAVgFKAMEAjggG
ANkAzwFPANkAegtXAPEAjghdAFkBEAVlAAEBjggGAGEBTghqAGEBlQpqABkBjggGAGkBlwtvABkB
aAp4AHEBJQp+AHkBogaEAIEB/ASLAMEAWwWPAIkB7QeTAJEBdAiYAHEBmgoBACkBjggQACkBtwYG
ACkBHwGoADEB+QoQADEBywoBADEBhwuuAJkBlAIGADkBjggGADkBEQK+ADkBWwWPADkBEQLLAKEB
AQLRACEBTAfVACEBewGPACEBOAGPAIEBBgXbAMEAPgrgAMEAbwGuAKkBRwHtADQACQsEATwA/ARK
ADwABgUbATwAjggGAAgANAA8AQgAOABBASkAqwB0Ay4ACwDtAS4AEwD2AS4AGwAVAi4AIwAeAi4A
KwBOAi4AMwBOAi4AOwAeAi4AQwBUAi4ASwBOAi4AUwBrAi4AWwBOAi4AYwBxAi4AawCbAi4AcwCo
AkAAiwBBAUAAgwDwAkMAewD5AkMAgwDwAkkAqwCFA2MAewD5AmMAgwDwAmkAqwCZA4AAiwBBAYMA
kwBBAYMAmwBBAYMAewD5AokAqwCmA6AAiwBBAakAgwAVAsAAiwBBAckAgwAVAuAAiwBBAeMAuwBB
AeMAUwBOAukAswBBAQMBgwDwAgMBowASAyMBgwDwAiMBWwBOAkAEgwDwAkAEiwBBAWAEgwDwAmAE
iwBBAYAEgwDwAoAEiwBBAaAEgwDwAqAEiwBBAcAEiwBBAeAEiwBBAQAFiwBBAQAFgwDwAiAFiwBB
AUAFiwBBAUAFgwDwAnIAnwCyAMUA5QD4AAQAAQAFAAUABgAHAAkACAAAAGMIxQEAAPYGygEAAEkI
zwEAAOYI1AEAAN0H2QEAAEgC3gEAABkF4wEAAFoB6AECAAQAAwACAAUABQACAAYABwACAAcACQAC
AAkACwACAAoADQABAAsADQACAA4ADwACACkAEQAuADUAPABDAOoA/QAMARMBBIAAAAEAAAAAAAAA
AAAAAAAAZAUAAAQAAAAAAAAAAAAAACEB4AAAAAAABAAAAAAAAAAAAAAAIQGrBgAAAAAKAAAAAAAA
AAAAAAAqAekAAAAAAA0AAAAAAAAAAAAAADMBywUAAAAABAAAAAAAAAAAAAAAIQHIAAAAAAANAAAA
AAAAAAAAAAAzAXgAAAAAAAAAAAABAAAA1wkAAAgABAAJAAQACgAHAAAAEAASAJcAAAAQAE0AlwAA
AAAATwCXAI0A8wCNABYBAAAAAABDb250ZXh0VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlk
ZXJgMQBNZXJnZVBhclBPMjQ3NQA8TW9kdWxlPgBNZXJnZVBPUmVqZWN0ZWRGb3JSTQBNZXJnZVBP
QXBwcm92ZWRGb3JSTQBNZXJnZVBhclBPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBU
AERpc3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAHZhbHVlX18AU3lzdGVtLkRh
dGEAUHJvamVjdERhdGEAbXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAE1lcmdlUE9SZWpl
Y3RlZABNZXJnZVBPQXBwcm92ZWQAQ3JlYXRlQ29tbWFuZABTcWxDb21tYW5kAGdldF9TdGFja1Ry
YWNlAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBn
ZXRfTWVzc2FnZQBTZXRFcnJvck1lc3NhZ2UAVHJ1bmNhdGVUbXBUYWJsZQBWYXJpYWJsZQBJRGlz
cG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAGdldF9Db21tYW5kTGluZQBBcHBlbmRMaW5lAEdldFR5cGUARmFp
bHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bv
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0
ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVN
b2R1bGVOYW1lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9u
QXR0cmlidXRlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1Zh
bHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBjb25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAFNUX2NiZDIwODI4MzI1NTQwNTk4MTI4ZGYx
MzdkOWY0YjU1LnZicHJvagBNZXJnZVBhclBPRm9yU3RvY2sATWVyZ2VOb1ByaWNlUkZRRm9yU3Rv
Y2sATWVyZ2VSRlFGb3JTdG9jawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMu
TXlTZXJ2aWNlcy5JbnRlcm5hbABNZXJnZVBPQ2FuY2VsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3Rl
bS5Db21wb25lbnRNb2RlbABTVF9jYmQyMDgyODMyNTU0MDU5ODEyOGRmMTM3ZDlmNGI1NS52YnBy
b2ouZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAE9wZW4AU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRl
c2lnbgBTY3JpcHRNYWluAGdldF9BcHBsaWNhdGlvbgBNeUFwcGxpY2F0aW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNxbENvbm5l
Y3Rpb24AZ2V0X0lubmVyRXhjZXB0aW9uAEN1bHR1cmVJbmZvAG1fQXBwT2JqZWN0UHJvdmlkZXIA
bV9Vc2VyT2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2
aWNlc09iamVjdFByb3ZpZGVyAFN0cmluZ0J1aWxkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb0lu
dGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIATWVyZ2VQT1JlamVjdGVkRm9yQ3VzdG9tZXIA
TWVyZ2VQT0FwcHJvdmVkRm9yQ3VzdG9tZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVyAE15
Q29tcHV0ZXIAX3Jlc01ncgBTZXRQcm9qZWN0RXJyb3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBN
b25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBn
ZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGlj
YXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZp
c3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2NiZDIwODI4MzI1NTQwNTk4MTI4ZGYxMzdkOWY0YjU1LnZi
cHJvai5NeS5SZXNvdXJjZXMATXlSZXNvdXJjZXMAU1RfY2JkMjA4MjgzMjU1NDA1OTgxMjhkZjEz
N2Q5ZjRiNTUudmJwcm9qLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X1Zh
cmlhYmxlcwBNeVNldHRpbmdzAEVxdWFscwBDb252ZXJzaW9ucwBSdW50aW1lSGVscGVycwBTdWNj
ZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBtX1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0
X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AEVudmlyb25tZW50AHNldF9Db21tYW5k
VGltZW91dABjb21tYW5kVGltZW91dABTeXN0ZW0uVGV4dABzZXRfQ29tbWFuZFRleHQAbV9Db250
ZXh0AE1lcmdlUGFyUE9Gb3JOZXcATWVyZ2VOb1ByaWNlUkZRRm9yTmV3AE1lcmdlUkZRRm9yTmV3
AGV4AFNUX2NiZDIwODI4MzI1NTQwNTk4MTI4ZGYxMzdkOWY0YjU1LnZicHJvai5NeQBnZXRfQXNz
ZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AEVtcHR5AAAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMA
LgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAACFDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBn
AAAdQwBvAG0AbQBhAG4AZABUAGkAbQBlAG8AdQB0AABLVABSAFUATgBDAEEAVABFACAAVABBAEIA
TABFACAAVABtAHAAUwB1AHAAcABsAGkAZQByAFAAZQByAGYAbwByAG0AYQBuAGMAZQAAJ1cASQBU
AEgAIABCAGEAcwBlAFEAdQBlAHIAeQAgAEEAUwAgACgAABUgACAAIAAgAFMARQBMAEUAQwBUAAAp
IAAgACAAIAAgACAAIAAgAEgALgBSAEYAUQBOAHUAbQBiAGUAcgAsAABlIAAgACAAIAAgACAAIAAg
AEMATwBOAFYARQBSAFQAKABkAGEAdABlACwAIABIAC4AQwByAGUAYQB0AGUARABhAHQAZQApACAA
QQBTACAAQwByAGUAYQB0AGUARABhAHQAZQAsAAAvIAAgACAAIAAgACAAIAAgAFMALgBTAHUAcABw
AGwAaQBlAHIAQwBvAGQAZQAsAAAxIAAgACAAIAAgACAAIAAgAE4AVQBMAEwAIABBAFMAIABQAE8A
TgB1AG0AYgBlAHIAABEgACAAIAAgAEYAUgBPAE0AAC0gACAAIAAgACAAIAAgACAAUwB1AHAAcABs
AGkAZQByACAAQQBTACAAUwAsAABDIAAgACAAIAAgACAAIAAgAHYAXwBSAEYAUQBDAHUAcgByAGUA
bgB0AFMAdABhAHQAdQBzACAAQQBTACAAQwBTACwAAC0gACAAIAAgACAAIAAgACAAUgBGAFEASABl
AGEAZABlAHIAIABBAFMAIABIAAATIAAgACAAIABXAEgARQBSAEUAADcgACAAIAAgACAAIAAgACAA
SAAuAFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgAD0AIAAnAE4AJwABTSAAIAAgACAAIAAgACAAIABB
AE4ARAAgAEgALgBSAEYAUQBOAHUAbQBiAGUAcgAgAD0AIABDAFMALgBSAEYAUQBOAHUAbQBiAGUA
cgAAQSAAIAAgACAAIAAgACAAIABBAE4ARAAgACgAQwBTAC4AUwB0AGEAdAB1AHMAQwBvAGQAZQAg
AD0AIAAnAFEAJwABgRUgACAAIAAgACAAIAAgACAAIAAgACAAIABPAFIAIAAoAEMAUwAuAFMAdABh
AHQAdQBzAEMAbwBkAGUAIAA9ACAAJwBDACcAIABBAE4ARAAgAEUAWABJAFMAVABTACAAKABTAEUA
TABFAEMAVAAgADEAIABGAFIATwBNACAAUgBGAFEASABpAHMAdABvAHIAeQAgAEEAUwAgAEMAIABX
AEgARQBSAEUAIABDAC4AUgBGAFEATgB1AG0AYgBlAHIAIAA9ACAASAAuAFIARgBRAE4AdQBtAGIA
ZQByACAAQQBOAEQAIABDAC4AUgBGAFEAUwB0AGEAdAB1AHMAQwBvAGQAZQAgAD0AIAAnAFEAJwAp
ACkAKQABgNUgACAAIAAgACAAIAAgACAAQQBOAEQAIAAoAEgALgBTAHUAcABwAGwAaQBlAHIAQwBv
AGQAZQAgAD0AIABTAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABPAFIAIAAoAEgALgBNAGEA
awBlAHIAQwBvAGQAZQAgAD0AIABTAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABBAE4ARAAg
AEgALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgADwAPgAgADIANAA3ADUAKQApAAAxIAAgACAA
IAAgACAAIAAgAEEATgBEACAATgBPAFQAIABFAFgASQBTAFQAUwAgACgAAID3IAAgACAAIAAgACAA
IAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAxACAARgBSAE8ATQAgAFIARgBRAEwAaQBuAGUAIABB
AFMAIABMACwAIAB2AF8AUgBlAGEAbABQAE8AIABBAFMAIABQACAAVwBIAEUAUgBFACAAUAAuAFIA
RgBRAEwAaQBuAGUATgB1AG0AYgBlAHIAIAA9ACAATAAuAFIARgBRAEwAaQBuAGUATgB1AG0AYgBl
AHIAIABBAE4ARAAgAEwALgBSAEYAUQBOAHUAbQBiAGUAcgAgAD0AIABIAC4AUgBGAFEATgB1AG0A
YgBlAHIAABMgACAAIAAgACAAIAAgACAAKQAAEyAAIAAgACAAVQBOAEkATwBOAABlIAAgACAAIAAg
ACAAIAAgAEMATwBOAFYARQBSAFQAKABkAGEAdABlACwAIABQAC4AQwByAGUAYQB0AGUARABhAHQA
ZQApACAAQQBTACAAQwByAGUAYQB0AGUARABhAHQAZQAsAAA9IAAgACAAIAAgACAAIAAgAFAALgBQ
AE8ATgB1AG0AYgBlAHIAIABBAFMAIABQAE8ATgB1AG0AYgBlAHIAAC0gACAAIAAgACAAIAAgACAA
dgBfAFIAZQBhAGwAUABPACAAQQBTACAAUAAsAAArIAAgACAAIAAgACAAIAAgAFIARgBRAEwAaQBu
AGUAIABBAFMAIABMACwAAEsgACAAIAAgACAAIAAgACAAQQBOAEQAIABIAC4AUgBGAFEATgB1AG0A
YgBlAHIAIAA9ACAATAAuAFIARgBRAE4AdQBtAGIAZQByAABbIAAgACAAIAAgACAAIAAgAEEATgBE
ACAATAAuAFIARgBRAEwAaQBuAGUATgB1AG0AYgBlAHIAIAA9ACAAUAAuAFIARgBRAEwAaQBuAGUA
TgB1AG0AYgBlAHIAAEMgACAAIAAgACAAIAAgACAAQQBOAEQAIABQAC4AUABhAHIAUABPAE4AdQBt
AGIAZQByACAASQBTACAATgBVAEwATAAAJSAAIAAgACAAIAAgACAAIABQAC4AUABPAE4AdQBtAGIA
ZQByAAA5IAAgACAAIAAgACAAIAAgAEgALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA8AD4AIAAn
AE4AJwABPyAAIAAgACAAIAAgACAAIABBAE4ARAAgAFAALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUA
IAA9ACAAJwBOACcAAQUpACwAAB9SAEYAUQBfAGYAbwByAE4AZQB3ACAAQQBTACAAKAAAJyAAIAAg
ACAAIAAgACAAIABDAHIAZQBhAHQAZQBEAGEAdABlACwAACsgACAAIAAgACAAIAAgACAAUwB1AHAA
cABsAGkAZQByAEMAbwBkAGUALAAALyAAIAAgACAAIAAgACAAIABDAE8AVQBOAFQAKAAqACkAIABB
AFMAIABDAG4AdAAAIyAAIAAgACAAIAAgACAAIABCAGEAcwBlAFEAdQBlAHIAeQAAGSAAIAAgACAA
RwBSAE8AVQBQACAAQgBZAAApIAAgACAAIAAgACAAIAAgAFMAdQBwAHAAbABpAGUAcgBDAG8AZABl
AAADKQAAP00ARQBSAEcARQAgAFQAbQBwAFMAdQBwAHAAbABpAGUAcgBQAGUAcgBmAG8AcgBtAGEA
bgBjAGUAIABTAFAAAIDHIAAgACAAIABVAFMASQBOAEcAIABSAEYAUQBfAGYAbwByAE4AZQB3ACAA
QQBTACAAUQBOACAATwBOACAAKABTAFAALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAD0AIABR
AE4ALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEATgBEACAAUwBQAC4AQwByAGUAYQB0AGUA
RABhAHQAZQAgAD0AIABRAE4ALgBDAHIAZQBhAHQAZQBEAGEAdABlACkAACtXAEgARQBOACAATgBP
AFQAIABNAEEAVABDAEgARQBEACAAVABIAEUATgAAgLMgACAAIAAgAEkATgBTAEUAUgBUACAAKABT
AHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAQwByAGUAYQB0AGUARABhAHQAZQAsACAAUQBOACkA
IABWAEEATABVAEUAUwAgACgAUQBOAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUALAAgAFEATgAu
AEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAFEATgAuAEMAbgB0ACkAACNXAEgARQBOACAATQBBAFQA
QwBIAEUARAAgAFQASABFAE4AADsgACAAIAAgAFUAUABEAEEAVABFACAAUwBFAFQAIABTAFAALgBR
AE4AIAA9ACAAUQBOAC4AQwBuAHQAAAM7AACAtSAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBM
AEUAQwBUACAAMQAgAEYAUgBPAE0AIABSAEYAUQBMAGkAbgBlACAAQQBTACAATAAgAFcASABFAFIA
RQAgAEwALgBSAEYAUQBOAHUAbQBiAGUAcgAgAD0AIABIAC4AUgBGAFEATgB1AG0AYgBlAHIAIABB
AE4ARAAgAEwALgBVAG4AaQB0AFAAcgBpAGMAZQAgAD4AIAAwAAAtTgBvAFAAcgBpAGMAZQBSAEYA
UQBfAGYAbwByAE4AZQB3ACAAQQBTACAAKAAAgNsgACAAIAAgAFUAUwBJAE4ARwAgAE4AbwBQAHIA
aQBjAGUAUgBGAFEAXwBmAG8AcgBOAGUAdwAgAEEAUwAgAE4AUQBOACAATwBOACAAKABTAFAALgBT
AHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAD0AIABOAFEATgAuAFMAdQBwAHAAbABpAGUAcgBDAG8A
ZABlACAAQQBOAEQAIABTAFAALgBDAHIAZQBhAHQAZQBEAGEAdABlACAAPQAgAE4AUQBOAC4AQwBy
AGUAYQB0AGUARABhAHQAZQApAACAuyAAIAAgACAASQBOAFMARQBSAFQAIAAoAFMAdQBwAHAAbABp
AGUAcgBDAG8AZABlACwAIABDAHIAZQBhAHQAZQBEAGEAdABlACwAIABOAFEATgApACAAVgBBAEwA
VQBFAFMAIAAoAE4AUQBOAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUALAAgAE4AUQBOAC4AQwBy
AGUAYQB0AGUARABhAHQAZQAsACAATgBRAE4ALgBDAG4AdAApAAA/IAAgACAAIABVAFAARABBAFQA
RQAgAFMARQBUACAAUwBQAC4ATgBRAE4AIAA9ACAATgBRAE4ALgBDAG4AdAAAgMkgACAAIAAgACAA
IAAgACAAKABIAC4AUAB1AHIAcABvAHMAZQBDAG8AZABlACAAPQAgACcAUwAnACAATwBSACAASAAu
AFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgAD0AIAAnAFIATQAnACAATwBSACAASAAuAFAAdQByAHAA
bwBzAGUAQwBvAGQAZQAgAD0AIAAnAFMARAAnACAATwBSACAASAAuAFAAdQByAHAAbwBzAGUAQwBv
AGQAZQAgAD0AIAAnAEwAJwApAAF3IAAgACAAIAAgACAAIAAgAEEATgBEACAAKABQAC4AUAB1AHIA
cABvAHMAZQBDAG8AZABlACAAPAA+ACAAJwBOACcAIABPAFIAIABQAC4AUAB1AHIAcABvAHMAZQBD
AG8AZABlACAASQBTACAATgBVAEwATAApAAGBCSAAIAAgACAAIAAgACAAIAAoAEgALgBQAHUAcgBw
AG8AcwBlAEMAbwBkAGUAIAA8AD4AIAAnAE4AJwAgAEEATgBEACAASAAuAFAAdQByAHAAbwBzAGUA
QwBvAGQAZQAgADwAPgAgACcAUwAnACAAQQBOAEQAIABIAC4AUAB1AHIAcABvAHMAZQBDAG8AZABl
ACAAPAA+ACAAJwBSAE0AJwAgAEEATgBEACAASAAuAFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgADwA
PgAgACcAUwBEACcAIABBAE4ARAAgAEgALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA8AD4AIAAn
AEwAJwApAAGA0SAAIAAgACAAIAAgACAAIABBAE4ARAAgACgAUAAuAFAAdQByAHAAbwBzAGUAQwBv
AGQAZQAgAD0AIAAnAFMAJwAgAE8AUgAgAFAALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA9ACAA
JwBSAE0AJwAgAE8AUgAgAFAALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA9ACAAJwBTAEQAJwAg
AE8AUgAgAFAALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA9ACAAJwBMACcAKQABI1IARgBRAF8A
ZgBvAHIAUwB0AG8AYwBrACAAQQBTACAAKAAAgMsgACAAIAAgAFUAUwBJAE4ARwAgAFIARgBRAF8A
ZgBvAHIAUwB0AG8AYwBrACAAQQBTACAAUQBTACAATwBOACAAKABTAFAALgBTAHUAcABwAGwAaQBl
AHIAQwBvAGQAZQAgAD0AIABRAFMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEATgBEACAA
UwBQAC4AQwByAGUAYQB0AGUARABhAHQAZQAgAD0AIABRAFMALgBDAHIAZQBhAHQAZQBEAGEAdABl
ACkAAICzIAAgACAAIABJAE4AUwBFAFIAVAAgACgAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUALAAg
AEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAFEAUwApACAAVgBBAEwAVQBFAFMAIAAoAFEAUwAuAFMA
dQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABRAFMALgBDAHIAZQBhAHQAZQBEAGEAdABlACwAIABR
AFMALgBDAG4AdAApAAA7IAAgACAAIABVAFAARABBAFQARQAgAFMARQBUACAAUwBQAC4AUQBTACAA
PQAgAFEAUwAuAEMAbgB0AAAxTgBvAFAAcgBpAGMAZQBSAEYAUQBfAGYAbwByAFMAdABvAGMAawAg
AEEAUwAgACgAAIDfIAAgACAAIABVAFMASQBOAEcAIABOAG8AUAByAGkAYwBlAFIARgBRAF8AZgBv
AHIAUwB0AG8AYwBrACAAQQBTACAATgBRAFMAIABPAE4AIAAoAFMAUAAuAFMAdQBwAHAAbABpAGUA
cgBDAG8AZABlACAAPQAgAE4AUQBTAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABBAE4ARAAg
AFMAUAAuAEMAcgBlAGEAdABlAEQAYQB0AGUAIAA9ACAATgBRAFMALgBDAHIAZQBhAHQAZQBEAGEA
dABlACkAAIC7IAAgACAAIABJAE4AUwBFAFIAVAAgACgAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUA
LAAgAEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAE4AUQBTACkAIABWAEEATABVAEUAUwAgACgATgBR
AFMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAATgBRAFMALgBDAHIAZQBhAHQAZQBEAGEA
dABlACwAIABOAFEAUwAuAEMAbgB0ACkAAD8gACAAIAAgAFUAUABEAEEAVABFACAAUwBFAFQAIABT
AFAALgBOAFEAUwAgAD0AIABOAFEAUwAuAEMAbgB0AAAfVwBJAFQASAAgAFAAYQByAFAATwAgAEEA
UwAgACgAAC8gACAAIAAgACAAIAAgACAAUgBGAFEASABlAGEAZABlAHIAIABBAFMAIABIACwAACsg
ACAAIAAgACAAIAAgACAAdgBfAFIAZQBhAGwAUABPACAAQQBTACAAUAAAOyAAIAAgACAAIAAgACAA
IABQAC4AUABhAHIAUABPAE4AdQBtAGIAZQByACAASQBTACAATgBVAEwATAAAWyAAIAAgACAAIAAg
ACAAIABBAE4ARAAgAFAALgBSAEYAUQBMAGkAbgBlAE4AdQBtAGIAZQByACAAPQAgAEwALgBSAEYA
UQBMAGkAbgBlAE4AdQBtAGIAZQByAABLIAAgACAAIAAgACAAIAAgAEEATgBEACAATAAuAFIARgBR
AE4AdQBtAGIAZQByACAAPQAgAEgALgBSAEYAUQBOAHUAbQBiAGUAcgAASSAAIAAgACAAIAAgACAA
IABDAE8ATgBWAEUAUgBUACgAZABhAHQAZQAsACAAUAAuAEMAcgBlAGEAdABlAEQAYQB0AGUAKQAs
AAAtIAAgACAAIAAgACAAIAAgAFMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAAgL0gACAAIAAg
AFUAUwBJAE4ARwAgAFAAYQByAFAATwAgAEEAUwAgAFAAUAAgAE8ATgAgACgAUwBQAC4AUwB1AHAA
cABsAGkAZQByAEMAbwBkAGUAIAA9ACAAUABQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABB
AE4ARAAgAFMAUAAuAEMAcgBlAGEAdABlAEQAYQB0AGUAIAA9ACAAUABQAC4AQwByAGUAYQB0AGUA
RABhAHQAZQApAACAsyAAIAAgACAASQBOAFMARQBSAFQAIAAoAFMAdQBwAHAAbABpAGUAcgBDAG8A
ZABlACwAIABDAHIAZQBhAHQAZQBEAGEAdABlACwAIABQAFAAKQAgAFYAQQBMAFUARQBTACAAKABQ
AFAALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAUABQAC4AQwByAGUAYQB0AGUARABhAHQA
ZQAsACAAUABQAC4AQwBuAHQAKQAAOyAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAu
AFAAUAAgAD0AIABQAFAALgBDAG4AdAAALVcASQBUAEgAIABQAGEAcgBQAE8AXwBmAG8AcgBOAGUA
dwAgAEEAUwAgACgAAEEgACAAIAAgACAAIAAgACAAQQBOAEQAIAAoAFAALgBQAHUAcgBwAG8AcwBl
AEMAbwBkAGUAIAA9ACAAJwBOACcAAX8gACAAIAAgACAAIAAgACAAIAAgACAAIABPAFIAIAAoAFAA
LgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIABJAFMAIABOAFUATABMACAAQQBOAEQAIABIAC4AUAB1
AHIAcABvAHMAZQBDAG8AZABlACAAPQAgACcATgAnACkAKQABgNEgACAAIAAgAFUAUwBJAE4ARwAg
AFAAYQByAFAATwBfAGYAbwByAE4AZQB3ACAAQQBTACAAUABQAE4AIABPAE4AIAAoAFMAUAAuAFMA
dQBwAHAAbABpAGUAcgBDAG8AZABlACAAPQAgAFAAUABOAC4AUwB1AHAAcABsAGkAZQByAEMAbwBk
AGUAIABBAE4ARAAgAFMAUAAuAEMAcgBlAGEAdABlAEQAYQB0AGUAIAA9ACAAUABQAE4ALgBDAHIA
ZQBhAHQAZQBEAGEAdABlACkAAIC7IAAgACAAIABJAE4AUwBFAFIAVAAgACgAUwB1AHAAcABsAGkA
ZQByAEMAbwBkAGUALAAgAEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAFAAUABOACkAIABWAEEATABV
AEUAUwAgACgAUABQAE4ALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAUABQAE4ALgBDAHIA
ZQBhAHQAZQBEAGEAdABlACwAIABQAFAATgAuAEMAbgB0ACkAAD8gACAAIAAgAFUAUABEAEEAVABF
ACAAUwBFAFQAIABTAFAALgBQAFAATgAgAD0AIABQAFAATgAuAEMAbgB0AAAxVwBJAFQASAAgAFAA
YQByAFAATwBfAGYAbwByAFMAdABvAGMAawAgAEEAUwAgACgAAIDTIAAgACAAIAAgACAAIAAgAEEA
TgBEACAAKAAoAFAALgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA9ACAAJwBTACcAIABPAFIAIABQ
AC4AUAB1AHIAcABvAHMAZQBDAG8AZABlACAAPQAgACcAUgBNACcAIABPAFIAIABQAC4AUAB1AHIA
cABvAHMAZQBDAG8AZABlACAAPQAgACcAUwBEACcAIABPAFIAIABQAC4AUAB1AHIAcABvAHMAZQBD
AG8AZABlACAAPQAgACcATAAnACkAAYERIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBSACAAKABQ
AC4AUAB1AHIAcABvAHMAZQBDAG8AZABlACAASQBTACAATgBVAEwATAAgAEEATgBEACAAKABIAC4A
UAB1AHIAcABvAHMAZQBDAG8AZABlACAAPQAgACcAUwAnACAATwBSACAASAAuAFAAdQByAHAAbwBz
AGUAQwBvAGQAZQAgAD0AIAAnAFIATQAnACAATwBSACAASAAuAFAAdQByAHAAbwBzAGUAQwBvAGQA
ZQAgAD0AIAAnAFMARAAnACAATwBSACAASAAuAFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgAD0AIAAn
AEwAJwApACkAKQABgNUgACAAIAAgAFUAUwBJAE4ARwAgAFAAYQByAFAATwBfAGYAbwByAFMAdABv
AGMAawAgAEEAUwAgAFAAUABTACAATwBOACAAKABTAFAALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQA
ZQAgAD0AIABQAFAAUwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAQQBOAEQAIABTAFAALgBD
AHIAZQBhAHQAZQBEAGEAdABlACAAPQAgAFAAUABTAC4AQwByAGUAYQB0AGUARABhAHQAZQApAACA
uyAAIAAgACAASQBOAFMARQBSAFQAIAAoAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABDAHIA
ZQBhAHQAZQBEAGEAdABlACwAIABQAFAAUwApACAAVgBBAEwAVQBFAFMAIAAoAFAAUABTAC4AUwB1
AHAAcABsAGkAZQByAEMAbwBkAGUALAAgAFAAUABTAC4AQwByAGUAYQB0AGUARABhAHQAZQAsACAA
UABQAFMALgBDAG4AdAApAAA/IAAgACAAIABVAFAARABBAFQARQAgAFMARQBUACAAUwBQAC4AUABQ
AFMAIAA9ACAAUABQAFMALgBDAG4AdAAALVcASQBUAEgAIABQAGEAcgBQAE8AXwBDAGEAbgBjAGUA
bAAgAEEAUwAgACgAAEEgACAAIAAgACAAIAAgACAAdgBfAFAATwBDAHUAcgByAGUAbgB0AFMAdABh
AHQAdQBzACAAQQBTACAAQwBTACwAAEkgACAAIAAgACAAIAAgACAAQQBOAEQAIABQAC4AUABPAE4A
dQBtAGIAZQByACAAPQAgAEMAUwAuAFAATwBOAHUAbQBiAGUAcgAAeSAAIAAgACAAIAAgACAAIABB
AE4ARAAgACgAQwBTAC4AUwB0AGEAdAB1AHMAQwBvAGQAZQAgAD0AIAAnAFAAUABDACcAIABPAFIA
IABDAFMALgBTAHQAYQB0AHUAcwBDAG8AZABlACAAPQAgACcAQwBQAEMAJwApAAGA0SAAIAAgACAA
VQBTAEkATgBHACAAUABhAHIAUABPAF8AQwBhAG4AYwBlAGwAIABBAFMAIABQAFAAQwAgAE8ATgAg
ACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAAUABQAEMALgBTAHUAcABwAGwA
aQBlAHIAQwBvAGQAZQAgAEEATgBEACAAUwBQAC4AQwByAGUAYQB0AGUARABhAHQAZQAgAD0AIABQ
AFAAQwAuAEMAcgBlAGEAdABlAEQAYQB0AGUAKQAAgLsgACAAIAAgAEkATgBTAEUAUgBUACAAKABT
AHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAQwByAGUAYQB0AGUARABhAHQAZQAsACAAUABQAEMA
KQAgAFYAQQBMAFUARQBTACAAKABQAFAAQwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABQ
AFAAQwAuAEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAFAAUABDAC4AQwBuAHQAKQAAPyAAIAAgACAA
VQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFAAUABDACAAPQAgAFAAUABDAC4AQwBuAHQAAClX
AEkAVABIACAAUABhAHIAUABPAF8AMgA0ADcANQAgAEEAUwAgACgAAEUgACAAIAAgACAAIAAgACAA
QQBOAEQAIABDAFMALgBTAHQAYQB0AHUAcwBDAG8AZABlACAAPAA+ACAAJwBQAFAAQwAnAAFDIAAg
ACAAIAAgACAAIAAgAEEATgBEACAASAAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACAAPQAgADIA
NAA3ADUAAFEgACAAIAAgACAAIAAgACAAQQBOAEQAIABIAC4ATQBhAGsAZQByAEMAbwBkAGUAIAA9
ACAAUwAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlAACA3yAAIAAgACAAVQBTAEkATgBHACAAUABh
AHIAUABPAF8AMgA0ADcANQAgAEEAUwAgAFAAUAAyADQANwA1ACAATwBOACAAKABTAFAALgBTAHUA
cABwAGwAaQBlAHIAQwBvAGQAZQAgAD0AIABQAFAAMgA0ADcANQAuAFMAdQBwAHAAbABpAGUAcgBD
AG8AZABlACAAQQBOAEQAIABTAFAALgBDAHIAZQBhAHQAZQBEAGEAdABlACAAPQAgAFAAUAAyADQA
NwA1AC4AQwByAGUAYQB0AGUARABhAHQAZQApAACA0yAAIAAgACAASQBOAFMARQBSAFQAIAAoAFMA
dQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABDAHIAZQBhAHQAZQBEAGEAdABlACwAIABQAFAAMgA0
ADcANQApACAAVgBBAEwAVQBFAFMAIAAoAFAAUAAyADQANwA1AC4AUwB1AHAAcABsAGkAZQByAEMA
bwBkAGUALAAgAFAAUAAyADQANwA1AC4AQwByAGUAYQB0AGUARABhAHQAZQAsACAAUABQADIANAA3
ADUALgBDAG4AdAApAABLIAAgACAAIABVAFAARABBAFQARQAgAFMARQBUACAAUwBQAC4AUABQADIA
NAA3ADUAIAA9ACAAUABQADIANAA3ADUALgBDAG4AdAAAK1cASQBUAEgAIABQAE8AXwBBAHAAcABy
AG8AdgBlAGQAIABBAFMAIAAoAAAvIAAgACAAIAAgACAAIAAgAHYAXwBSAGUAYQBsAFEATQAgAEEA
UwAgAFEATQAsAABBIAAgACAAIAAgACAAIAAgAFAALgBQAE8ATgB1AG0AYgBlAHIAIAA9ACAAUQBN
AC4AUABPAE4AdQBtAGIAZQByAAA7IAAgACAAIAAgACAAIAAgAEEATgBEACAAUQBNAC4AUQBNAFIA
ZQBzAHUAbAB0ACAAPQAgACcAQQAnAAGAySAAIAAgACAAVQBTAEkATgBHACAAUABPAF8AQQBwAHAA
cgBvAHYAZQBkACAAQQBTACAAUABBACAATwBOACAAKABTAFAALgBTAHUAcABwAGwAaQBlAHIAQwBv
AGQAZQAgAD0AIABQAEEALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEATgBEACAAUwBQAC4A
QwByAGUAYQB0AGUARABhAHQAZQAgAD0AIABQAEEALgBDAHIAZQBhAHQAZQBEAGEAdABlACkAAICz
IAAgACAAIABJAE4AUwBFAFIAVAAgACgAUwB1AHAAcABsAGkAZQByAEMAbwBkAGUALAAgAEMAcgBl
AGEAdABlAEQAYQB0AGUALAAgAFAAQQApACAAVgBBAEwAVQBFAFMAIAAoAFAAQQAuAFMAdQBwAHAA
bABpAGUAcgBDAG8AZABlACwAIABQAEEALgBDAHIAZQBhAHQAZQBEAGEAdABlACwAIABQAEEALgBD
AG4AdAApAAA7IAAgACAAIABVAFAARABBAFQARQAgAFMARQBUACAAUwBQAC4AUABBACAAPQAgAFAA
QQAuAEMAbgB0AABHIAAgACAAIAAgACAAIAAgAEEATgBEACAAKAAoAFAALgBQAHUAcgBwAG8AcwBl
AEMAbwBkAGUAIAA9ACAAJwBSAE0AJwApAAGAgSAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgAg
ACgAUAAuAFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgAEkAUwAgAE4AVQBMAEwAIABBAE4ARAAgAEgA
LgBQAHUAcgBwAG8AcwBlAEMAbwBkAGUAIAA9ACAAJwBSAE0AJwApACkAAYDPIAAgACAAIABVAFMA
SQBOAEcAIABQAE8AXwBBAHAAcAByAG8AdgBlAGQAIABBAFMAIABQAEEAUgAgAE8ATgAgACgAUwBQ
AC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAAUABBAFIALgBTAHUAcABwAGwAaQBlAHIA
QwBvAGQAZQAgAEEATgBEACAAUwBQAC4AQwByAGUAYQB0AGUARABhAHQAZQAgAD0AIABQAEEAUgAu
AEMAcgBlAGEAdABlAEQAYQB0AGUAKQAAgLsgACAAIAAgAEkATgBTAEUAUgBUACAAKABTAHUAcABw
AGwAaQBlAHIAQwBvAGQAZQAsACAAQwByAGUAYQB0AGUARABhAHQAZQAsACAAUABBAFIAKQAgAFYA
QQBMAFUARQBTACAAKABQAEEAUgAuAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABQAEEAUgAu
AEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAFAAQQBSAC4AQwBuAHQAKQAAPyAAIAAgACAAVQBQAEQA
QQBUAEUAIABTAEUAVAAgAFMAUAAuAFAAQQBSACAAPQAgAFAAQQBSAC4AQwBuAHQAAEUgACAAIAAg
ACAAIAAgACAAQQBOAEQAIAAoACgAUAAuAFAAdQByAHAAbwBzAGUAQwBvAGQAZQAgAD0AIAAnAEMA
JwApAAF/IAAgACAAIAAgACAAIAAgACAAIAAgACAATwBSACAAKABQAC4AUAB1AHIAcABvAHMAZQBD
AG8AZABlACAASQBTACAATgBVAEwATAAgAEEATgBEACAASAAuAFAAdQByAHAAbwBzAGUAQwBvAGQA
ZQAgAD0AIAAnAEMAJwApACkAAYDPIAAgACAAIABVAFMASQBOAEcAIABQAE8AXwBBAHAAcAByAG8A
dgBlAGQAIABBAFMAIABQAEEAQwAgAE8ATgAgACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBk
AGUAIAA9ACAAUABBAEMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEATgBEACAAUwBQAC4A
QwByAGUAYQB0AGUARABhAHQAZQAgAD0AIABQAEEAQwAuAEMAcgBlAGEAdABlAEQAYQB0AGUAKQAA
gLsgACAAIAAgAEkATgBTAEUAUgBUACAAKABTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAQwBy
AGUAYQB0AGUARABhAHQAZQAsACAAUABBAEMAKQAgAFYAQQBMAFUARQBTACAAKABQAEEAQwAuAFMA
dQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABQAEEAQwAuAEMAcgBlAGEAdABlAEQAYQB0AGUALAAg
AFAAQQBDAC4AQwBuAHQAKQAAPyAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFAA
QQBDACAAPQAgAFAAQQBDAC4AQwBuAHQAACtXAEkAVABIACAAUABPAF8AUgBlAGoAZQBjAHQAZQBk
ACAAQQBTACAAKAAAOyAAIAAgACAAIAAgACAAIABBAE4ARAAgAFEATQAuAFEATQBSAGUAcwB1AGwA
dAAgAD0AIAAnAFIAJwABgMkgACAAIAAgAFUAUwBJAE4ARwAgAFAATwBfAFIAZQBqAGUAYwB0AGUA
ZAAgAEEAUwAgAFAAUgAgAE8ATgAgACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9
ACAAUABSAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIABBAE4ARAAgAFMAUAAuAEMAcgBlAGEA
dABlAEQAYQB0AGUAIAA9ACAAUABSAC4AQwByAGUAYQB0AGUARABhAHQAZQApAACAsyAAIAAgACAA
SQBOAFMARQBSAFQAIAAoAFMAdQBwAHAAbABpAGUAcgBDAG8AZABlACwAIABDAHIAZQBhAHQAZQBE
AGEAdABlACwAIABQAFIAKQAgAFYAQQBMAFUARQBTACAAKABQAFIALgBTAHUAcABwAGwAaQBlAHIA
QwBvAGQAZQAsACAAUABSAC4AQwByAGUAYQB0AGUARABhAHQAZQAsACAAUABSAC4AQwBuAHQAKQAA
OSAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFAAUgA9ACAAUABSAC4AQwBuAHQA
AIDPIAAgACAAIABVAFMASQBOAEcAIABQAE8AXwBSAGUAagBlAGMAdABlAGQAIABBAFMAIABQAFIA
UgAgAE8ATgAgACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAAUABSAFIALgBT
AHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEATgBEACAAUwBQAC4AQwByAGUAYQB0AGUARABhAHQA
ZQAgAD0AIABQAFIAUgAuAEMAcgBlAGEAdABlAEQAYQB0AGUAKQAAgLsgACAAIAAgAEkATgBTAEUA
UgBUACAAKABTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAQwByAGUAYQB0AGUARABhAHQAZQAs
ACAAUABSAFIAKQAgAFYAQQBMAFUARQBTACAAKABQAFIAUgAuAFMAdQBwAHAAbABpAGUAcgBDAG8A
ZABlACwAIABQAFIAUgAuAEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAFAAUgBSAC4AQwBuAHQAKQAA
PyAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFAAUgBSACAAPQAgAFAAUgBSAC4A
QwBuAHQAAIDPIAAgACAAIABVAFMASQBOAEcAIABQAE8AXwBSAGUAagBlAGMAdABlAGQAIABBAFMA
IABQAFIAQwAgAE8ATgAgACgAUwBQAC4AUwB1AHAAcABsAGkAZQByAEMAbwBkAGUAIAA9ACAAUABS
AEMALgBTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAgAEEATgBEACAAUwBQAC4AQwByAGUAYQB0AGUA
RABhAHQAZQAgAD0AIABQAFIAQwAuAEMAcgBlAGEAdABlAEQAYQB0AGUAKQAAgLsgACAAIAAgAEkA
TgBTAEUAUgBUACAAKABTAHUAcABwAGwAaQBlAHIAQwBvAGQAZQAsACAAQwByAGUAYQB0AGUARABh
AHQAZQAsACAAUABSAEMAKQAgAFYAQQBMAFUARQBTACAAKABQAFIAQwAuAFMAdQBwAHAAbABpAGUA
cgBDAG8AZABlACwAIABQAFIAQwAuAEMAcgBlAGEAdABlAEQAYQB0AGUALAAgAFAAUgBDAC4AQwBu
AHQAKQAAPyAAIAAgACAAVQBQAEQAQQBUAEUAIABTAEUAVAAgAFMAUAAuAFAAUgBDACAAPQAgAFAA
UgBDAC4AQwBuAHQAAFlSAEYAUQAgAEEAbgBhAGwAeQBzAGkAcwAgAGEAbABsACAAZABhAHQAYQAg
AG4w+lGbUmswSjBEMGYwtzC5MMYw4DCoMOkw/DBMMHp2H3VXMH4wVzBfMAIwAQufW0yI0TC5MBr/
AROoMOkw/DDhMMMwuzD8MLgwGv8BGUUAcgByAG8AcgBNAGUAcwBzAGEAZwBlAAAAAAAFMo9kL2Xw
QK4LpWacul+pAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYV
EiQBEgwGFRIkARIIBhUSJAESZQYVEiQBEiAEIAATAAcAARJtEYClBSAAEoCpByACAQ4SgKkEAAEc
HAQAAQEcAgYOBQcBEoCRBSAAEoC5BSAAEoC9BiABEoDBHAMgABwDIAAOBAABCA4GAAEBEoCRCAcC
EoCVEoCZBSAAEoCZAyAACAsHAxKAnRKAlRKAmQYgARKAnQ4FBwESgJ0FIAASgJ0DAAAOBSAAEoCR
BCABARwEIAECHAQHAR4AAh4ABRABAB4ABAoBHgAEBwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwAC
EwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/EdUKOgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAES
DAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMGEnkDBhJ9AwYSGAIGHAIGCAMGESgDAAABBAAAEgwE
AAASCAQAABJlBAAAEiAEAAASeQQAABJ9BQABARJ9BAAAEhgGIAEBEoCRBCAAEm0HEAEBHgAeAAcw
AQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAvAQAqU1RfY2JkMjA4MjgzMjU1
NDA1OTgxMjhkZjEzN2Q5ZjRiNTUudmJwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTUA
AAUBAAEAACkBACQ4NzRkYWM2OS04MDA4LTRhNGYtOGYzYy05OWUyNTgxNWExY2IAAAwBAAcxLjAu
MC4wAABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDQIAQABAAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEA
NFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3Jl
YXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMB
AA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAbJQAAAAAAAAAAAAAhpQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHiUAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAA
AAABAAAAAABIAAAAWKAAACwEAAAAAAAAAAAAACwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJ
AE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAA
AAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABh
AHQAaQBvAG4AAAAAAAAAsASMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABoAwAA
AQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBv
AG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAfgArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQA
aQBvAG4AAAAAAFMAVABfAGMAYgBkADIAMAA4ADIAOAAzADIANQA1ADQAMAA1ADkAOAAxADIAOABk
AGYAMQAzADcAZAA5AGYANABiADUANQAuAHYAYgBwAHIAbwBqAAAAAAAwAAgAAQBGAGkAbABlAFYA
ZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAAB+AC8AAQBJAG4AdABlAHIAbgBhAGwATgBh
AG0AZQAAAFMAVABfAGMAYgBkADIAMAA4ADIAOAAzADIANQA1ADQAMAA1ADkAOAAxADIAOABkAGYA
MQAzADcAZAA5AGYANABiADUANQAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAAAEgAEgABAEwAZQBn
AGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEA
NQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAhgAvAAEATwBy
AGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGMAYgBkADIAMAA4ADIAOAAzADIA
NQA1ADQAMAA1ADkAOAAxADIAOABkAGYAMQAzADcAZAA5AGYANABiADUANQAuAHYAYgBwAHIAbwBq
AC4AZABsAGwAAAAAAHYAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AYwBiAGQA
MgAwADgAMgA4ADMAMgA1ADUANAAwADUAOQA4ADEAMgA4AGQAZgAxADMANwBkADkAZgA0AGIANQA1
AC4AdgBiAHAAcgBvAGoAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAwA
AACYNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\シーケンス コンテナー.PrecedenceConstraints[制約]"
          DTS:CreationName=""
          DTS:DTSID="{D29D1B7A-6E2D-4CC2-93F3-13FF0C138D80}"
          DTS:From="Package\シーケンス コンテナー\仕入先指標データ作成"
          DTS:LogicalAnd="True"
          DTS:ObjectName="制約"
          DTS:To="Package\シーケンス コンテナー\仕入先ランクデータ作成" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\シーケンス コンテナー.PrecedenceConstraints[制約 1]"
          DTS:CreationName=""
          DTS:DTSID="{D27811C5-4832-4195-83AB-40D26155ADE9}"
          DTS:From="Package\シーケンス コンテナー\仕入先ランクデータ作成"
          DTS:LogicalAnd="True"
          DTS:ObjectName="制約 1"
          DTS:To="Package\シーケンス コンテナー\エクセルファイル出力" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[制約]"
      DTS:CreationName=""
      DTS:DTSID="{1880F197-7A51-4B88-972A-D7B61AE1DDAF}"
      DTS:From="Package\シーケンス コンテナー"
      DTS:LogicalAnd="True"
      DTS:ObjectName="制約"
      DTS:To="Package\エラーメール送信"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--この CDATA セクションにはパッケージのレイアウト情報が含まれています。(x,y) 座標、幅、高さなどの情報が含まれます。-->
<!--このセクションを手動で編集して間違った場合は、セクションを削除できます。-->
<!--パッケージは正常に読み込むことができますが、以前のレイアウト情報は失われ、デザイン画面上の要素が自動的に再配置されます。-->
<Objects
  Version="8">
  <!--次の各ノードには、実行時の動作に影響しないプロパティが含まれます。-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="174,42"
          Id="Package\シーケンス コンテナー\エクセルファイル出力"
          TopLeft="55.8867924528302,199.361635489174" />
        <NodeLayout
          Size="192,42"
          Id="Package\シーケンス コンテナー\仕入先ランクデータ作成"
          TopLeft="48.8867924528302,119.13364790098" />
        <NodeLayout
          Size="191,42"
          Id="Package\シーケンス コンテナー\仕入先指標データ作成"
          TopLeft="38.7358490566038,33.2437107187288" />
        <EdgeLayout
          Id="Package\シーケンス コンテナー.PrecedenceConstraints[制約]"
          TopLeft="134.235849056604,75.2437107187288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.6509433962264,43.8899371822514"
              Start="0,0"
              End="10.6509433962264,36.3899371822514">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.9449685911257" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.9449685911257"
                    Point2="0,21.9449685911257"
                    Point3="4,21.9449685911257" />
                  <mssgle:LineSegment
                    End="6.65094339622641,21.9449685911257" />
                  <mssgle:CubicBezierSegment
                    Point1="6.65094339622641,21.9449685911257"
                    Point2="10.6509433962264,21.9449685911257"
                    Point3="10.6509433962264,25.9449685911257" />
                  <mssgle:LineSegment
                    End="10.6509433962264,36.3899371822514" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\シーケンス コンテナー.PrecedenceConstraints[制約 1]"
          TopLeft="143.88679245283,161.13364790098">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.2279875881939"
              Start="0,0"
              End="0,30.7279875881939">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.7279875881939" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="278,283"
          Size="278,327"
          Id="Package\シーケンス コンテナー"
          TopLeft="82.5,29.3333332149519" />
        <NodeLayout
          Size="158,42"
          Id="Package\エラーメール送信"
          TopLeft="455,125.666666042474" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[制約]"
          TopLeft="360.5,192.833333214952">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="94.5,-46.1666671724783"
              Start="0,0"
              End="87,-46.1666671724783">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.25,0" />
                  <mssgle:CubicBezierSegment
                    Point1="43.25,0"
                    Point2="47.25,0"
                    Point3="47.25,-4" />
                  <mssgle:LineSegment
                    End="47.25,-42.1666671724783" />
                  <mssgle:CubicBezierSegment
                    Point1="47.25,-42.1666671724783"
                    Point2="47.25,-46.1666671724783"
                    Point3="51.25,-46.1666671724783" />
                  <mssgle:LineSegment
                    End="87,-46.1666671724783" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="36.77490234375,1,20.9501953125,10.9892578125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>